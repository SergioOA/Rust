{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0","program":"C:\\Users\\sergi\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","naga","--edition=2018","C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=d017bcd200423abd","-C","extra-filename=-d017bcd200423abd","--out-dir","c:\\Users\\sergi\\Desktop\\Rust\\isometric\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\sergi\\Desktop\\Rust\\isometric\\target\\rls\\debug\\deps","--extern","bit_set=c:\\Users\\sergi\\Desktop\\Rust\\isometric\\target\\rls\\debug\\deps\\libbit_set-a49ba9e8be2676a8.rmeta","--extern","bitflags=c:\\Users\\sergi\\Desktop\\Rust\\isometric\\target\\rls\\debug\\deps\\libbitflags-119d3dde1facfd5c.rmeta","--extern","fxhash=c:\\Users\\sergi\\Desktop\\Rust\\isometric\\target\\rls\\debug\\deps\\libfxhash-8723af4cb7370947.rmeta","--extern","log=c:\\Users\\sergi\\Desktop\\Rust\\isometric\\target\\rls\\debug\\deps\\liblog-426e82032e1efc24.rmeta","--extern","num_traits=c:\\Users\\sergi\\Desktop\\Rust\\isometric\\target\\rls\\debug\\deps\\libnum_traits-297befecaba3c9be.rmeta","--extern","thiserror=c:\\Users\\sergi\\Desktop\\Rust\\isometric\\target\\rls\\debug\\deps\\libthiserror-38005e1b5bc85bb0.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\sergi\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\sergi\\Desktop\\Rust\\isometric\\target\\rls\\debug\\deps\\libnaga-d017bcd200423abd.rmeta"},"prelude":{"crate_id":{"name":"naga","disambiguator":[17196750163906597543,0]},"crate_root":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src","external_crates":[{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","num":16,"id":{"name":"thiserror","disambiguator":[1769565904096745701,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","num":17,"id":{"name":"thiserror_impl","disambiguator":[4616757799413605361,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","num":18,"id":{"name":"bit_set","disambiguator":[5585856997285675628,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","num":19,"id":{"name":"bit_vec","disambiguator":[15540447192776056237,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\front\\mod.rs","num":20,"id":{"name":"log","disambiguator":[500290388089087630,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\front\\mod.rs","num":21,"id":{"name":"cfg_if","disambiguator":[17941200006019888196,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","num":22,"id":{"name":"bitflags","disambiguator":[3297404274272602299,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","num":23,"id":{"name":"fxhash","disambiguator":[12266767315980423606,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","num":24,"id":{"name":"byteorder","disambiguator":[7485636545642705259,0]}}],"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":0,"byte_end":36866,"line_start":1,"line_end":1146,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":51589,"byte_end":51598,"line_start":9,"line_end":9,"column_start":20,"column_end":29},"alias_span":null,"name":"Alignment","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":876},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":51600,"byte_end":51615,"line_start":9,"line_end":9,"column_start":31,"column_end":46},"alias_span":null,"name":"InvalidBaseType","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":877},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":51600,"byte_end":51615,"line_start":9,"line_end":9,"column_start":31,"column_end":46},"alias_span":null,"name":"InvalidBaseType","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":858},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":51617,"byte_end":51625,"line_start":9,"line_end":9,"column_start":48,"column_end":56},"alias_span":null,"name":"Layouter","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":843},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":51627,"byte_end":51637,"line_start":9,"line_end":9,"column_start":58,"column_end":68},"alias_span":null,"name":"TypeLayout","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":51656,"byte_end":51671,"line_start":10,"line_end":10,"column_start":17,"column_end":32},"alias_span":null,"name":"EntryPointIndex","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":879},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":51673,"byte_end":51680,"line_start":10,"line_end":10,"column_start":34,"column_end":41},"alias_span":null,"name":"NameKey","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":51682,"byte_end":51687,"line_start":10,"line_end":10,"column_start":43,"column_end":48},"alias_span":null,"name":"Namer","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":51710,"byte_end":51730,"line_start":11,"line_end":11,"column_start":21,"column_end":41},"alias_span":null,"name":"ensure_block_returns","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":51751,"byte_end":51765,"line_start":12,"line_end":12,"column_start":20,"column_end":34},"alias_span":null,"name":"ResolveContext","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":947},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":51767,"byte_end":51779,"line_start":12,"line_end":12,"column_start":36,"column_end":48},"alias_span":null,"name":"ResolveError","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":934},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":51781,"byte_end":51795,"line_start":12,"line_end":12,"column_start":50,"column_end":64},"alias_span":null,"name":"TypeResolution","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":1306},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":110902,"byte_end":110916,"line_start":19,"line_end":19,"column_start":20,"column_end":34},"alias_span":null,"name":"ExpressionInfo","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":1315},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":110918,"byte_end":110930,"line_start":19,"line_end":19,"column_start":36,"column_end":48},"alias_span":null,"name":"FunctionInfo","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":1192},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":110932,"byte_end":110941,"line_start":19,"line_end":19,"column_start":50,"column_end":59},"alias_span":null,"name":"GlobalUse","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":110943,"byte_end":110953,"line_start":19,"line_end":19,"column_start":61,"column_end":71},"alias_span":null,"name":"Uniformity","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":996},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":110955,"byte_end":110977,"line_start":19,"line_end":19,"column_start":73,"column_end":95},"alias_span":null,"name":"UniformityRequirements","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":1341},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":110997,"byte_end":111009,"line_start":20,"line_end":20,"column_start":18,"column_end":30},"alias_span":null,"name":"ComposeError","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":1367},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":111031,"byte_end":111046,"line_start":21,"line_end":21,"column_start":21,"column_end":36},"alias_span":null,"name":"ExpressionError","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":1525},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":111067,"byte_end":111076,"line_start":22,"line_end":22,"column_start":20,"column_end":29},"alias_span":null,"name":"CallError","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":1577},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":111078,"byte_end":111091,"line_start":22,"line_end":22,"column_start":31,"column_end":44},"alias_span":null,"name":"FunctionError","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":1567},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":111093,"byte_end":111111,"line_start":22,"line_end":22,"column_start":46,"column_end":64},"alias_span":null,"name":"LocalVariableError","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":1811},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":111134,"byte_end":111149,"line_start":23,"line_end":23,"column_start":21,"column_end":36},"alias_span":null,"name":"EntryPointError","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":1742},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":111151,"byte_end":111170,"line_start":23,"line_end":23,"column_start":38,"column_end":57},"alias_span":null,"name":"GlobalVariableError","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":1773},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":111172,"byte_end":111184,"line_start":23,"line_end":23,"column_start":59,"column_end":71},"alias_span":null,"name":"VaryingError","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":1968},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":111204,"byte_end":111216,"line_start":24,"line_end":24,"column_start":18,"column_end":30},"alias_span":null,"name":"Disalignment","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":1996},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":111218,"byte_end":111227,"line_start":24,"line_end":24,"column_start":32,"column_end":41},"alias_span":null,"name":"TypeError","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":1861},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":111229,"byte_end":111238,"line_start":24,"line_end":24,"column_start":43,"column_end":52},"alias_span":null,"name":"TypeFlags","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":5685,"byte_end":5690,"line_start":134,"line_end":134,"column_start":24,"column_end":29},"alias_span":null,"name":"Arena","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":5692,"byte_end":5698,"line_start":134,"line_end":134,"column_start":31,"column_end":37},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":5700,"byte_end":5705,"line_start":134,"line_end":134,"column_start":39,"column_end":44},"alias_span":null,"name":"Range","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":0,"byte_end":36866,"line_start":1,"line_end":1146,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":109},{"krate":0,"index":117},{"krate":0,"index":148},{"krate":0,"index":357},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":818},{"krate":0,"index":821},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":828},{"krate":0,"index":830},{"krate":0,"index":2441},{"krate":0,"index":2443},{"krate":0,"index":2445},{"krate":0,"index":2446},{"krate":0,"index":2448},{"krate":0,"index":2451},{"krate":0,"index":2452},{"krate":0,"index":2454},{"krate":0,"index":2456},{"krate":0,"index":2457},{"krate":0,"index":2460},{"krate":0,"index":2462},{"krate":0,"index":2469},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2474},{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2480},{"krate":0,"index":2482},{"krate":0,"index":2483},{"krate":0,"index":2485},{"krate":0,"index":2487},{"krate":0,"index":2494},{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2499},{"krate":0,"index":2502},{"krate":0,"index":2503},{"krate":0,"index":2505},{"krate":0,"index":2507},{"krate":0,"index":2508},{"krate":0,"index":2510},{"krate":0,"index":2512},{"krate":0,"index":2527},{"krate":0,"index":2529},{"krate":0,"index":2530},{"krate":0,"index":2532},{"krate":0,"index":2535},{"krate":0,"index":2536},{"krate":0,"index":2538},{"krate":0,"index":2540},{"krate":0,"index":2541},{"krate":0,"index":2543},{"krate":0,"index":2545},{"krate":0,"index":2580},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2585},{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2591},{"krate":0,"index":2593},{"krate":0,"index":2594},{"krate":0,"index":2596},{"krate":0,"index":831},{"krate":0,"index":2598},{"krate":0,"index":2608},{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2613},{"krate":0,"index":2616},{"krate":0,"index":2617},{"krate":0,"index":2619},{"krate":0,"index":2621},{"krate":0,"index":2622},{"krate":0,"index":2624},{"krate":0,"index":2626},{"krate":0,"index":2635},{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2640},{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":2646},{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2651},{"krate":0,"index":2653},{"krate":0,"index":2659},{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2664},{"krate":0,"index":2667},{"krate":0,"index":2668},{"krate":0,"index":2670},{"krate":0,"index":2672},{"krate":0,"index":2673},{"krate":0,"index":2676},{"krate":0,"index":2678},{"krate":0,"index":2685},{"krate":0,"index":2687},{"krate":0,"index":2688},{"krate":0,"index":2690},{"krate":0,"index":2693},{"krate":0,"index":2694},{"krate":0,"index":2696},{"krate":0,"index":2698},{"krate":0,"index":2699},{"krate":0,"index":2701},{"krate":0,"index":2703},{"krate":0,"index":2710},{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2715},{"krate":0,"index":2718},{"krate":0,"index":2719},{"krate":0,"index":2721},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2726},{"krate":0,"index":2728},{"krate":0,"index":2733},{"krate":0,"index":2735},{"krate":0,"index":2737},{"krate":0,"index":2738},{"krate":0,"index":2741},{"krate":0,"index":2750},{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2755},{"krate":0,"index":2758},{"krate":0,"index":2759},{"krate":0,"index":2761},{"krate":0,"index":2763},{"krate":0,"index":2764},{"krate":0,"index":2766},{"krate":0,"index":2770},{"krate":0,"index":2772},{"krate":0,"index":2773},{"krate":0,"index":2774},{"krate":0,"index":2777},{"krate":0,"index":2778},{"krate":0,"index":2780},{"krate":0,"index":2782},{"krate":0,"index":2784},{"krate":0,"index":2786},{"krate":0,"index":2768},{"krate":0,"index":2789},{"krate":0,"index":2795},{"krate":0,"index":2797},{"krate":0,"index":2799},{"krate":0,"index":2801},{"krate":0,"index":2803},{"krate":0,"index":2825},{"krate":0,"index":2828},{"krate":0,"index":2830},{"krate":0,"index":2833},{"krate":0,"index":2835},{"krate":0,"index":2838},{"krate":0,"index":2840},{"krate":0,"index":2843},{"krate":0,"index":2845},{"krate":0,"index":2848},{"krate":0,"index":2851},{"krate":0,"index":2862},{"krate":0,"index":2927},{"krate":0,"index":2929},{"krate":0,"index":2930},{"krate":0,"index":2932},{"krate":0,"index":2935},{"krate":0,"index":2936},{"krate":0,"index":2938},{"krate":0,"index":2940},{"krate":0,"index":2941},{"krate":0,"index":2943},{"krate":0,"index":2945},{"krate":0,"index":2954},{"krate":0,"index":2956},{"krate":0,"index":2957},{"krate":0,"index":2959},{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":2965},{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":2971},{"krate":0,"index":2973},{"krate":0,"index":2976},{"krate":0,"index":2978},{"krate":0,"index":2979},{"krate":0,"index":2982},{"krate":0,"index":3016},{"krate":0,"index":3018},{"krate":0,"index":3019},{"krate":0,"index":3022},{"krate":0,"index":3026},{"krate":0,"index":3028},{"krate":0,"index":3029},{"krate":0,"index":3032},{"krate":0,"index":3045},{"krate":0,"index":3047},{"krate":0,"index":3049},{"krate":0,"index":3050},{"krate":0,"index":3052},{"krate":0,"index":3059},{"krate":0,"index":3061},{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3067},{"krate":0,"index":3075},{"krate":0,"index":3077},{"krate":0,"index":3079},{"krate":0,"index":3080},{"krate":0,"index":3083},{"krate":0,"index":3086},{"krate":0,"index":3088},{"krate":0,"index":3090},{"krate":0,"index":3093},{"krate":0,"index":3094},{"krate":0,"index":3097},{"krate":0,"index":3104},{"krate":0,"index":3106},{"krate":0,"index":3108},{"krate":0,"index":3109},{"krate":0,"index":3112},{"krate":0,"index":3116},{"krate":0,"index":3118},{"krate":0,"index":3120},{"krate":0,"index":3125},{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3130},{"krate":0,"index":3133},{"krate":0,"index":3134},{"krate":0,"index":3136},{"krate":0,"index":3138},{"krate":0,"index":3139},{"krate":0,"index":3141},{"krate":0,"index":3143},{"krate":0,"index":3180},{"krate":0,"index":3182},{"krate":0,"index":3183},{"krate":0,"index":3185},{"krate":0,"index":3188},{"krate":0,"index":3189},{"krate":0,"index":3191},{"krate":0,"index":3193},{"krate":0,"index":3194},{"krate":0,"index":3196},{"krate":0,"index":3198},{"krate":0,"index":3205},{"krate":0,"index":3207},{"krate":0,"index":3208},{"krate":0,"index":3210},{"krate":0,"index":3213},{"krate":0,"index":3214},{"krate":0,"index":3216},{"krate":0,"index":3218},{"krate":0,"index":3219},{"krate":0,"index":3221},{"krate":0,"index":3223},{"krate":0,"index":3236},{"krate":0,"index":3238},{"krate":0,"index":3239},{"krate":0,"index":3241},{"krate":0,"index":3244},{"krate":0,"index":3245},{"krate":0,"index":3247},{"krate":0,"index":3249},{"krate":0,"index":3250},{"krate":0,"index":3252},{"krate":0,"index":3254},{"krate":0,"index":3351},{"krate":0,"index":3353},{"krate":0,"index":3354},{"krate":0,"index":3356},{"krate":0,"index":3359},{"krate":0,"index":3360},{"krate":0,"index":3362},{"krate":0,"index":3364},{"krate":0,"index":3365},{"krate":0,"index":3367},{"krate":0,"index":3369},{"krate":0,"index":3383},{"krate":0,"index":3385},{"krate":0,"index":3386},{"krate":0,"index":3388},{"krate":0,"index":3389},{"krate":0,"index":3392},{"krate":0,"index":3401},{"krate":0,"index":3403},{"krate":0,"index":3404},{"krate":0,"index":3406},{"krate":0,"index":3407},{"krate":0,"index":3410},{"krate":0,"index":3423},{"krate":0,"index":3425},{"krate":0,"index":3426},{"krate":0,"index":3428},{"krate":0,"index":3429},{"krate":0,"index":3433},{"krate":0,"index":3435},{"krate":0,"index":3436},{"krate":0,"index":3437},{"krate":0,"index":3440},{"krate":0,"index":3441},{"krate":0,"index":3443},{"krate":0,"index":3445},{"krate":0,"index":3447},{"krate":0,"index":3449},{"krate":0,"index":3431},{"krate":0,"index":3452},{"krate":0,"index":3458},{"krate":0,"index":3460},{"krate":0,"index":3462},{"krate":0,"index":3464},{"krate":0,"index":3466},{"krate":0,"index":3488},{"krate":0,"index":3491},{"krate":0,"index":3493},{"krate":0,"index":3496},{"krate":0,"index":3498},{"krate":0,"index":3501},{"krate":0,"index":3503},{"krate":0,"index":3506},{"krate":0,"index":3508},{"krate":0,"index":3511},{"krate":0,"index":3514},{"krate":0,"index":3525},{"krate":0,"index":3605},{"krate":0,"index":3607},{"krate":0,"index":832},{"krate":0,"index":3609},{"krate":0,"index":3613},{"krate":0,"index":3615},{"krate":0,"index":3617},{"krate":0,"index":3658},{"krate":0,"index":3660},{"krate":0,"index":3662},{"krate":0,"index":3666},{"krate":0,"index":3668},{"krate":0,"index":3670},{"krate":0,"index":3673},{"krate":0,"index":3675},{"krate":0,"index":3677},{"krate":0,"index":3685},{"krate":0,"index":3687},{"krate":0,"index":3689},{"krate":0,"index":3696},{"krate":0,"index":3698},{"krate":0,"index":3704},{"krate":0,"index":3706}],"decl_id":null,"docs":" Universal shader translator.","sig":null,"attributes":[{"value":"* Universal shader translator.\n\nThe central structure of the crate is [`Module`]. A `Module` contains:\n\n- [`EntryPoint`]s, the main functions for pipeline stages like vertex shading or\n  fragment shading,\n\n- [`Function`]s, representing functions used by `EntryPoint`s and other `Function`s,\n\n- [`Constant`]s and [`GlobalVariable`]s used by `EntryPoint`s and `Function`s, and\n\n- [`Type`]s used by the above.\n\nThe body of an `EntryPoint` or `Function` is represented using two types:\n\n- An [`Expression`] produces a value, but has no side effects or control flow.\n  `Expressions` include variable references, unary and binary operators, and so\n  on.\n\n- A [`Statement`] can have side effects and structured control flow.\n  `Statement`s do not produce a value, other than by storing one in some\n  designated place. `Statements` include blocks, conditionals, and loops, but also\n  operations that have side effects, like stores and function calls.\n\n`Statement`s form a tree, with pointers into the DAG of `Expression`s.\n\nRestricting side effects to statements simplifies analysis and code generation.\nA Naga backend can generate code to evaluate an `Expression` however and\nwhenever it pleases, as long as it is certain to observe the side effects of all\npreviously executed `Statement`s.\n\nMany `Statement` variants use the [`Block`] type, which is simply `Vec<Block>`,\nrepresenting a series of statements executed in order. The body of an\n`EntryPoint`s or `Function` is a `Block`, and `Statement` has a\n[`Block`][Statement::Block] variant.\n\nTo improve translator performance and reduce memory usage, most structures are\nstored in an [`Arena`]. An `Arena<T>` stores a series of `T` values, indexed by\n[`Handle<T>`](Handle) values, which are just wrappers around integer indexes.\nFor example, a `Function`'s expressions are stored in an `Arena<Expression>`,\nand compound expressions refer to their sub-expressions via `Handle<Expression>`\nvalues. (When examining the serialized form of a `Module`, note that the first\nelement of an `Arena` has an index of 1, not 0.)\n\n## Function Calls\n\nThe Naga IR's representation of function calls is unusual. Most languages treat\nfunction calls as expressions, but because calls may have side effects, Naga\nrepresents them with [`Statement::Call`]. A call statement may designate a\nparticular `Expression` to represent its return value, if any, which can be used\nby subsequent statements and their expressions.\n\n## `Expression` evaluation time and scope\n\nWhile the order of execution of [`Statement`]s is apparent from their structure,\nit is not so obvious exactly when a given [`Expression`] should be evaluated,\nsince many `Statement`s and `Expression`s may refer to its value. But it is\nessential to clearly specify an expression's evaluation time, since that\ndetermines which statements' effects the expression should observe. It is also\nhelpful to backends to limit the visibility of an `Expression`'s value to a\nportion of the statement tree.\n\nAn `Expression` may only be used, whether by a `Statement` or another\n`Expression`, if one of the following is true:\n\n- The expression is an [`Expression::Constant`], [`Expression::FunctionArgument`], or\n  [`Expression::GlobalVariable`].\n\n- The expression is an [`Expression::LocalVariable`] that is either the\n  `pointer` (destination) of a [`Statement::Store`], or initialized by some\n  previously executed `Statement::Store`.\n\n- The expression is the `result` of a [`Statement::Call`], representing the\n  call's return value. The call must be 'in scope' for the use (see below).\n\n- The expression is included in the range of some [`Statement::Emit`] that is\n  'in scope' for the use (see below). The [`Expression::needs_pre_emit`] method\n  returns `true` if the given expression does *not* need to be covered by an\n  `Emit` statement.\n\nThe scope of an expression evaluated by an `Emit` statement covers the\nsubsequent expressions in that `Emit`, any following statements in the `Block`\nto which that `Emit` belongs (if any) and their sub-statements (if any).\n\nIf a `Call` statement has a `result` expression, then it is in scope for any\nstatements following the `Call` in the `Block` to which that `Call` belongs (if\nany) and their sub-statements (if any).\n\nThis means that, for example, an expression evaluated by some statement in a\nnested `Block` is not available in the `Block`'s parents. Such a value would\nneed to be stored in a local variable to be carried upwards in the statement\ntree.\n\n## Variables\n\nAn [`Expression::LocalVariable`] or [`Expression::GlobalVariable`] produces a\npointer value referring to the variable's value. To retrieve the variable's\nvalue, use an [`Expression::Load`], with the variable expression as its\n`pointer` operand. To assign to a variable, use a [`Statement::Store`] with the\nvariable expression as its `pointer` operand.\n\nAs an exception, [`Expression::GlobalVariable`]s referring to\n[`GlobalVariable`]s whose `class` is [`StorageClass::Handle`] produce the\nvariable's value directly; no `Load` is needed. These global variables refer to\nopaque values like samplers and images.\n\n!*/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":0,"byte_end":5109,"line_start":1,"line_end":107,"column_start":1,"column_end":4}},{"value":"allow(renamed_and_removed_lints, unknown_lints, clippy ::\nnew_without_default, clippy :: unneeded_field_pattern, clippy ::\nmatch_like_matches_macro, clippy :: manual_strip, clippy ::\nunknown_clippy_lints,)","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":5170,"byte_end":5421,"line_start":110,"line_end":118,"column_start":1,"column_end":3}},{"value":"warn(trivial_casts, trivial_numeric_casts, unused_extern_crates,\nunused_qualifications, clippy :: pattern_type_mismatch)","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":5422,"byte_end":5566,"line_start":119,"line_end":125,"column_start":1,"column_end":3}},{"value":"deny(clippy :: panic)","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":5567,"byte_end":5590,"line_start":126,"line_end":126,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":37437,"byte_end":37443,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Handle","qualname":"::arena::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27}],"decl_id":null,"docs":" A strongly typed reference to an arena item.\n","sig":null,"attributes":[{"value":"/ A strongly typed reference to an arena item.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":37156,"byte_end":37204,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":38833,"byte_end":38838,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"index","qualname":"<Handle<T>>::index","value":"pub fn index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the zero-based index of this handle.\n","sig":null,"attributes":[{"value":"/ Returns the zero-based index of this handle.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":38773,"byte_end":38821,"line_start":71,"line_end":71,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":39201,"byte_end":39206,"line_start":85,"line_end":85,"column_start":12,"column_end":17},"name":"Range","qualname":"::arena::Range","value":"Range {  }","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58}],"decl_id":null,"docs":" A strongly typed range of handles.\n","sig":null,"attributes":[{"value":"/ A strongly typed range of handles.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":38930,"byte_end":38968,"line_start":78,"line_end":78,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":40646,"byte_end":40651,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"Arena","qualname":"::arena::Arena","value":"Arena {  }","parent":null,"children":[{"krate":0,"index":71}],"decl_id":null,"docs":" An arena holding some kind of component (e.g., type, constant,\n instruction, etc.) that can be referenced.","sig":null,"attributes":[{"value":"/ An arena holding some kind of component (e.g., type, constant,","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":40089,"byte_end":40155,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/ instruction, etc.) that can be referenced.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":40156,"byte_end":40202,"line_start":120,"line_end":120,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":40203,"byte_end":40206,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Adding new items to the arena produces a strongly-typed [`Handle`].","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":40207,"byte_end":40278,"line_start":122,"line_end":122,"column_start":1,"column_end":72}},{"value":"/ The arena can be indexed using the given handle to obtain","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":40279,"byte_end":40340,"line_start":123,"line_end":123,"column_start":1,"column_end":62}},{"value":"/ a reference to the stored item.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":40341,"byte_end":40376,"line_start":124,"line_end":124,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":41053,"byte_end":41056,"line_start":150,"line_end":150,"column_start":12,"column_end":15},"name":"new","qualname":"<Arena<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new arena with no initial capacity allocated.\n","sig":null,"attributes":[{"value":"/ Create a new arena with no initial capacity allocated.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":40983,"byte_end":41041,"line_start":149,"line_end":149,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":41157,"byte_end":41167,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Arena<T>>::into_inner","value":"pub fn into_inner(Self) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the inner vector.\n","sig":null,"attributes":[{"value":"/ Extracts the inner vector.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":41115,"byte_end":41145,"line_start":154,"line_end":154,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":41288,"byte_end":41291,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"len","qualname":"<Arena<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of items stored in this arena.\n","sig":null,"attributes":[{"value":"/ Returns the current number of items stored in this arena.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":41215,"byte_end":41276,"line_start":159,"line_end":159,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":41410,"byte_end":41418,"line_start":165,"line_end":165,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Arena<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the arena contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the arena contains no elements.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":41345,"byte_end":41398,"line_start":164,"line_end":164,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":41612,"byte_end":41616,"line_start":171,"line_end":171,"column_start":12,"column_end":16},"name":"iter","qualname":"<Arena<T>>::iter","value":"pub fn iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the items stored in this arena, returning both\n the item's handle and a reference to it.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the items stored in this arena, returning both","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":41476,"byte_end":41551,"line_start":169,"line_end":169,"column_start":5,"column_end":80}},{"value":"/ the item's handle and a reference to it.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":41556,"byte_end":41600,"line_start":170,"line_end":170,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":42039,"byte_end":42047,"line_start":181,"line_end":181,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Arena<T>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a iterator over the items stored in this arena,\n returning both the item's handle and a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Returns a iterator over the items stored in this arena,","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":41896,"byte_end":41955,"line_start":179,"line_end":179,"column_start":5,"column_end":64}},{"value":"/ returning both the item's handle and a mutable reference to it.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":41960,"byte_end":42027,"line_start":180,"line_end":180,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":42411,"byte_end":42417,"line_start":190,"line_end":190,"column_start":12,"column_end":18},"name":"append","qualname":"<Arena<T>>::append","value":"pub fn append(&mut Self, T) -> Handle<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a new value to the arena, returning a typed handle.\n","sig":null,"attributes":[{"value":"/ Adds a new value to the arena, returning a typed handle.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":42339,"byte_end":42399,"line_start":189,"line_end":189,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":42733,"byte_end":42741,"line_start":199,"line_end":199,"column_start":12,"column_end":20},"name":"fetch_if","qualname":"<Arena<T>>::fetch_if","value":"pub fn fetch_if<F: Fn(&T) -> bool>(&Self, F) -> Option<Handle<T>>","parent":null,"children":[],"decl_id":null,"docs":" Fetch a handle to an existing type.\n","sig":null,"attributes":[{"value":"/ Fetch a handle to an existing type.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":42682,"byte_end":42721,"line_start":198,"line_end":198,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":43159,"byte_end":43177,"line_start":210,"line_end":210,"column_start":12,"column_end":30},"name":"fetch_if_or_append","qualname":"<Arena<T>>::fetch_if_or_append","value":"pub fn fetch_if_or_append<F: Fn(&T, &T) -> bool>(&mut Self, T, F) -> Handle<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value with a custom check for uniqueness:\n returns a handle pointing to\n an existing element if the check succeeds, or adds a new\n element otherwise.\n","sig":null,"attributes":[{"value":"/ Adds a value with a custom check for uniqueness:","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":42966,"byte_end":43018,"line_start":206,"line_end":206,"column_start":5,"column_end":57}},{"value":"/ returns a handle pointing to","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":43023,"byte_end":43055,"line_start":207,"line_end":207,"column_start":5,"column_end":37}},{"value":"/ an existing element if the check succeeds, or adds a new","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":43060,"byte_end":43120,"line_start":208,"line_end":208,"column_start":5,"column_end":65}},{"value":"/ element otherwise.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":43125,"byte_end":43147,"line_start":209,"line_end":209,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":43593,"byte_end":43608,"line_start":220,"line_end":220,"column_start":12,"column_end":27},"name":"fetch_or_append","qualname":"<Arena<T>>::fetch_or_append","value":"pub fn fetch_or_append(&mut Self, T) -> Handle<T> where T: PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Adds a value with a check for uniqueness, where the check is plain comparison.\n","sig":null,"attributes":[{"value":"/ Adds a value with a check for uniqueness, where the check is plain comparison.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":43499,"byte_end":43581,"line_start":219,"line_end":219,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":43745,"byte_end":43752,"line_start":227,"line_end":227,"column_start":12,"column_end":19},"name":"try_get","qualname":"<Arena<T>>::try_get","value":"pub fn try_get(&Self, Handle<T>) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":43928,"byte_end":43935,"line_start":232,"line_end":232,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Arena<T>>::get_mut","value":"pub fn get_mut(&mut Self, Handle<T>) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to an element in the arena.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to an element in the arena.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":43861,"byte_end":43916,"line_start":231,"line_end":231,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":44146,"byte_end":44156,"line_start":237,"line_end":237,"column_start":12,"column_end":22},"name":"range_from","qualname":"<Arena<T>>::range_from","value":"pub fn range_from(&Self, usize) -> Range<T>","parent":null,"children":[],"decl_id":null,"docs":" Get the range of handles from a particular number of elements to the end.\n","sig":null,"attributes":[{"value":"/ Get the range of handles from a particular number of elements to the end.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":44057,"byte_end":44134,"line_start":236,"line_end":236,"column_start":5,"column_end":82}}]},{"kind":"Mod","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\back\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"back","qualname":"::back","value":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\back\\mod.rs","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":116}],"decl_id":null,"docs":" Functions which export shader modules into binary and text formats.\n","sig":null,"attributes":[{"value":"/ Functions which export shader modules into binary and text formats.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\back\\mod.rs","byte_start":45703,"byte_end":45774,"line_start":1,"line_end":1,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\front\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"front","qualname":"::front","value":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\front\\mod.rs","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":833},{"krate":0,"index":835},{"krate":0,"index":837},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":839},{"krate":0,"index":841},{"krate":0,"index":141}],"decl_id":null,"docs":" Parsers which load shaders into memory.\n","sig":null,"attributes":[{"value":"/ Parsers which load shaders into memory.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\front\\mod.rs","byte_start":48448,"byte_end":48491,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\front\\mod.rs","byte_start":49738,"byte_end":49746,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"Typifier","qualname":"::front::Typifier","value":"Typifier {  }","parent":null,"children":[{"krate":0,"index":840}],"decl_id":null,"docs":" Helper processor that derives the types of all expressions.\n","sig":null,"attributes":[{"value":"/ Helper processor that derives the types of all expressions.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\front\\mod.rs","byte_start":49646,"byte_end":49709,"line_start":51,"line_end":51,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\front\\mod.rs","byte_start":49817,"byte_end":49820,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Typifier>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\front\\mod.rs","byte_start":49917,"byte_end":49920,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"get","qualname":"<Typifier>::get","value":"pub fn get<'a>(&'a Self, Handle<crate::Expression>, &'a Arena<crate::Type>)\n-> &'a crate::TypeInner","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\front\\mod.rs","byte_start":50145,"byte_end":50155,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"get_handle","qualname":"<Typifier>::get_handle","value":"pub fn get_handle(&mut Self, Handle<crate::Expression>,\n&mut Arena<crate::Type>) -> Handle<crate::Type>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\front\\mod.rs","byte_start":50863,"byte_end":50867,"line_start":96,"line_end":96,"column_start":12,"column_end":16},"name":"grow","qualname":"<Typifier>::grow","value":"pub fn grow(&mut Self, Handle<crate::Expression>, &Arena<crate::Expression>,\n&ResolveContext) -> Result<(), ResolveError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"proc","qualname":"::proc","value":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":176},{"krate":0,"index":203},{"krate":0,"index":235},{"krate":0,"index":240},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":298},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":326},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":352}],"decl_id":null,"docs":" Module processing functionality.\n","sig":null,"attributes":[{"value":"/ Module processing functionality.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":51458,"byte_end":51494,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":62272,"byte_end":62306,"line_start":31,"line_end":31,"column_start":12,"column_end":46},"name":"apply_common_default_interpolation","qualname":"<crate::Module>::apply_common_default_interpolation","value":"pub fn apply_common_default_interpolation(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Apply the usual default interpolation for vertex shader outputs and fragment shader inputs.","sig":null,"attributes":[{"value":"/ Apply the usual default interpolation for vertex shader outputs and fragment shader inputs.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":60815,"byte_end":60910,"line_start":4,"line_end":4,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":60915,"byte_end":60918,"line_start":5,"line_end":5,"column_start":5,"column_end":8}},{"value":"/ For every [`Binding`] that is a vertex shader output or a fragment shader","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":60923,"byte_end":61000,"line_start":6,"line_end":6,"column_start":5,"column_end":82}},{"value":"/ input, and that has an `interpolation` or `sampling` of `None`, assign a","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":61005,"byte_end":61081,"line_start":7,"line_end":7,"column_start":5,"column_end":81}},{"value":"/ default interpolation and sampling as follows:","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":61086,"byte_end":61136,"line_start":8,"line_end":8,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":61141,"byte_end":61144,"line_start":9,"line_end":9,"column_start":5,"column_end":8}},{"value":"/ - If the `Binding`'s type contains only 32-bit floating-point values or","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":61149,"byte_end":61224,"line_start":10,"line_end":10,"column_start":5,"column_end":80}},{"value":"/   vectors of such, default its interpolation to `Perspective` and its","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":61229,"byte_end":61302,"line_start":11,"line_end":11,"column_start":5,"column_end":78}},{"value":"/   sampling to `Center`.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":61307,"byte_end":61334,"line_start":12,"line_end":12,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":61339,"byte_end":61342,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ - Otherwise, mark its interpolation as `Flat`.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":61347,"byte_end":61397,"line_start":14,"line_end":14,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":61402,"byte_end":61405,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ When struct appear in input or output types, apply these rules to their","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":61410,"byte_end":61485,"line_start":16,"line_end":16,"column_start":5,"column_end":80}},{"value":"/ leaves, since those are the things that actually get assigned locations.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":61490,"byte_end":61566,"line_start":17,"line_end":17,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":61571,"byte_end":61574,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This function is a utility front ends may use to satisfy the Naga IR's","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":61579,"byte_end":61653,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ requirement that all I/O `Binding`s from the vertex shader to the","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":61658,"byte_end":61727,"line_start":20,"line_end":20,"column_start":5,"column_end":74}},{"value":"/ fragment shader must have non-`None` `interpolation` values. This","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":61732,"byte_end":61801,"line_start":21,"line_end":21,"column_start":5,"column_end":74}},{"value":"/ requirement is meant to ensure that input languages' policies have been","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":61806,"byte_end":61881,"line_start":22,"line_end":22,"column_start":5,"column_end":80}},{"value":"/ applied appropriately.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":61886,"byte_end":61912,"line_start":23,"line_end":23,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":61917,"byte_end":61920,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ All the shader languages Naga supports have similar rules:","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":61925,"byte_end":61987,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/ perspective-correct, center-sampled interpolation is the default for any","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":61992,"byte_end":62068,"line_start":26,"line_end":26,"column_start":5,"column_end":81}},{"value":"/ binding that can vary, and everything else either defaults to flat, or","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":62073,"byte_end":62147,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ requires an explicit flat qualifier/attribute/what-have-you.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":62152,"byte_end":62216,"line_start":28,"line_end":28,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":62221,"byte_end":62224,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ [`Binding`]: crate::Binding","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":62229,"byte_end":62260,"line_start":30,"line_end":30,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\layouter.rs","byte_start":67346,"byte_end":67355,"line_start":4,"line_end":4,"column_start":10,"column_end":19},"name":"Alignment","qualname":"::proc::layouter::Alignment","value":"NonZeroU32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":843},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\layouter.rs","byte_start":67593,"byte_end":67603,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"TypeLayout","qualname":"::proc::layouter::TypeLayout","value":"TypeLayout { size, alignment }","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845}],"decl_id":null,"docs":" Alignment information for a type.\n","sig":null,"attributes":[{"value":"/ Alignment information for a type.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\layouter.rs","byte_start":67371,"byte_end":67408,"line_start":6,"line_end":6,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":844},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\layouter.rs","byte_start":67614,"byte_end":67618,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"name":"size","qualname":"::proc::layouter::TypeLayout::size","value":"u32","parent":{"krate":0,"index":843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":845},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\layouter.rs","byte_start":67633,"byte_end":67642,"line_start":12,"line_end":12,"column_start":9,"column_end":18},"name":"alignment","qualname":"::proc::layouter::TypeLayout::alignment","value":"std::num::NonZeroU32","parent":{"krate":0,"index":843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":858},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\layouter.rs","byte_start":67989,"byte_end":67997,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"Layouter","qualname":"::proc::layouter::Layouter","value":"Layouter {  }","parent":null,"children":[{"krate":0,"index":859}],"decl_id":null,"docs":" Helper processor that derives the sizes of all types.\n It uses the default layout algorithm/table, described in\n https://github.com/gpuweb/gpuweb/issues/1393\n","sig":null,"attributes":[{"value":"/ Helper processor that derives the sizes of all types.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\layouter.rs","byte_start":67658,"byte_end":67715,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/ It uses the default layout algorithm/table, described in","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\layouter.rs","byte_start":67716,"byte_end":67776,"line_start":16,"line_end":16,"column_start":1,"column_end":61}},{"value":"/ https://github.com/gpuweb/gpuweb/issues/1393","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\layouter.rs","byte_start":67777,"byte_end":67825,"line_start":17,"line_end":17,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":876},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\layouter.rs","byte_start":68343,"byte_end":68358,"line_start":34,"line_end":34,"column_start":12,"column_end":27},"name":"InvalidBaseType","qualname":"::proc::layouter::InvalidBaseType","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Base type {0:?} is out of bounds\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\layouter.rs","byte_start":68287,"byte_end":68331,"line_start":33,"line_end":33,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":878},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\layouter.rs","byte_start":68359,"byte_end":68382,"line_start":34,"line_end":34,"column_start":28,"column_end":51},"name":"0","qualname":"::proc::layouter::InvalidBaseType::0","value":"arena::Handle<Type>","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\layouter.rs","byte_start":68413,"byte_end":68418,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"clear","qualname":"<Layouter>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\layouter.rs","byte_start":68480,"byte_end":68488,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"round_up","qualname":"<Layouter>::round_up","value":"pub fn round_up(Alignment, u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\layouter.rs","byte_start":68688,"byte_end":68704,"line_start":48,"line_end":48,"column_start":12,"column_end":28},"name":"member_placement","qualname":"<Layouter>::member_placement","value":"pub fn member_placement(&Self, u32, Handle<crate::Type>, Option<Alignment>,\nOption<NonZeroU32>) -> (ops::Range<u32>, Alignment)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\layouter.rs","byte_start":69217,"byte_end":69223,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"update","qualname":"<Layouter>::update","value":"pub fn update(&mut Self, &Arena<crate::Type>, &Arena<crate::Constant>)\n-> Result<(), InvalidBaseType>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\namer.rs","byte_start":72361,"byte_end":72376,"line_start":4,"line_end":4,"column_start":10,"column_end":25},"name":"EntryPointIndex","qualname":"::proc::namer::EntryPointIndex","value":"u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\namer.rs","byte_start":72446,"byte_end":72454,"line_start":8,"line_end":8,"column_start":5,"column_end":13},"name":"Constant","qualname":"::proc::namer::NameKey::Constant","value":"NameKey::Constant(Handle<crate::Constant>)","parent":{"krate":0,"index":879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":883},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\namer.rs","byte_start":72485,"byte_end":72499,"line_start":9,"line_end":9,"column_start":5,"column_end":19},"name":"GlobalVariable","qualname":"::proc::namer::NameKey::GlobalVariable","value":"NameKey::GlobalVariable(Handle<crate::GlobalVariable>)","parent":{"krate":0,"index":879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":886},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\namer.rs","byte_start":72536,"byte_end":72540,"line_start":10,"line_end":10,"column_start":5,"column_end":9},"name":"Type","qualname":"::proc::namer::NameKey::Type","value":"NameKey::Type(Handle<crate::Type>)","parent":{"krate":0,"index":879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\namer.rs","byte_start":72567,"byte_end":72579,"line_start":11,"line_end":11,"column_start":5,"column_end":17},"name":"StructMember","qualname":"::proc::namer::NameKey::StructMember","value":"NameKey::StructMember(Handle<crate::Type>, u32)","parent":{"krate":0,"index":879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\namer.rs","byte_start":72611,"byte_end":72619,"line_start":12,"line_end":12,"column_start":5,"column_end":13},"name":"Function","qualname":"::proc::namer::NameKey::Function","value":"NameKey::Function(Handle<crate::Function>)","parent":{"krate":0,"index":879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":896},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\namer.rs","byte_start":72650,"byte_end":72666,"line_start":13,"line_end":13,"column_start":5,"column_end":21},"name":"FunctionArgument","qualname":"::proc::namer::NameKey::FunctionArgument","value":"NameKey::FunctionArgument(Handle<crate::Function>, u32)","parent":{"krate":0,"index":879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":900},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\namer.rs","byte_start":72702,"byte_end":72715,"line_start":14,"line_end":14,"column_start":5,"column_end":18},"name":"FunctionLocal","qualname":"::proc::namer::NameKey::FunctionLocal","value":"NameKey::FunctionLocal(Handle<crate::Function>, Handle<crate::LocalVariable>)","parent":{"krate":0,"index":879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":904},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\namer.rs","byte_start":72776,"byte_end":72786,"line_start":15,"line_end":15,"column_start":5,"column_end":15},"name":"EntryPoint","qualname":"::proc::namer::NameKey::EntryPoint","value":"NameKey::EntryPoint(EntryPointIndex)","parent":{"krate":0,"index":879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":907},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\namer.rs","byte_start":72809,"byte_end":72824,"line_start":16,"line_end":16,"column_start":5,"column_end":20},"name":"EntryPointLocal","qualname":"::proc::namer::NameKey::EntryPointLocal","value":"NameKey::EntryPointLocal(EntryPointIndex, Handle<crate::LocalVariable>)","parent":{"krate":0,"index":879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\namer.rs","byte_start":72877,"byte_end":72895,"line_start":17,"line_end":17,"column_start":5,"column_end":23},"name":"EntryPointArgument","qualname":"::proc::namer::NameKey::EntryPointArgument","value":"NameKey::EntryPointArgument(EntryPointIndex, u32)","parent":{"krate":0,"index":879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":879},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\namer.rs","byte_start":72432,"byte_end":72439,"line_start":7,"line_end":7,"column_start":10,"column_end":17},"name":"NameKey","qualname":"::proc::namer::NameKey","value":"pub enum NameKey {\n    Constant(Handle<crate::Constant>),\n    GlobalVariable(Handle<crate::GlobalVariable>),\n    Type(Handle<crate::Type>),\n    StructMember(Handle<crate::Type>, u32),\n    Function(Handle<crate::Function>),\n    FunctionArgument(Handle<crate::Function>, u32),\n    FunctionLocal(Handle<crate::Function>, Handle<crate::LocalVariable>),\n    EntryPoint(EntryPointIndex),\n    EntryPointLocal(EntryPointIndex, Handle<crate::LocalVariable>),\n    EntryPointArgument(EntryPointIndex, u32),\n}","parent":null,"children":[{"krate":0,"index":880},{"krate":0,"index":883},{"krate":0,"index":886},{"krate":0,"index":889},{"krate":0,"index":893},{"krate":0,"index":896},{"krate":0,"index":900},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":911}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\namer.rs","byte_start":73067,"byte_end":73072,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Namer","qualname":"::proc::namer::Namer","value":"Namer {  }","parent":null,"children":[{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931}],"decl_id":null,"docs":" This processor assigns names to all the things in a module\n that may need identifiers in a textual backend.\n","sig":null,"attributes":[{"value":"/ This processor assigns names to all the things in a module","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\namer.rs","byte_start":72922,"byte_end":72984,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/ that may need identifiers in a textual backend.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\namer.rs","byte_start":72985,"byte_end":73036,"line_start":21,"line_end":21,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\namer.rs","byte_start":74139,"byte_end":74150,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"call_unique","qualname":"<Namer>::call_unique","value":"pub fn call_unique(&mut Self, &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Helper function that return unique name without cache update.\n This function should be used **after** [`Namer`](crate::proc::Namer) initialization by [`reset`](Self::reset()) function.\n","sig":null,"attributes":[{"value":"/ Helper function that return unique name without cache update.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\namer.rs","byte_start":73932,"byte_end":73997,"line_start":54,"line_end":54,"column_start":5,"column_end":70}},{"value":"/ This function should be used **after** [`Namer`](crate::proc::Namer) initialization by [`reset`](Self::reset()) function.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\namer.rs","byte_start":74002,"byte_end":74127,"line_start":55,"line_end":55,"column_start":5,"column_end":130}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\namer.rs","byte_start":74797,"byte_end":74801,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"call","qualname":"<Namer>::call","value":"pub fn call(&mut Self, &str) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\namer.rs","byte_start":75977,"byte_end":75982,"line_start":113,"line_end":113,"column_start":12,"column_end":17},"name":"reset","qualname":"<Namer>::reset","value":"pub fn reset(&mut Self, &crate::Module, &[&str], &[&str],\n&mut FastHashMap<NameKey, String>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\terminator.rs","byte_start":81376,"byte_end":81396,"line_start":7,"line_end":7,"column_start":8,"column_end":28},"name":"ensure_block_returns","qualname":"::proc::terminator::ensure_block_returns","value":"pub fn ensure_block_returns(&mut crate::Block)","parent":null,"children":[],"decl_id":null,"docs":" Ensure that the given block has return statements\n at the end of its control flow.","sig":null,"attributes":[{"value":"/ Ensure that the given block has return statements","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\terminator.rs","byte_start":81087,"byte_end":81140,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/ at the end of its control flow.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\terminator.rs","byte_start":81141,"byte_end":81176,"line_start":2,"line_end":2,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\terminator.rs","byte_start":81177,"byte_end":81180,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Note: we don't want to blindly append a return statement","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\terminator.rs","byte_start":81181,"byte_end":81241,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"/ to the end, because it may be either redundant or invalid,","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\terminator.rs","byte_start":81242,"byte_end":81304,"line_start":5,"line_end":5,"column_start":1,"column_end":63}},{"value":"/ e.g. when the user already has returns in if/else branches.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\terminator.rs","byte_start":81305,"byte_end":81368,"line_start":6,"line_end":6,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":935},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":82807,"byte_end":82813,"line_start":9,"line_end":9,"column_start":5,"column_end":11},"name":"Handle","qualname":"::proc::typifier::TypeResolution::Handle","value":"TypeResolution::Handle(Handle<crate::Type>)","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":938},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":82840,"byte_end":82845,"line_start":10,"line_end":10,"column_start":5,"column_end":10},"name":"Value","qualname":"::proc::typifier::TypeResolution::Value","value":"TypeResolution::Value(crate::TypeInner)","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":934},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":82786,"byte_end":82800,"line_start":8,"line_end":8,"column_start":10,"column_end":24},"name":"TypeResolution","qualname":"::proc::typifier::TypeResolution","value":"pub enum TypeResolution {\n    Handle(Handle<crate::Type>),\n    Value(crate::TypeInner),\n}","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":938}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":82901,"byte_end":82907,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"handle","qualname":"<TypeResolution>::handle","value":"pub fn handle(&Self) -> Option<Handle<crate::Type>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":83084,"byte_end":83094,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"inner_with","qualname":"<TypeResolution>::inner_with","value":"pub fn inner_with<'a>(&'a Self, &'a Arena<crate::Type>)\n-> &'a crate::TypeInner","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":84542,"byte_end":84554,"line_start":66,"line_end":66,"column_start":12,"column_end":24},"name":"resolve_type","qualname":"<crate::ConstantInner>::resolve_type","value":"pub fn resolve_type(&Self) -> TypeResolution","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":966},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":85025,"byte_end":85041,"line_start":80,"line_end":80,"column_start":5,"column_end":21},"name":"OutOfBoundsIndex","qualname":"::proc::typifier::ResolveError::OutOfBoundsIndex","value":"ResolveError::OutOfBoundsIndex { expr, index }","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Index {index} is out of bounds for expression {expr:?}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":84954,"byte_end":85020,"line_start":79,"line_end":79,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":969},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":85192,"byte_end":85205,"line_start":85,"line_end":85,"column_start":5,"column_end":18},"name":"InvalidAccess","qualname":"::proc::typifier::ResolveError::InvalidAccess","value":"ResolveError::InvalidAccess { expr, indexed }","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid access into expression {expr:?}, indexed: {indexed}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":85116,"byte_end":85187,"line_start":84,"line_end":84,"column_start":5,"column_end":76}}]},{"kind":"StructVariant","id":{"krate":0,"index":972},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":85355,"byte_end":85371,"line_start":90,"line_end":90,"column_start":5,"column_end":21},"name":"InvalidSubAccess","qualname":"::proc::typifier::ResolveError::InvalidSubAccess","value":"ResolveError::InvalidSubAccess { ty, indexed }","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid sub-access into type {ty:?}, indexed: {indexed}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":85283,"byte_end":85350,"line_start":89,"line_end":89,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":975},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":85478,"byte_end":85491,"line_start":95,"line_end":95,"column_start":5,"column_end":18},"name":"InvalidScalar","qualname":"::proc::typifier::ResolveError::InvalidScalar","value":"ResolveError::InvalidScalar(Handle<crate::Expression>)","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid scalar {0:?}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":85441,"byte_end":85473,"line_start":94,"line_end":94,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":978},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":85561,"byte_end":85574,"line_start":97,"line_end":97,"column_start":5,"column_end":18},"name":"InvalidVector","qualname":"::proc::typifier::ResolveError::InvalidVector","value":"ResolveError::InvalidVector(Handle<crate::Expression>)","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid vector {0:?}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":85524,"byte_end":85556,"line_start":96,"line_end":96,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":981},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":85645,"byte_end":85659,"line_start":99,"line_end":99,"column_start":5,"column_end":19},"name":"InvalidPointer","qualname":"::proc::typifier::ResolveError::InvalidPointer","value":"ResolveError::InvalidPointer(Handle<crate::Expression>)","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid pointer {0:?}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":85607,"byte_end":85640,"line_start":98,"line_end":98,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":984},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":85728,"byte_end":85740,"line_start":101,"line_end":101,"column_start":5,"column_end":17},"name":"InvalidImage","qualname":"::proc::typifier::ResolveError::InvalidImage","value":"ResolveError::InvalidImage(Handle<crate::Expression>)","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid image {0:?}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":85692,"byte_end":85723,"line_start":100,"line_end":100,"column_start":5,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":987},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":85817,"byte_end":85835,"line_start":103,"line_end":103,"column_start":5,"column_end":23},"name":"FunctionNotDefined","qualname":"::proc::typifier::ResolveError::FunctionNotDefined","value":"ResolveError::FunctionNotDefined { name }","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Function {name} not defined\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":85773,"byte_end":85812,"line_start":102,"line_end":102,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":989},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":85903,"byte_end":85922,"line_start":105,"line_end":105,"column_start":5,"column_end":24},"name":"FunctionReturnsVoid","qualname":"::proc::typifier::ResolveError::FunctionReturnsVoid","value":"ResolveError::FunctionReturnsVoid","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Function without return type\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":85858,"byte_end":85898,"line_start":104,"line_end":104,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":991},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":85991,"byte_end":86003,"line_start":107,"line_end":107,"column_start":5,"column_end":17},"name":"TypeNotFound","qualname":"::proc::typifier::ResolveError::TypeNotFound","value":"ResolveError::TypeNotFound","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Type is not found in the given immutable arena\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":85928,"byte_end":85986,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":993},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":86052,"byte_end":86072,"line_start":109,"line_end":109,"column_start":5,"column_end":25},"name":"IncompatibleOperands","qualname":"::proc::typifier::ResolveError::IncompatibleOperands","value":"ResolveError::IncompatibleOperands(String)","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Incompatible operands: {0}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":86009,"byte_end":86047,"line_start":108,"line_end":108,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":947},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":84935,"byte_end":84947,"line_start":78,"line_end":78,"column_start":10,"column_end":22},"name":"ResolveError","qualname":"::proc::typifier::ResolveError","value":"pub enum ResolveError {\n    OutOfBoundsIndex {\n            expr: Handle<crate::Expression>,\n            index: u32,\n        },\n    InvalidAccess {\n            expr: Handle<crate::Expression>,\n            indexed: bool,\n        },\n    InvalidSubAccess {\n            ty: Handle<crate::Type>,\n            indexed: bool,\n        },\n    InvalidScalar(Handle<crate::Expression>),\n    InvalidVector(Handle<crate::Expression>),\n    InvalidPointer(Handle<crate::Expression>),\n    InvalidImage(Handle<crate::Expression>),\n    FunctionNotDefined {\n            name: String,\n        },\n    FunctionReturnsVoid,\n    TypeNotFound,\n    IncompatibleOperands(String),\n}","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":989},{"krate":0,"index":991},{"krate":0,"index":993}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":86096,"byte_end":86110,"line_start":112,"line_end":112,"column_start":12,"column_end":26},"name":"ResolveContext","qualname":"::proc::typifier::ResolveContext","value":"ResolveContext { constants, types, global_vars, local_vars, functions, arguments }","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":86125,"byte_end":86134,"line_start":113,"line_end":113,"column_start":9,"column_end":18},"name":"constants","qualname":"::proc::typifier::ResolveContext::constants","value":"&'a arena::Arena<Constant>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":86172,"byte_end":86177,"line_start":114,"line_end":114,"column_start":9,"column_end":14},"name":"types","qualname":"::proc::typifier::ResolveContext::types","value":"&'a arena::Arena<Type>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":86211,"byte_end":86222,"line_start":115,"line_end":115,"column_start":9,"column_end":20},"name":"global_vars","qualname":"::proc::typifier::ResolveContext::global_vars","value":"&'a arena::Arena<GlobalVariable>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":86266,"byte_end":86276,"line_start":116,"line_end":116,"column_start":9,"column_end":19},"name":"local_vars","qualname":"::proc::typifier::ResolveContext::local_vars","value":"&'a arena::Arena<LocalVariable>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":86319,"byte_end":86328,"line_start":117,"line_end":117,"column_start":9,"column_end":18},"name":"functions","qualname":"::proc::typifier::ResolveContext::functions","value":"&'a arena::Arena<Function>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":86366,"byte_end":86375,"line_start":118,"line_end":118,"column_start":9,"column_end":18},"name":"arguments","qualname":"::proc::typifier::ResolveContext::arguments","value":"&'a [FunctionArgument]","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":86452,"byte_end":86459,"line_start":122,"line_end":122,"column_start":12,"column_end":19},"name":"resolve","qualname":"<ResolveContext>::resolve","value":"pub fn resolve<impl Fn(Handle<crate::Expression>) -> &'a TypeResolution: Fn(Handle<crate::Expression>)\n->\n&'a TypeResolution>(&Self, &crate::Expression,\nimpl Fn(Handle<crate::Expression>) -> &'a TypeResolution)\n-> Result<TypeResolution, ResolveError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":53294,"byte_end":53305,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"scalar_kind","qualname":"<super::ScalarValue>::scalar_kind","value":"pub fn scalar_kind(&Self) -> super::ScalarKind","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":53605,"byte_end":53617,"line_start":65,"line_end":65,"column_start":11,"column_end":23},"name":"POINTER_SPAN","qualname":"::proc::POINTER_SPAN","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":53664,"byte_end":53675,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"scalar_kind","qualname":"<super::TypeInner>::scalar_kind","value":"pub fn scalar_kind(&Self) -> Option<super::ScalarKind>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":54002,"byte_end":54006,"line_start":78,"line_end":78,"column_start":12,"column_end":16},"name":"span","qualname":"<super::TypeInner>::span","value":"pub fn span(&Self, &super::Arena<super::Constant>) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":55282,"byte_end":55296,"line_start":114,"line_end":114,"column_start":12,"column_end":26},"name":"argument_count","qualname":"<super::MathFunction>::argument_count","value":"pub fn argument_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":57118,"byte_end":57132,"line_start":177,"line_end":177,"column_start":12,"column_end":26},"name":"needs_pre_emit","qualname":"<crate::Expression>::needs_pre_emit","value":"pub fn needs_pre_emit(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the expression is considered emitted at the start of a function.\n","sig":null,"attributes":[{"value":"/ Returns true if the expression is considered emitted at the start of a function.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":57022,"byte_end":57106,"line_start":176,"line_end":176,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":58047,"byte_end":58063,"line_start":200,"line_end":200,"column_start":12,"column_end":28},"name":"is_dynamic_index","qualname":"<crate::Expression>::is_dynamic_index","value":"pub fn is_dynamic_index(&Self, &crate::Module) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this expression is a dynamic array index, for [`Access`].","sig":null,"attributes":[{"value":"/ Return true if this expression is a dynamic array index, for [`Access`].","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":57371,"byte_end":57447,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":57452,"byte_end":57455,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ This method returns true if this expression is a dynamically computed","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":57460,"byte_end":57533,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ index, and as such can only be used to index matrices and arrays when","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":57538,"byte_end":57611,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ they appear behind a pointer. See the documentation for [`Access`] for","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":57616,"byte_end":57690,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ details.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":57695,"byte_end":57707,"line_start":192,"line_end":192,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":57712,"byte_end":57715,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Note, this does not check the _type_ of the given expression. It's up to","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":57720,"byte_end":57796,"line_start":194,"line_end":194,"column_start":5,"column_end":81}},{"value":"/ the caller to establish that the `Access` expression is well-typed","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":57801,"byte_end":57871,"line_start":195,"line_end":195,"column_start":5,"column_end":75}},{"value":"/ through other means, like [`ResolveContext`].","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":57876,"byte_end":57925,"line_start":196,"line_end":196,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":57930,"byte_end":57933,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ [`Access`]: crate::Expression::Access","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":57938,"byte_end":57979,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ [`ResolveContext`]: crate::proc::ResolveContext","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":57984,"byte_end":58035,"line_start":199,"line_end":199,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":58343,"byte_end":58363,"line_start":211,"line_end":211,"column_start":12,"column_end":32},"name":"implicit_derivatives","qualname":"<crate::SampleLevel>::implicit_derivatives","value":"pub fn implicit_derivatives(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":58578,"byte_end":58593,"line_start":220,"line_end":220,"column_start":12,"column_end":27},"name":"to_array_length","qualname":"<crate::Constant>::to_array_length","value":"pub fn to_array_length(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":59296,"byte_end":59307,"line_start":239,"line_end":239,"column_start":12,"column_end":23},"name":"to_built_in","qualname":"<crate::Binding>::to_built_in","value":"pub fn to_built_in(&Self) -> Option<crate::BuiltIn>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":60340,"byte_end":60344,"line_start":272,"line_end":272,"column_start":15,"column_end":19},"name":"XYZW","qualname":"::proc::<impl SwizzleComponent>::XYZW","value":"[Self; ]","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":60408,"byte_end":60413,"line_start":274,"line_end":274,"column_start":12,"column_end":17},"name":"index","qualname":"<super::SwizzleComponent>::index","value":"pub fn index(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":60583,"byte_end":60593,"line_start":282,"line_end":282,"column_start":12,"column_end":22},"name":"from_index","qualname":"<super::SwizzleComponent>::from_index","value":"pub fn from_index(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"valid","qualname":"::valid","value":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":452},{"krate":0,"index":469},{"krate":0,"index":534},{"krate":0,"index":608},{"krate":0,"index":683},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":725},{"krate":0,"index":728},{"krate":0,"index":731},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":738},{"krate":0,"index":741},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":753},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":770},{"krate":0,"index":773},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":2055},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2065},{"krate":0,"index":2067},{"krate":0,"index":2069},{"krate":0,"index":2071},{"krate":0,"index":2074},{"krate":0,"index":2083},{"krate":0,"index":2085},{"krate":0,"index":2087},{"krate":0,"index":2089},{"krate":0,"index":2091},{"krate":0,"index":2116},{"krate":0,"index":2119},{"krate":0,"index":2121},{"krate":0,"index":2124},{"krate":0,"index":2126},{"krate":0,"index":2129},{"krate":0,"index":2131},{"krate":0,"index":2134},{"krate":0,"index":2136},{"krate":0,"index":2139},{"krate":0,"index":2142},{"krate":0,"index":786},{"krate":0,"index":2164},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2171},{"krate":0,"index":2172},{"krate":0,"index":2174},{"krate":0,"index":2176},{"krate":0,"index":2178},{"krate":0,"index":2180},{"krate":0,"index":2162},{"krate":0,"index":2183},{"krate":0,"index":2189},{"krate":0,"index":2191},{"krate":0,"index":2193},{"krate":0,"index":2195},{"krate":0,"index":2197},{"krate":0,"index":2219},{"krate":0,"index":2222},{"krate":0,"index":2224},{"krate":0,"index":2227},{"krate":0,"index":2229},{"krate":0,"index":2232},{"krate":0,"index":2234},{"krate":0,"index":2237},{"krate":0,"index":2239},{"krate":0,"index":2242},{"krate":0,"index":2245},{"krate":0,"index":2256},{"krate":0,"index":2258},{"krate":0,"index":2259},{"krate":0,"index":2260},{"krate":0,"index":2263},{"krate":0,"index":2264},{"krate":0,"index":2266},{"krate":0,"index":2268},{"krate":0,"index":2270},{"krate":0,"index":2272},{"krate":0,"index":2275},{"krate":0,"index":2282},{"krate":0,"index":2284},{"krate":0,"index":2286},{"krate":0,"index":2288},{"krate":0,"index":2290},{"krate":0,"index":2313},{"krate":0,"index":2316},{"krate":0,"index":2318},{"krate":0,"index":2321},{"krate":0,"index":2323},{"krate":0,"index":2326},{"krate":0,"index":2328},{"krate":0,"index":2331},{"krate":0,"index":2333},{"krate":0,"index":2336},{"krate":0,"index":2339},{"krate":0,"index":2353},{"krate":0,"index":2356},{"krate":0,"index":788},{"krate":0,"index":2358},{"krate":0,"index":2368},{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":2373},{"krate":0,"index":2375},{"krate":0,"index":2380},{"krate":0,"index":2382},{"krate":0,"index":2395},{"krate":0,"index":2396},{"krate":0,"index":2398},{"krate":0,"index":2400},{"krate":0,"index":2405},{"krate":0,"index":2414},{"krate":0,"index":791},{"krate":0,"index":794}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":996},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":121810,"byte_end":121832,"line_start":22,"line_end":22,"column_start":16,"column_end":38},"name":"UniformityRequirements","qualname":"::valid::analyzer::UniformityRequirements","value":"UniformityRequirements {  }","parent":null,"children":[{"krate":0,"index":997}],"decl_id":null,"docs":" Kinds of expressions that require uniform control flow.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1031},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":121853,"byte_end":121871,"line_start":23,"line_end":23,"column_start":15,"column_end":33},"name":"WORK_GROUP_BARRIER","qualname":"::valid::analyzer::UniformityRequirements::WORK_GROUP_BARRIER","value":"Self","parent":{"krate":0,"index":1030},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1032},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":121893,"byte_end":121903,"line_start":24,"line_end":24,"column_start":15,"column_end":25},"name":"DERIVATIVE","qualname":"::valid::analyzer::UniformityRequirements::DERIVATIVE","value":"Self","parent":{"krate":0,"index":1030},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1033},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":121925,"byte_end":121939,"line_start":25,"line_end":25,"column_start":15,"column_end":29},"name":"IMPLICIT_LEVEL","qualname":"::valid::analyzer::UniformityRequirements::IMPLICIT_LEVEL","value":"Self","parent":{"krate":0,"index":1030},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":122196,"byte_end":122206,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"Uniformity","qualname":"::valid::analyzer::Uniformity","value":"Uniformity { non_uniform_result, requirements }","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095}],"decl_id":null,"docs":" Uniform control flow characteristics.\n","sig":null,"attributes":[{"value":"/ Uniform control flow characteristics.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":121956,"byte_end":121997,"line_start":29,"line_end":29,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1094},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":122742,"byte_end":122760,"line_start":46,"line_end":46,"column_start":9,"column_end":27},"name":"non_uniform_result","qualname":"::valid::analyzer::Uniformity::non_uniform_result","value":"std::option::Option<arena::Handle<Expression>>","parent":{"krate":0,"index":1093},"children":[],"decl_id":null,"docs":" A child expression with non-uniform result.","sig":null,"attributes":[{"value":"/ A child expression with non-uniform result.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":122213,"byte_end":122260,"line_start":35,"line_end":35,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":122265,"byte_end":122268,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This means, when the relevant invocations are scheduled on a compute unit,","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":122273,"byte_end":122351,"line_start":37,"line_end":37,"column_start":5,"column_end":83}},{"value":"/ they have to use vector registers to store an individual value","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":122356,"byte_end":122422,"line_start":38,"line_end":38,"column_start":5,"column_end":71}},{"value":"/ per invocation.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":122427,"byte_end":122446,"line_start":39,"line_end":39,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":122451,"byte_end":122454,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Whenever the control flow is conditioned on such value,","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":122459,"byte_end":122518,"line_start":41,"line_end":41,"column_start":5,"column_end":64}},{"value":"/ the hardware needs to keep track of the mask of invocations,","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":122523,"byte_end":122587,"line_start":42,"line_end":42,"column_start":5,"column_end":69}},{"value":"/ and process all branches of the control flow.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":122592,"byte_end":122641,"line_start":43,"line_end":43,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":122646,"byte_end":122649,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Any operations that depend on non-uniform results also produce non-uniform.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":122654,"byte_end":122733,"line_start":45,"line_end":45,"column_start":5,"column_end":84}}]},{"kind":"Field","id":{"krate":0,"index":1095},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":122869,"byte_end":122881,"line_start":48,"line_end":48,"column_start":9,"column_end":21},"name":"requirements","qualname":"::valid::analyzer::Uniformity::requirements","value":"valid::analyzer::UniformityRequirements","parent":{"krate":0,"index":1093},"children":[],"decl_id":null,"docs":" If this expression requires uniform control flow, store the reason here.\n","sig":null,"attributes":[{"value":"/ If this expression requires uniform control flow, store the reason here.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":122784,"byte_end":122860,"line_start":47,"line_end":47,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":1192},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":124983,"byte_end":124992,"line_start":119,"line_end":119,"column_start":16,"column_end":25},"name":"GlobalUse","qualname":"::valid::analyzer::GlobalUse","value":"GlobalUse {  }","parent":null,"children":[{"krate":0,"index":1193}],"decl_id":null,"docs":" Indicates how a global variable is used.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1227},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":125062,"byte_end":125066,"line_start":121,"line_end":121,"column_start":15,"column_end":19},"name":"READ","qualname":"::valid::analyzer::GlobalUse::READ","value":"Self","parent":{"krate":0,"index":1226},"children":[],"decl_id":null,"docs":" Data will be read from the variable.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1228},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":125138,"byte_end":125143,"line_start":123,"line_end":123,"column_start":15,"column_end":20},"name":"WRITE","qualname":"::valid::analyzer::GlobalUse::WRITE","value":"Self","parent":{"krate":0,"index":1226},"children":[],"decl_id":null,"docs":" Data will be written to the variable.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1229},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":125220,"byte_end":125225,"line_start":125,"line_end":125,"column_start":15,"column_end":20},"name":"QUERY","qualname":"::valid::analyzer::GlobalUse::QUERY","value":"Self","parent":{"krate":0,"index":1226},"children":[],"decl_id":null,"docs":" The information about the data is queried.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1289},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":125424,"byte_end":125435,"line_start":132,"line_end":132,"column_start":12,"column_end":23},"name":"SamplingKey","qualname":"::valid::analyzer::SamplingKey","value":"SamplingKey { image, sampler }","parent":null,"children":[{"krate":0,"index":1290},{"krate":0,"index":1291}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1290},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":125446,"byte_end":125451,"line_start":133,"line_end":133,"column_start":9,"column_end":14},"name":"image","qualname":"::valid::analyzer::SamplingKey::image","value":"arena::Handle<GlobalVariable>","parent":{"krate":0,"index":1289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1291},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":125492,"byte_end":125499,"line_start":134,"line_end":134,"column_start":9,"column_end":16},"name":"sampler","qualname":"::valid::analyzer::SamplingKey::sampler","value":"arena::Handle<GlobalVariable>","parent":{"krate":0,"index":1289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1306},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":125696,"byte_end":125710,"line_start":140,"line_end":140,"column_start":12,"column_end":26},"name":"ExpressionInfo","qualname":"::valid::analyzer::ExpressionInfo","value":"ExpressionInfo { uniformity, ref_count, ty }","parent":null,"children":[{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1307},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":125721,"byte_end":125731,"line_start":141,"line_end":141,"column_start":9,"column_end":19},"name":"uniformity","qualname":"::valid::analyzer::ExpressionInfo::uniformity","value":"valid::analyzer::Uniformity","parent":{"krate":0,"index":1306},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1308},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":125753,"byte_end":125762,"line_start":142,"line_end":142,"column_start":9,"column_end":18},"name":"ref_count","qualname":"::valid::analyzer::ExpressionInfo::ref_count","value":"usize","parent":{"krate":0,"index":1306},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1310},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":125841,"byte_end":125843,"line_start":144,"line_end":144,"column_start":9,"column_end":11},"name":"ty","qualname":"::valid::analyzer::ExpressionInfo::ty","value":"proc::typifier::TypeResolution","parent":{"krate":0,"index":1306},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1315},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":126437,"byte_end":126449,"line_start":165,"line_end":165,"column_start":12,"column_end":24},"name":"FunctionInfo","qualname":"::valid::analyzer::FunctionInfo","value":"FunctionInfo { available_stages, uniformity, may_kill, sampling_set }","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1317},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":126581,"byte_end":126597,"line_start":169,"line_end":169,"column_start":9,"column_end":25},"name":"available_stages","qualname":"::valid::analyzer::FunctionInfo::available_stages","value":"valid::ShaderStages","parent":{"krate":0,"index":1315},"children":[],"decl_id":null,"docs":" Set of shader stages where calling this function is valid.\n","sig":null,"attributes":[{"value":"/ Set of shader stages where calling this function is valid.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":126510,"byte_end":126572,"line_start":168,"line_end":168,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":1318},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":126657,"byte_end":126667,"line_start":171,"line_end":171,"column_start":9,"column_end":19},"name":"uniformity","qualname":"::valid::analyzer::FunctionInfo::uniformity","value":"valid::analyzer::Uniformity","parent":{"krate":0,"index":1315},"children":[],"decl_id":null,"docs":" Uniformity characteristics.\n","sig":null,"attributes":[{"value":"/ Uniformity characteristics.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":126617,"byte_end":126648,"line_start":170,"line_end":170,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1319},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":126731,"byte_end":126739,"line_start":173,"line_end":173,"column_start":9,"column_end":17},"name":"may_kill","qualname":"::valid::analyzer::FunctionInfo::may_kill","value":"bool","parent":{"krate":0,"index":1315},"children":[],"decl_id":null,"docs":" Function may kill the invocation.\n","sig":null,"attributes":[{"value":"/ Function may kill the invocation.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":126685,"byte_end":126722,"line_start":172,"line_end":172,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1320},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":126809,"byte_end":126821,"line_start":175,"line_end":175,"column_start":9,"column_end":21},"name":"sampling_set","qualname":"::valid::analyzer::FunctionInfo::sampling_set","value":"std::collections::HashSet<valid::analyzer::SamplingKey, std::hash::BuildHasherDefault<fxhash::FxHasher>>","parent":{"krate":0,"index":1315},"children":[],"decl_id":null,"docs":" Set of image-sampler pais used with sampling.\n","sig":null,"attributes":[{"value":"/ Set of image-sampler pais used with sampling.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":126751,"byte_end":126800,"line_start":174,"line_end":174,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":127189,"byte_end":127210,"line_start":187,"line_end":187,"column_start":12,"column_end":33},"name":"global_variable_count","qualname":"<FunctionInfo>::global_variable_count","value":"pub fn global_variable_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":127277,"byte_end":127293,"line_start":190,"line_end":190,"column_start":12,"column_end":28},"name":"expression_count","qualname":"<FunctionInfo>::expression_count","value":"pub fn expression_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":127360,"byte_end":127380,"line_start":193,"line_end":193,"column_start":12,"column_end":32},"name":"dominates_global_use","qualname":"<FunctionInfo>::dominates_global_use","value":"pub fn dominates_global_use(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1334},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":128381,"byte_end":128391,"line_start":224,"line_end":224,"column_start":5,"column_end":15},"name":"Expression","qualname":"::valid::analyzer::UniformityDisruptor::Expression","value":"UniformityDisruptor::Expression(Handle<crate::Expression>)","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Expression {0:?} produced non-uniform result, and control flow depends on it\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":128288,"byte_end":128376,"line_start":223,"line_end":223,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1337},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":128502,"byte_end":128508,"line_start":226,"line_end":226,"column_start":5,"column_end":11},"name":"Return","qualname":"::valid::analyzer::UniformityDisruptor::Return","value":"UniformityDisruptor::Return","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"There is a Return earlier in the control flow of the function\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":128424,"byte_end":128497,"line_start":225,"line_end":225,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1339},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":128604,"byte_end":128611,"line_start":228,"line_end":228,"column_start":5,"column_end":12},"name":"Discard","qualname":"::valid::analyzer::UniformityDisruptor::Discard","value":"UniformityDisruptor::Discard","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"There is a Discard earlier in the entry point across all called functions\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":128514,"byte_end":128599,"line_start":227,"line_end":227,"column_start":5,"column_end":90}}]},{"kind":"Enum","id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":128262,"byte_end":128281,"line_start":222,"line_end":222,"column_start":10,"column_end":29},"name":"UniformityDisruptor","qualname":"::valid::analyzer::UniformityDisruptor","value":"pub enum UniformityDisruptor {\n    Expression(Handle<crate::Expression>),\n    Return,\n    Discard,\n}","parent":null,"children":[{"krate":0,"index":1334},{"krate":0,"index":1337},{"krate":0,"index":1339}],"decl_id":null,"docs":" Disruptor of the uniform control flow.\n","sig":null,"attributes":[{"value":"/ Disruptor of the uniform control flow.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":128125,"byte_end":128167,"line_start":219,"line_end":219,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":150408,"byte_end":150423,"line_start":740,"line_end":740,"column_start":12,"column_end":27},"name":"get_entry_point","qualname":"<ModuleInfo>::get_entry_point","value":"pub fn get_entry_point(&Self, usize) -> &FunctionInfo","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1356},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\compose.rs","byte_start":157245,"byte_end":157260,"line_start":10,"line_end":10,"column_start":5,"column_end":20},"name":"TypeDoesntExist","qualname":"::valid::compose::ComposeError::TypeDoesntExist","value":"ComposeError::TypeDoesntExist(Handle<crate::Type>)","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Compose type {0:?} doesn't exist\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\compose.rs","byte_start":157196,"byte_end":157240,"line_start":9,"line_end":9,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1359},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\compose.rs","byte_start":157341,"byte_end":157345,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Type","qualname":"::valid::compose::ComposeError::Type","value":"ComposeError::Type(Handle<crate::Type>)","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Composing of type {0:?} can't be done\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\compose.rs","byte_start":157287,"byte_end":157336,"line_start":11,"line_end":11,"column_start":5,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":1362},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\compose.rs","byte_start":157451,"byte_end":157465,"line_start":14,"line_end":14,"column_start":5,"column_end":19},"name":"ComponentCount","qualname":"::valid::compose::ComposeError::ComponentCount","value":"ComposeError::ComponentCount { given, expected }","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Composing expects {expected} components but {given} were given\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\compose.rs","byte_start":157372,"byte_end":157446,"line_start":13,"line_end":13,"column_start":5,"column_end":79}}]},{"kind":"StructVariant","id":{"krate":0,"index":1365},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\compose.rs","byte_start":157568,"byte_end":157581,"line_start":16,"line_end":16,"column_start":5,"column_end":18},"name":"ComponentType","qualname":"::valid::compose::ComposeError::ComponentType","value":"ComposeError::ComponentType { index }","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Composing {index}'s component type is not expected\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\compose.rs","byte_start":157501,"byte_end":157563,"line_start":15,"line_end":15,"column_start":5,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":1341},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\compose.rs","byte_start":157177,"byte_end":157189,"line_start":8,"line_end":8,"column_start":10,"column_end":22},"name":"ComposeError","qualname":"::valid::compose::ComposeError","value":"pub enum ComposeError {\n    TypeDoesntExist(Handle<crate::Type>),\n    Type(Handle<crate::Type>),\n    ComponentCount {\n            given: u32,\n            expected: u32,\n        },\n    ComponentType {\n            index: u32,\n        },\n}","parent":null,"children":[{"krate":0,"index":1356},{"krate":0,"index":1359},{"krate":0,"index":1362},{"krate":0,"index":1365}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1390},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":162346,"byte_end":162357,"line_start":11,"line_end":11,"column_start":5,"column_end":16},"name":"DoesntExist","qualname":"::valid::expression::ExpressionError::DoesntExist","value":"ExpressionError::DoesntExist","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Doesn't exist\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":162316,"byte_end":162341,"line_start":10,"line_end":10,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1392},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":162471,"byte_end":162481,"line_start":13,"line_end":13,"column_start":5,"column_end":15},"name":"NotInScope","qualname":"::valid::expression::ExpressionError::NotInScope","value":"ExpressionError::NotInScope","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Used by a statement before it was introduced into the scope by any of the dominating blocks\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":162363,"byte_end":162466,"line_start":12,"line_end":12,"column_start":5,"column_end":108}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1394},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":162554,"byte_end":162571,"line_start":15,"line_end":15,"column_start":5,"column_end":22},"name":"ForwardDependency","qualname":"::valid::expression::ExpressionError::ForwardDependency","value":"ExpressionError::ForwardDependency(Handle<crate::Expression>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Depends on {0:?}, which has not been processed yet\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":162487,"byte_end":162549,"line_start":14,"line_end":14,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1397},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":162675,"byte_end":162690,"line_start":17,"line_end":17,"column_start":5,"column_end":20},"name":"InvalidBaseType","qualname":"::valid::expression::ExpressionError::InvalidBaseType","value":"ExpressionError::InvalidBaseType(Handle<crate::Expression>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Base type {0:?} is not compatible with this expression\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":162604,"byte_end":162670,"line_start":16,"line_end":16,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1400},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":162780,"byte_end":162796,"line_start":19,"line_end":19,"column_start":5,"column_end":21},"name":"InvalidIndexType","qualname":"::valid::expression::ExpressionError::InvalidIndexType","value":"ExpressionError::InvalidIndexType(Handle<crate::Expression>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Accessing with index {0:?} can't be done\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":162723,"byte_end":162775,"line_start":18,"line_end":18,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1403},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":162888,"byte_end":162904,"line_start":21,"line_end":21,"column_start":5,"column_end":21},"name":"IndexOutOfBounds","qualname":"::valid::expression::ExpressionError::IndexOutOfBounds","value":"ExpressionError::IndexOutOfBounds(Handle<crate::Expression>, u32)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Accessing index {1} is out of {0:?} bounds\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":162829,"byte_end":162883,"line_start":20,"line_end":20,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1407},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":163013,"byte_end":163032,"line_start":23,"line_end":23,"column_start":5,"column_end":24},"name":"IndexMustBeConstant","qualname":"::valid::expression::ExpressionError::IndexMustBeConstant","value":"ExpressionError::IndexMustBeConstant(Handle<crate::Expression>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The expression {0:?} may only be indexed by a constant\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":162942,"byte_end":163008,"line_start":22,"line_end":22,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1410},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":163119,"byte_end":163146,"line_start":25,"line_end":25,"column_start":5,"column_end":32},"name":"FunctionArgumentDoesntExist","qualname":"::valid::expression::ExpressionError::FunctionArgumentDoesntExist","value":"ExpressionError::FunctionArgumentDoesntExist(u32)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Function argument {0:?} doesn't exist\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":163065,"byte_end":163114,"line_start":24,"line_end":24,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1413},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":163202,"byte_end":163221,"line_start":27,"line_end":27,"column_start":5,"column_end":24},"name":"ConstantDoesntExist","qualname":"::valid::expression::ExpressionError::ConstantDoesntExist","value":"ExpressionError::ConstantDoesntExist(Handle<crate::Constant>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Constant {0:?} doesn't exist\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":163157,"byte_end":163197,"line_start":26,"line_end":26,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1416},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":163304,"byte_end":163324,"line_start":29,"line_end":29,"column_start":5,"column_end":25},"name":"GlobalVarDoesntExist","qualname":"::valid::expression::ExpressionError::GlobalVarDoesntExist","value":"ExpressionError::GlobalVarDoesntExist(Handle<crate::GlobalVariable>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Global variable {0:?} doesn't exist\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":163252,"byte_end":163299,"line_start":28,"line_end":28,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1419},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":163412,"byte_end":163431,"line_start":31,"line_end":31,"column_start":5,"column_end":24},"name":"LocalVarDoesntExist","qualname":"::valid::expression::ExpressionError::LocalVarDoesntExist","value":"ExpressionError::LocalVarDoesntExist(Handle<crate::LocalVariable>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Local variable {0:?} doesn't exist\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":163361,"byte_end":163407,"line_start":30,"line_end":30,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1422},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":163514,"byte_end":163532,"line_start":33,"line_end":33,"column_start":5,"column_end":23},"name":"InvalidPointerType","qualname":"::valid::expression::ExpressionError::InvalidPointerType","value":"ExpressionError::InvalidPointerType(Handle<crate::Expression>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Loading of {0:?} can't be done\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":163467,"byte_end":163509,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1425},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":163617,"byte_end":163633,"line_start":35,"line_end":35,"column_start":5,"column_end":21},"name":"InvalidArrayType","qualname":"::valid::expression::ExpressionError::InvalidArrayType","value":"ExpressionError::InvalidArrayType(Handle<crate::Expression>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Array length of {0:?} can't be done\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":163565,"byte_end":163612,"line_start":34,"line_end":34,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1428},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":163712,"byte_end":163728,"line_start":37,"line_end":37,"column_start":5,"column_end":21},"name":"InvalidSplatType","qualname":"::valid::expression::ExpressionError::InvalidSplatType","value":"ExpressionError::InvalidSplatType(Handle<crate::Expression>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Splatting {0:?} can't be done\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":163666,"byte_end":163707,"line_start":36,"line_end":36,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1431},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":163807,"byte_end":163824,"line_start":39,"line_end":39,"column_start":5,"column_end":22},"name":"InvalidVectorType","qualname":"::valid::expression::ExpressionError::InvalidVectorType","value":"ExpressionError::InvalidVectorType(Handle<crate::Expression>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Swizzling {0:?} can't be done\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":163761,"byte_end":163802,"line_start":38,"line_end":38,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1434},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":163929,"byte_end":163952,"line_start":41,"line_end":41,"column_start":5,"column_end":28},"name":"InvalidSwizzleComponent","qualname":"::valid::expression::ExpressionError::InvalidSwizzleComponent","value":"ExpressionError::InvalidSwizzleComponent(crate::SwizzleComponent, crate::VectorSize)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Swizzle component {0:?} is outside of vector size {1:?}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":163857,"byte_end":163924,"line_start":40,"line_end":40,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1438},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":164028,"byte_end":164035,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"name":"Compose","qualname":"::valid::expression::ExpressionError::Compose","value":"ExpressionError::Compose(ComposeError)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":164002,"byte_end":164023,"line_start":42,"line_end":42,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1441},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":164117,"byte_end":164140,"line_start":45,"line_end":45,"column_start":5,"column_end":28},"name":"InvalidUnaryOperandType","qualname":"::valid::expression::ExpressionError::InvalidUnaryOperandType","value":"ExpressionError::InvalidUnaryOperandType(crate::UnaryOperator, Handle<crate::Expression>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Operation {0:?} can't work with {1:?}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":164063,"byte_end":164112,"line_start":44,"line_end":44,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1445},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":164259,"byte_end":164284,"line_start":47,"line_end":47,"column_start":5,"column_end":30},"name":"InvalidBinaryOperandTypes","qualname":"::valid::expression::ExpressionError::InvalidBinaryOperandTypes","value":"ExpressionError::InvalidBinaryOperandTypes(crate::BinaryOperator, Handle<crate::Expression>, Handle<crate::Expression>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Operation {0:?} can't work with {1:?} and {2:?}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":164195,"byte_end":164254,"line_start":46,"line_end":46,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1450},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":164440,"byte_end":164458,"line_start":53,"line_end":53,"column_start":5,"column_end":23},"name":"InvalidSelectTypes","qualname":"::valid::expression::ExpressionError::InvalidSelectTypes","value":"ExpressionError::InvalidSelectTypes","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Selecting is not possible\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":164398,"byte_end":164435,"line_start":52,"line_end":52,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1452},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":164530,"byte_end":164550,"line_start":55,"line_end":55,"column_start":5,"column_end":25},"name":"InvalidBooleanVector","qualname":"::valid::expression::ExpressionError::InvalidBooleanVector","value":"ExpressionError::InvalidBooleanVector(Handle<crate::Expression>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Relational argument {0:?} is not a boolean vector\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":164464,"byte_end":164525,"line_start":54,"line_end":54,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1455},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":164640,"byte_end":164660,"line_start":57,"line_end":57,"column_start":5,"column_end":25},"name":"InvalidFloatArgument","qualname":"::valid::expression::ExpressionError::InvalidFloatArgument","value":"ExpressionError::InvalidFloatArgument(Handle<crate::Expression>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Relational argument {0:?} is not a float\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":164583,"byte_end":164635,"line_start":56,"line_end":56,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1458},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":164732,"byte_end":164736,"line_start":59,"line_end":59,"column_start":5,"column_end":9},"name":"Type","qualname":"::valid::expression::ExpressionError::Type","value":"ExpressionError::Type(ResolveError)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Type resolution failed\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":164693,"byte_end":164727,"line_start":58,"line_end":58,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1461},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":164802,"byte_end":164824,"line_start":61,"line_end":61,"column_start":5,"column_end":27},"name":"ExpectedGlobalVariable","qualname":"::valid::expression::ExpressionError::ExpectedGlobalVariable","value":"ExpressionError::ExpectedGlobalVariable","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Not a global variable\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":164764,"byte_end":164797,"line_start":60,"line_end":60,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1463},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":164883,"byte_end":164907,"line_start":63,"line_end":63,"column_start":5,"column_end":29},"name":"CallToUndeclaredFunction","qualname":"::valid::expression::ExpressionError::CallToUndeclaredFunction","value":"ExpressionError::CallToUndeclaredFunction(Handle<crate::Function>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Calling an undeclared function {0:?}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":164830,"byte_end":164878,"line_start":62,"line_end":62,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1466},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":164992,"byte_end":165009,"line_start":65,"line_end":65,"column_start":5,"column_end":22},"name":"ExpectedImageType","qualname":"::valid::expression::ExpressionError::ExpectedImageType","value":"ExpressionError::ExpectedImageType(Handle<crate::Type>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Needs to be an image instead of {0:?}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":164938,"byte_end":164987,"line_start":64,"line_end":64,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1469},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":165090,"byte_end":165109,"line_start":67,"line_end":67,"column_start":5,"column_end":24},"name":"ExpectedSamplerType","qualname":"::valid::expression::ExpressionError::ExpectedSamplerType","value":"ExpressionError::ExpectedSamplerType(Handle<crate::Type>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Needs to be an image instead of {0:?}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":165036,"byte_end":165085,"line_start":66,"line_end":66,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1472},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":165191,"byte_end":165208,"line_start":69,"line_end":69,"column_start":5,"column_end":22},"name":"InvalidImageClass","qualname":"::valid::expression::ExpressionError::InvalidImageClass","value":"ExpressionError::InvalidImageClass(crate::ImageClass)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Unable to operate on image class {0:?}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":165136,"byte_end":165186,"line_start":68,"line_end":68,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1475},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":165309,"byte_end":165326,"line_start":71,"line_end":71,"column_start":5,"column_end":22},"name":"InvalidDerivative","qualname":"::valid::expression::ExpressionError::InvalidDerivative","value":"ExpressionError::InvalidDerivative","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Derivatives can only be taken from scalar and vector floats\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":165233,"byte_end":165304,"line_start":70,"line_end":70,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1477},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":165389,"byte_end":165411,"line_start":73,"line_end":73,"column_start":5,"column_end":27},"name":"InvalidImageArrayIndex","qualname":"::valid::expression::ExpressionError::InvalidImageArrayIndex","value":"ExpressionError::InvalidImageArrayIndex","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Image array index parameter is misplaced\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":165332,"byte_end":165384,"line_start":72,"line_end":72,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1479},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":165474,"byte_end":165496,"line_start":75,"line_end":75,"column_start":5,"column_end":27},"name":"InvalidImageOtherIndex","qualname":"::valid::expression::ExpressionError::InvalidImageOtherIndex","value":"ExpressionError::InvalidImageOtherIndex","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Image other index parameter is misplaced\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":165417,"byte_end":165469,"line_start":74,"line_end":74,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1481},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":165575,"byte_end":165601,"line_start":77,"line_end":77,"column_start":5,"column_end":31},"name":"InvalidImageArrayIndexType","qualname":"::valid::expression::ExpressionError::InvalidImageArrayIndexType","value":"ExpressionError::InvalidImageArrayIndexType(Handle<crate::Expression>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Image array index type of {0:?} is not an integer scalar\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":165502,"byte_end":165570,"line_start":76,"line_end":76,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1484},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":165707,"byte_end":165733,"line_start":79,"line_end":79,"column_start":5,"column_end":31},"name":"InvalidImageOtherIndexType","qualname":"::valid::expression::ExpressionError::InvalidImageOtherIndexType","value":"ExpressionError::InvalidImageOtherIndexType(Handle<crate::Expression>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Image other index type of {0:?} is not an integer scalar\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":165634,"byte_end":165702,"line_start":78,"line_end":78,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1487},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":165844,"byte_end":165870,"line_start":81,"line_end":81,"column_start":5,"column_end":31},"name":"InvalidImageCoordinateType","qualname":"::valid::expression::ExpressionError::InvalidImageCoordinateType","value":"ExpressionError::InvalidImageCoordinateType(crate::ImageDimension, Handle<crate::Expression>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Image coordinate type of {1:?} does not match dimension {0:?}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":165766,"byte_end":165839,"line_start":80,"line_end":80,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":1491},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":166081,"byte_end":166107,"line_start":83,"line_end":83,"column_start":5,"column_end":31},"name":"ComparisonSamplingMismatch","qualname":"::valid::expression::ExpressionError::ComparisonSamplingMismatch","value":"ExpressionError::ComparisonSamplingMismatch { image, sampler, has_ref }","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Comparison sampling mismatch: image has class {image:?}, but the sampler is comparison={sampler}, and the reference was provided={has_ref}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":165926,"byte_end":166076,"line_start":82,"line_end":82,"column_start":5,"column_end":155}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1495},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":166286,"byte_end":166305,"line_start":89,"line_end":89,"column_start":5,"column_end":24},"name":"InvalidSampleOffset","qualname":"::valid::expression::ExpressionError::InvalidSampleOffset","value":"ExpressionError::InvalidSampleOffset(crate::ImageDimension, Handle<crate::Constant>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Sample offset constant {1:?} doesn't match the image dimension {0:?}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":166201,"byte_end":166281,"line_start":88,"line_end":88,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1499},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":166419,"byte_end":166440,"line_start":91,"line_end":91,"column_start":5,"column_end":26},"name":"InvalidDepthReference","qualname":"::valid::expression::ExpressionError::InvalidDepthReference","value":"ExpressionError::InvalidDepthReference(Handle<crate::Expression>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Depth reference {0:?} is not a scalar float\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":166359,"byte_end":166414,"line_start":90,"line_end":90,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1502},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":166551,"byte_end":166569,"line_start":93,"line_end":93,"column_start":5,"column_end":23},"name":"InvalidSampleLevel","qualname":"::valid::expression::ExpressionError::InvalidSampleLevel","value":"ExpressionError::InvalidSampleLevel(crate::ImageDimension)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Sample level is not compatible with the image dimension {0:?}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":166473,"byte_end":166546,"line_start":92,"line_end":92,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1505},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":166668,"byte_end":166695,"line_start":95,"line_end":95,"column_start":5,"column_end":32},"name":"InvalidSampleLevelExactType","qualname":"::valid::expression::ExpressionError::InvalidSampleLevelExactType","value":"ExpressionError::InvalidSampleLevelExactType(Handle<crate::Expression>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Sample level (exact) type {0:?} is not a scalar float\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":166598,"byte_end":166663,"line_start":94,"line_end":94,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1508},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":166797,"byte_end":166823,"line_start":97,"line_end":97,"column_start":5,"column_end":31},"name":"InvalidSampleLevelBiasType","qualname":"::valid::expression::ExpressionError::InvalidSampleLevelBiasType","value":"ExpressionError::InvalidSampleLevelBiasType(Handle<crate::Expression>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Sample level (bias) type {0:?} is not a scalar float\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":166728,"byte_end":166792,"line_start":96,"line_end":96,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1511},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":166945,"byte_end":166975,"line_start":99,"line_end":99,"column_start":5,"column_end":35},"name":"InvalidSampleLevelGradientType","qualname":"::valid::expression::ExpressionError::InvalidSampleLevelGradientType","value":"ExpressionError::InvalidSampleLevelGradientType(crate::ImageDimension, Handle<crate::Expression>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Sample level (gradient) of {1:?} doesn't match the image dimension {0:?}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":166856,"byte_end":166940,"line_start":98,"line_end":98,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1515},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":167062,"byte_end":167081,"line_start":101,"line_end":101,"column_start":5,"column_end":24},"name":"InvalidCastArgument","qualname":"::valid::expression::ExpressionError::InvalidCastArgument","value":"ExpressionError::InvalidCastArgument","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Unable to cast\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":167031,"byte_end":167057,"line_start":100,"line_end":100,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1517},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":167136,"byte_end":167154,"line_start":103,"line_end":103,"column_start":5,"column_end":23},"name":"WrongArgumentCount","qualname":"::valid::expression::ExpressionError::WrongArgumentCount","value":"ExpressionError::WrongArgumentCount(crate::MathFunction)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid argument count for {0:?}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":167087,"byte_end":167131,"line_start":102,"line_end":102,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1520},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":167262,"byte_end":167281,"line_start":105,"line_end":105,"column_start":5,"column_end":24},"name":"InvalidArgumentType","qualname":"::valid::expression::ExpressionError::InvalidArgumentType","value":"ExpressionError::InvalidArgumentType(crate::MathFunction, u32, Handle<crate::Expression>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Argument [{1}] to {0:?} as expression {2:?} has an invalid type.\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":167181,"byte_end":167257,"line_start":104,"line_end":104,"column_start":5,"column_end":81}}]},{"kind":"Enum","id":{"krate":0,"index":1367},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":162294,"byte_end":162309,"line_start":9,"line_end":9,"column_start":10,"column_end":25},"name":"ExpressionError","qualname":"::valid::expression::ExpressionError","value":"pub enum ExpressionError {\n    DoesntExist,\n    NotInScope,\n    ForwardDependency(Handle<crate::Expression>),\n    InvalidBaseType(Handle<crate::Expression>),\n    InvalidIndexType(Handle<crate::Expression>),\n    IndexOutOfBounds(Handle<crate::Expression>, u32),\n    IndexMustBeConstant(Handle<crate::Expression>),\n    FunctionArgumentDoesntExist(u32),\n    ConstantDoesntExist(Handle<crate::Constant>),\n    GlobalVarDoesntExist(Handle<crate::GlobalVariable>),\n    LocalVarDoesntExist(Handle<crate::LocalVariable>),\n    InvalidPointerType(Handle<crate::Expression>),\n    InvalidArrayType(Handle<crate::Expression>),\n    InvalidSplatType(Handle<crate::Expression>),\n    InvalidVectorType(Handle<crate::Expression>),\n    InvalidSwizzleComponent(crate::SwizzleComponent, crate::VectorSize),\n    Compose(ComposeError),\n    InvalidUnaryOperandType(crate::UnaryOperator, Handle<crate::Expression>),\n    InvalidBinaryOperandTypes(crate::BinaryOperator,\n            Handle<crate::Expression>, Handle<crate::Expression>),\n    InvalidSelectTypes,\n    InvalidBooleanVector(Handle<crate::Expression>),\n    InvalidFloatArgument(Handle<crate::Expression>),\n    Type(ResolveError),\n    ExpectedGlobalVariable,\n    CallToUndeclaredFunction(Handle<crate::Function>),\n    ExpectedImageType(Handle<crate::Type>),\n    ExpectedSamplerType(Handle<crate::Type>),\n    InvalidImageClass(crate::ImageClass),\n    InvalidDerivative,\n    InvalidImageArrayIndex,\n    InvalidImageOtherIndex,\n    InvalidImageArrayIndexType(Handle<crate::Expression>),\n    InvalidImageOtherIndexType(Handle<crate::Expression>),\n    InvalidImageCoordinateType(crate::ImageDimension,\n            Handle<crate::Expression>),\n    ComparisonSamplingMismatch {\n            image: crate::ImageClass,\n            sampler: bool,\n            has_ref: bool,\n        },\n    InvalidSampleOffset(crate::ImageDimension, Handle<crate::Constant>),\n    InvalidDepthReference(Handle<crate::Expression>),\n    InvalidSampleLevel(crate::ImageDimension),\n    InvalidSampleLevelExactType(Handle<crate::Expression>),\n    InvalidSampleLevelBiasType(Handle<crate::Expression>),\n    InvalidSampleLevelGradientType(crate::ImageDimension,\n            Handle<crate::Expression>),\n    InvalidCastArgument,\n    WrongArgumentCount(crate::MathFunction),\n    InvalidArgumentType(crate::MathFunction, u32, Handle<crate::Expression>),\n}","parent":null,"children":[{"krate":0,"index":1390},{"krate":0,"index":1392},{"krate":0,"index":1394},{"krate":0,"index":1397},{"krate":0,"index":1400},{"krate":0,"index":1403},{"krate":0,"index":1407},{"krate":0,"index":1410},{"krate":0,"index":1413},{"krate":0,"index":1416},{"krate":0,"index":1419},{"krate":0,"index":1422},{"krate":0,"index":1425},{"krate":0,"index":1428},{"krate":0,"index":1431},{"krate":0,"index":1434},{"krate":0,"index":1438},{"krate":0,"index":1441},{"krate":0,"index":1445},{"krate":0,"index":1450},{"krate":0,"index":1452},{"krate":0,"index":1455},{"krate":0,"index":1458},{"krate":0,"index":1461},{"krate":0,"index":1463},{"krate":0,"index":1466},{"krate":0,"index":1469},{"krate":0,"index":1472},{"krate":0,"index":1475},{"krate":0,"index":1477},{"krate":0,"index":1479},{"krate":0,"index":1481},{"krate":0,"index":1484},{"krate":0,"index":1487},{"krate":0,"index":1491},{"krate":0,"index":1495},{"krate":0,"index":1499},{"krate":0,"index":1502},{"krate":0,"index":1505},{"krate":0,"index":1508},{"krate":0,"index":1511},{"krate":0,"index":1515},{"krate":0,"index":1517},{"krate":0,"index":1520}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1544},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":214872,"byte_end":214887,"line_start":12,"line_end":12,"column_start":5,"column_end":20},"name":"InvalidFunction","qualname":"::valid::function::CallError::InvalidFunction","value":"CallError::InvalidFunction","parent":{"krate":0,"index":1525},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Bad function\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":214843,"byte_end":214867,"line_start":11,"line_end":11,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1546},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":214949,"byte_end":214972,"line_start":14,"line_end":14,"column_start":5,"column_end":28},"name":"ForwardDeclaredFunction","qualname":"::valid::function::CallError::ForwardDeclaredFunction","value":"CallError::ForwardDeclaredFunction","parent":{"krate":0,"index":1525},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The callee is declared after the caller\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":214893,"byte_end":214944,"line_start":13,"line_end":13,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":1548},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":215033,"byte_end":215041,"line_start":16,"line_end":16,"column_start":5,"column_end":13},"name":"Argument","qualname":"::valid::function::CallError::Argument","value":"CallError::Argument { index, error }","parent":{"krate":0,"index":1525},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Argument {index} expression is invalid\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":214978,"byte_end":215028,"line_start":15,"line_end":15,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1551},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":215203,"byte_end":215223,"line_start":22,"line_end":22,"column_start":5,"column_end":25},"name":"ResultAlreadyInScope","qualname":"::valid::function::CallError::ResultAlreadyInScope","value":"CallError::ResultAlreadyInScope(Handle<crate::Expression>)","parent":{"krate":0,"index":1525},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Result expression {0:?} has already been introduced earlier\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":215127,"byte_end":215198,"line_start":21,"line_end":21,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1554},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":215296,"byte_end":215307,"line_start":24,"line_end":24,"column_start":5,"column_end":16},"name":"ResultValue","qualname":"::valid::function::CallError::ResultValue","value":"CallError::ResultValue(ExpressionError)","parent":{"krate":0,"index":1525},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Result value is invalid\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":215256,"byte_end":215291,"line_start":23,"line_end":23,"column_start":5,"column_end":40}}]},{"kind":"StructVariant","id":{"krate":0,"index":1557},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":215411,"byte_end":215424,"line_start":26,"line_end":26,"column_start":5,"column_end":18},"name":"ArgumentCount","qualname":"::valid::function::CallError::ArgumentCount","value":"CallError::ArgumentCount { required, seen }","parent":{"krate":0,"index":1525},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Requires {required} arguments, but {seen} are provided\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":215340,"byte_end":215406,"line_start":25,"line_end":25,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":1560},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":215558,"byte_end":215570,"line_start":28,"line_end":28,"column_start":5,"column_end":17},"name":"ArgumentType","qualname":"::valid::function::CallError::ArgumentType","value":"CallError::ArgumentType { index, required, seen_expression }","parent":{"krate":0,"index":1525},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Argument {index} value {seen_expression:?} doesn't match the type {required:?}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":215463,"byte_end":215553,"line_start":27,"line_end":27,"column_start":5,"column_end":95}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1564},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":215759,"byte_end":215777,"line_start":34,"line_end":34,"column_start":5,"column_end":23},"name":"ExpressionMismatch","qualname":"::valid::function::CallError::ExpressionMismatch","value":"CallError::ExpressionMismatch(Option<Handle<crate::Expression>>)","parent":{"krate":0,"index":1525},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The emitted expression doesn't match the call\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":215697,"byte_end":215754,"line_start":33,"line_end":33,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":1525},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":214827,"byte_end":214836,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"CallError","qualname":"::valid::function::CallError","value":"pub enum CallError {\n    InvalidFunction,\n    ForwardDeclaredFunction,\n    Argument {\n            index: usize,\n            error: ExpressionError,\n        },\n    ResultAlreadyInScope(Handle<crate::Expression>),\n    ResultValue(ExpressionError),\n    ArgumentCount {\n            required: usize,\n            seen: usize,\n        },\n    ArgumentType {\n            index: usize,\n            required: Handle<crate::Type>,\n            seen_expression: Handle<crate::Expression>,\n        },\n    ExpressionMismatch(Option<Handle<crate::Expression>>),\n}","parent":null,"children":[{"krate":0,"index":1544},{"krate":0,"index":1546},{"krate":0,"index":1548},{"krate":0,"index":1551},{"krate":0,"index":1554},{"krate":0,"index":1557},{"krate":0,"index":1560},{"krate":0,"index":1564}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1575},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":215990,"byte_end":216005,"line_start":41,"line_end":41,"column_start":5,"column_end":20},"name":"InitializerType","qualname":"::valid::function::LocalVariableError::InitializerType","value":"LocalVariableError::InitializerType","parent":{"krate":0,"index":1567},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Initializer doesn't match the variable type\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":215930,"byte_end":215985,"line_start":40,"line_end":40,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":1567},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":215905,"byte_end":215923,"line_start":39,"line_end":39,"column_start":10,"column_end":28},"name":"LocalVariableError","qualname":"::valid::function::LocalVariableError","value":"pub enum LocalVariableError { InitializerType, }","parent":null,"children":[{"krate":0,"index":1575}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1596},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":216167,"byte_end":216177,"line_start":48,"line_end":48,"column_start":5,"column_end":15},"name":"Expression","qualname":"::valid::function::FunctionError::Expression","value":"FunctionError::Expression { handle, error }","parent":{"krate":0,"index":1577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Expression {handle:?} is invalid\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":216118,"byte_end":216162,"line_start":47,"line_end":47,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1599},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":216361,"byte_end":216385,"line_start":54,"line_end":54,"column_start":5,"column_end":29},"name":"ExpressionAlreadyInScope","qualname":"::valid::function::FunctionError::ExpressionAlreadyInScope","value":"FunctionError::ExpressionAlreadyInScope(Handle<crate::Expression>)","parent":{"krate":0,"index":1577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Expression {0:?} can't be introduced - it's already in scope\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":216284,"byte_end":216356,"line_start":53,"line_end":53,"column_start":5,"column_end":77}}]},{"kind":"StructVariant","id":{"krate":0,"index":1602},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":216480,"byte_end":216493,"line_start":56,"line_end":56,"column_start":5,"column_end":18},"name":"LocalVariable","qualname":"::valid::function::FunctionError::LocalVariable","value":"FunctionError::LocalVariable { handle, name, error }","parent":{"krate":0,"index":1577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Local variable {handle:?} '{name}' is invalid\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":216418,"byte_end":216475,"line_start":55,"line_end":55,"column_start":5,"column_end":62}}]},{"kind":"StructVariant","id":{"krate":0,"index":1606},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":216727,"byte_end":216746,"line_start":63,"line_end":63,"column_start":5,"column_end":24},"name":"InvalidArgumentType","qualname":"::valid::function::FunctionError::InvalidArgumentType","value":"FunctionError::InvalidArgumentType { index, name }","parent":{"krate":0,"index":1577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Argument '{name}' at index {index} has a type that can't be passed into functions.\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":216628,"byte_end":216722,"line_start":62,"line_end":62,"column_start":5,"column_end":99}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1609},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":216856,"byte_end":216879,"line_start":65,"line_end":65,"column_start":5,"column_end":28},"name":"InstructionsAfterReturn","qualname":"::valid::function::FunctionError::InstructionsAfterReturn","value":"FunctionError::InstructionsAfterReturn","parent":{"krate":0,"index":1577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"There are instructions after `return`/`break`/`continue`\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":216783,"byte_end":216851,"line_start":64,"line_end":64,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1611},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":216958,"byte_end":216984,"line_start":67,"line_end":67,"column_start":5,"column_end":31},"name":"BreakContinueOutsideOfLoop","qualname":"::valid::function::FunctionError::BreakContinueOutsideOfLoop","value":"FunctionError::BreakContinueOutsideOfLoop","parent":{"krate":0,"index":1577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The `break`/`continue` is used outside of a loop context\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":216885,"byte_end":216953,"line_start":66,"line_end":66,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1613},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":217057,"byte_end":217074,"line_start":69,"line_end":69,"column_start":5,"column_end":22},"name":"InvalidReturnSpot","qualname":"::valid::function::FunctionError::InvalidReturnSpot","value":"FunctionError::InvalidReturnSpot","parent":{"krate":0,"index":1577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The `return` is called within a `continuing` block\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":216990,"byte_end":217052,"line_start":68,"line_end":68,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1615},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":217162,"byte_end":217179,"line_start":71,"line_end":71,"column_start":5,"column_end":22},"name":"InvalidReturnType","qualname":"::valid::function::FunctionError::InvalidReturnType","value":"FunctionError::InvalidReturnType(Option<Handle<crate::Expression>>)","parent":{"krate":0,"index":1577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The `return` value {0:?} does not match the function return value\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":217080,"byte_end":217157,"line_start":70,"line_end":70,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1618},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":217285,"byte_end":217298,"line_start":73,"line_end":73,"column_start":5,"column_end":18},"name":"InvalidIfType","qualname":"::valid::function::FunctionError::InvalidIfType","value":"FunctionError::InvalidIfType(Handle<crate::Expression>)","parent":{"krate":0,"index":1577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The `if` condition {0:?} is not a boolean scalar\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":217220,"byte_end":217280,"line_start":72,"line_end":72,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1621},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":217397,"byte_end":217414,"line_start":75,"line_end":75,"column_start":5,"column_end":22},"name":"InvalidSwitchType","qualname":"::valid::function::FunctionError::InvalidSwitchType","value":"FunctionError::InvalidSwitchType(Handle<crate::Expression>)","parent":{"krate":0,"index":1577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The `switch` value {0:?} is not an integer scalar\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":217331,"byte_end":217392,"line_start":74,"line_end":74,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1624},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":217507,"byte_end":217528,"line_start":77,"line_end":77,"column_start":5,"column_end":26},"name":"ConflictingSwitchCase","qualname":"::valid::function::FunctionError::ConflictingSwitchCase","value":"FunctionError::ConflictingSwitchCase(i32)","parent":{"krate":0,"index":1577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Multiple `switch` cases for {0} are present\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":217447,"byte_end":217502,"line_start":76,"line_end":76,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1627},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":217623,"byte_end":217642,"line_start":79,"line_end":79,"column_start":5,"column_end":24},"name":"InvalidStorePointer","qualname":"::valid::function::FunctionError::InvalidStorePointer","value":"FunctionError::InvalidStorePointer(Handle<crate::Expression>)","parent":{"krate":0,"index":1577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The pointer {0:?} doesn't relate to a valid destination for a store\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":217539,"byte_end":217618,"line_start":78,"line_end":78,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1630},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":217725,"byte_end":217742,"line_start":81,"line_end":81,"column_start":5,"column_end":22},"name":"InvalidStoreValue","qualname":"::valid::function::FunctionError::InvalidStoreValue","value":"FunctionError::InvalidStoreValue(Handle<crate::Expression>)","parent":{"krate":0,"index":1577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The value {0:?} can not be stored\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":217675,"byte_end":217720,"line_start":80,"line_end":80,"column_start":5,"column_end":50}}]},{"kind":"StructVariant","id":{"krate":0,"index":1633},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":217855,"byte_end":217872,"line_start":83,"line_end":83,"column_start":5,"column_end":22},"name":"InvalidStoreTypes","qualname":"::valid::function::FunctionError::InvalidStoreTypes","value":"FunctionError::InvalidStoreTypes { pointer, value }","parent":{"krate":0,"index":1577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Store of {value:?} into {pointer:?} doesn't have matching types\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":217775,"byte_end":217850,"line_start":82,"line_end":82,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1636},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":218022,"byte_end":218039,"line_start":88,"line_end":88,"column_start":5,"column_end":22},"name":"InvalidExpression","qualname":"::valid::function::FunctionError::InvalidExpression","value":"FunctionError::InvalidExpression(Handle<crate::Expression>)","parent":{"krate":0,"index":1577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The expression {0:?} is currupted\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":217972,"byte_end":218017,"line_start":87,"line_end":87,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1639},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":218123,"byte_end":218140,"line_start":90,"line_end":90,"column_start":5,"column_end":22},"name":"InvalidImageStore","qualname":"::valid::function::FunctionError::InvalidImageStore","value":"FunctionError::InvalidImageStore(ExpressionError)","parent":{"krate":0,"index":1577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Image store parameters are invalid\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":218072,"byte_end":218118,"line_start":89,"line_end":89,"column_start":5,"column_end":51}}]},{"kind":"StructVariant","id":{"krate":0,"index":1642},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":218221,"byte_end":218232,"line_start":92,"line_end":92,"column_start":5,"column_end":16},"name":"InvalidCall","qualname":"::valid::function::FunctionError::InvalidCall","value":"FunctionError::InvalidCall { function, error }","parent":{"krate":0,"index":1577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Call to {function:?} is invalid\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":218173,"byte_end":218216,"line_start":91,"line_end":91,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1645},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":218452,"byte_end":218473,"line_start":100,"line_end":100,"column_start":5,"column_end":26},"name":"NonUniformControlFlow","qualname":"::valid::function::FunctionError::NonUniformControlFlow","value":"FunctionError::NonUniformControlFlow(UniformityRequirements, Handle<crate::Expression>, UniformityDisruptor)","parent":{"krate":0,"index":1577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Required uniformity of control flow for {0:?} in {1:?} is not fulfilled because of {2:?}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":218333,"byte_end":218447,"line_start":97,"line_end":99,"column_start":5,"column_end":7}}]},{"kind":"Enum","id":{"krate":0,"index":1577},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":216098,"byte_end":216111,"line_start":46,"line_end":46,"column_start":10,"column_end":23},"name":"FunctionError","qualname":"::valid::function::FunctionError","value":"pub enum FunctionError {\n    Expression {\n            handle: Handle<crate::Expression>,\n            error: ExpressionError,\n        },\n    ExpressionAlreadyInScope(Handle<crate::Expression>),\n    LocalVariable {\n            handle: Handle<crate::LocalVariable>,\n            name: String,\n            error: LocalVariableError,\n        },\n    InvalidArgumentType {\n            index: usize,\n            name: String,\n        },\n    InstructionsAfterReturn,\n    BreakContinueOutsideOfLoop,\n    InvalidReturnSpot,\n    InvalidReturnType(Option<Handle<crate::Expression>>),\n    InvalidIfType(Handle<crate::Expression>),\n    InvalidSwitchType(Handle<crate::Expression>),\n    ConflictingSwitchCase(i32),\n    InvalidStorePointer(Handle<crate::Expression>),\n    InvalidStoreValue(Handle<crate::Expression>),\n    InvalidStoreTypes {\n            pointer: Handle<crate::Expression>,\n            value: Handle<crate::Expression>,\n        },\n    InvalidExpression(Handle<crate::Expression>),\n    InvalidImageStore(ExpressionError),\n    InvalidCall {\n            function: Handle<crate::Function>,\n            error: CallError,\n        },\n    NonUniformControlFlow(UniformityRequirements, Handle<crate::Expression>,\n            UniformityDisruptor),\n}","parent":null,"children":[{"krate":0,"index":1596},{"krate":0,"index":1599},{"krate":0,"index":1602},{"krate":0,"index":1606},{"krate":0,"index":1609},{"krate":0,"index":1611},{"krate":0,"index":1613},{"krate":0,"index":1615},{"krate":0,"index":1618},{"krate":0,"index":1621},{"krate":0,"index":1624},{"krate":0,"index":1627},{"krate":0,"index":1630},{"krate":0,"index":1633},{"krate":0,"index":1636},{"krate":0,"index":1639},{"krate":0,"index":1642},{"krate":0,"index":1645}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1754},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":238741,"byte_end":238753,"line_start":15,"line_end":15,"column_start":5,"column_end":17},"name":"InvalidUsage","qualname":"::valid::interface::GlobalVariableError::InvalidUsage","value":"GlobalVariableError::InvalidUsage","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Usage isn't compatible with the storage class\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":238679,"byte_end":238736,"line_start":14,"line_end":14,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1756},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":238820,"byte_end":238831,"line_start":17,"line_end":17,"column_start":5,"column_end":16},"name":"InvalidType","qualname":"::valid::interface::GlobalVariableError::InvalidType","value":"GlobalVariableError::InvalidType","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Type isn't compatible with the storage class\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":238759,"byte_end":238815,"line_start":16,"line_end":16,"column_start":5,"column_end":61}}]},{"kind":"StructVariant","id":{"krate":0,"index":1758},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":238909,"byte_end":238929,"line_start":19,"line_end":19,"column_start":5,"column_end":25},"name":"InvalidStorageAccess","qualname":"::valid::interface::GlobalVariableError::InvalidStorageAccess","value":"GlobalVariableError::InvalidStorageAccess { allowed, seen }","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Storage access {seen:?} exceeds the allowed {allowed:?}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":238837,"byte_end":238904,"line_start":18,"line_end":18,"column_start":5,"column_end":72}}]},{"kind":"StructVariant","id":{"krate":0,"index":1761},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":239092,"byte_end":239108,"line_start":24,"line_end":24,"column_start":5,"column_end":21},"name":"MissingTypeFlags","qualname":"::valid::interface::GlobalVariableError::MissingTypeFlags","value":"GlobalVariableError::MissingTypeFlags { required, seen }","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Type flags {seen:?} do not meet the required {required:?}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":239018,"byte_end":239087,"line_start":23,"line_end":23,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1764},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":239226,"byte_end":239247,"line_start":29,"line_end":29,"column_start":5,"column_end":26},"name":"UnsupportedCapability","qualname":"::valid::interface::GlobalVariableError::UnsupportedCapability","value":"GlobalVariableError::UnsupportedCapability(Capabilities)","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Capability {0:?} is not supported\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":239176,"byte_end":239221,"line_start":28,"line_end":28,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1767},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":239331,"byte_end":239345,"line_start":31,"line_end":31,"column_start":5,"column_end":19},"name":"InvalidBinding","qualname":"::valid::interface::GlobalVariableError::InvalidBinding","value":"GlobalVariableError::InvalidBinding","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Binding decoration is missing or not applicable\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":239267,"byte_end":239326,"line_start":30,"line_end":30,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1769},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":239434,"byte_end":239443,"line_start":33,"line_end":33,"column_start":5,"column_end":14},"name":"Alignment","qualname":"::valid::interface::GlobalVariableError::Alignment","value":"GlobalVariableError::Alignment(Handle<crate::Type>, Disalignment)","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Alignment requirements for this storage class are not met by {0:?}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":239351,"byte_end":239429,"line_start":32,"line_end":32,"column_start":5,"column_end":83}}]},{"kind":"Enum","id":{"krate":0,"index":1742},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":238653,"byte_end":238672,"line_start":13,"line_end":13,"column_start":10,"column_end":29},"name":"GlobalVariableError","qualname":"::valid::interface::GlobalVariableError","value":"pub enum GlobalVariableError {\n    InvalidUsage,\n    InvalidType,\n    InvalidStorageAccess {\n            allowed: crate::StorageAccess,\n            seen: crate::StorageAccess,\n        },\n    MissingTypeFlags {\n            required: TypeFlags,\n            seen: TypeFlags,\n        },\n    UnsupportedCapability(Capabilities),\n    InvalidBinding,\n    Alignment(Handle<crate::Type>, Disalignment),\n}","parent":null,"children":[{"krate":0,"index":1754},{"krate":0,"index":1756},{"krate":0,"index":1758},{"krate":0,"index":1761},{"krate":0,"index":1764},{"krate":0,"index":1767},{"krate":0,"index":1769}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1788},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":239621,"byte_end":239632,"line_start":39,"line_end":39,"column_start":5,"column_end":16},"name":"InvalidType","qualname":"::valid::interface::VaryingError::InvalidType","value":"VaryingError::InvalidType(Handle<crate::Type>)","parent":{"krate":0,"index":1773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The type {0:?} does not match the varying\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":239563,"byte_end":239616,"line_start":38,"line_end":38,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1791},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":239702,"byte_end":239722,"line_start":41,"line_end":41,"column_start":5,"column_end":25},"name":"InvalidInterpolation","qualname":"::valid::interface::VaryingError::InvalidInterpolation","value":"VaryingError::InvalidInterpolation","parent":{"krate":0,"index":1773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Interpolation is not valid\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":239659,"byte_end":239697,"line_start":40,"line_end":40,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1793},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":239828,"byte_end":239848,"line_start":43,"line_end":43,"column_start":5,"column_end":25},"name":"MissingInterpolation","qualname":"::valid::interface::VaryingError::MissingInterpolation","value":"VaryingError::MissingInterpolation","parent":{"krate":0,"index":1773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Interpolation must be specified on vertex shader outputs and fragment shader inputs\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":239728,"byte_end":239823,"line_start":42,"line_end":42,"column_start":5,"column_end":100}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1795},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":239916,"byte_end":239935,"line_start":45,"line_end":45,"column_start":5,"column_end":24},"name":"InvalidBuiltInStage","qualname":"::valid::interface::VaryingError::InvalidBuiltInStage","value":"VaryingError::InvalidBuiltInStage(crate::BuiltIn)","parent":{"krate":0,"index":1773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Built-in {0:?} is not available at this stage\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":239854,"byte_end":239911,"line_start":44,"line_end":44,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1798},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":240008,"byte_end":240026,"line_start":47,"line_end":47,"column_start":5,"column_end":23},"name":"InvalidBuiltInType","qualname":"::valid::interface::VaryingError::InvalidBuiltInType","value":"VaryingError::InvalidBuiltInType(crate::BuiltIn)","parent":{"krate":0,"index":1773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Built-in type for {0:?} is invalid\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":239957,"byte_end":240003,"line_start":46,"line_end":46,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1801},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":240127,"byte_end":240141,"line_start":49,"line_end":49,"column_start":5,"column_end":19},"name":"MissingBinding","qualname":"::valid::interface::VaryingError::MissingBinding","value":"VaryingError::MissingBinding","parent":{"krate":0,"index":1773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Entry point arguments and return values must all have bindings\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":240048,"byte_end":240122,"line_start":48,"line_end":48,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1803},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":240202,"byte_end":240222,"line_start":51,"line_end":51,"column_start":5,"column_end":25},"name":"MemberMissingBinding","qualname":"::valid::interface::VaryingError::MemberMissingBinding","value":"VaryingError::MemberMissingBinding(u32)","parent":{"krate":0,"index":1773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Struct member {0} is missing a binding\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":240147,"byte_end":240197,"line_start":50,"line_end":50,"column_start":5,"column_end":55}}]},{"kind":"StructVariant","id":{"krate":0,"index":1806},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":240302,"byte_end":240318,"line_start":53,"line_end":53,"column_start":5,"column_end":21},"name":"BindingCollision","qualname":"::valid::interface::VaryingError::BindingCollision","value":"VaryingError::BindingCollision { location }","parent":{"krate":0,"index":1773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Multiple bindings at location {location} are present\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":240233,"byte_end":240297,"line_start":52,"line_end":52,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1808},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":240399,"byte_end":240415,"line_start":55,"line_end":55,"column_start":5,"column_end":21},"name":"DuplicateBuiltIn","qualname":"::valid::interface::VaryingError::DuplicateBuiltIn","value":"VaryingError::DuplicateBuiltIn(crate::BuiltIn)","parent":{"krate":0,"index":1773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Built-in {0:?} is present more than once\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":240342,"byte_end":240394,"line_start":54,"line_end":54,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":1773},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":239544,"byte_end":239556,"line_start":37,"line_end":37,"column_start":10,"column_end":22},"name":"VaryingError","qualname":"::valid::interface::VaryingError","value":"pub enum VaryingError {\n    InvalidType(Handle<crate::Type>),\n    InvalidInterpolation,\n    MissingInterpolation,\n    InvalidBuiltInStage(crate::BuiltIn),\n    InvalidBuiltInType(crate::BuiltIn),\n    MissingBinding,\n    MemberMissingBinding(u32),\n    BindingCollision {\n            location: u32,\n        },\n    DuplicateBuiltIn(crate::BuiltIn),\n}","parent":null,"children":[{"krate":0,"index":1788},{"krate":0,"index":1791},{"krate":0,"index":1793},{"krate":0,"index":1795},{"krate":0,"index":1798},{"krate":0,"index":1801},{"krate":0,"index":1803},{"krate":0,"index":1806},{"krate":0,"index":1808}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1832},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":240559,"byte_end":240567,"line_start":61,"line_end":61,"column_start":5,"column_end":13},"name":"Conflict","qualname":"::valid::interface::EntryPointError::Conflict","value":"EntryPointError::Conflict","parent":{"krate":0,"index":1811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Multiple conflicting entry points\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":240509,"byte_end":240554,"line_start":60,"line_end":60,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1834},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":240624,"byte_end":240648,"line_start":63,"line_end":63,"column_start":5,"column_end":29},"name":"UnexpectedEarlyDepthTest","qualname":"::valid::interface::EntryPointError::UnexpectedEarlyDepthTest","value":"EntryPointError::UnexpectedEarlyDepthTest","parent":{"krate":0,"index":1811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Early depth test is not applicable\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":240573,"byte_end":240619,"line_start":62,"line_end":62,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1836},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":240703,"byte_end":240726,"line_start":65,"line_end":65,"column_start":5,"column_end":28},"name":"UnexpectedWorkgroupSize","qualname":"::valid::interface::EntryPointError::UnexpectedWorkgroupSize","value":"EntryPointError::UnexpectedWorkgroupSize","parent":{"krate":0,"index":1811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Workgroup size is not applicable\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":240654,"byte_end":240698,"line_start":64,"line_end":64,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1838},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":240779,"byte_end":240802,"line_start":67,"line_end":67,"column_start":5,"column_end":28},"name":"OutOfRangeWorkgroupSize","qualname":"::valid::interface::EntryPointError::OutOfRangeWorkgroupSize","value":"EntryPointError::OutOfRangeWorkgroupSize","parent":{"krate":0,"index":1811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Workgroup size is out of range\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":240732,"byte_end":240774,"line_start":66,"line_end":66,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1840},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":240864,"byte_end":240888,"line_start":69,"line_end":69,"column_start":5,"column_end":29},"name":"ForbiddenStageOperations","qualname":"::valid::interface::EntryPointError::ForbiddenStageOperations","value":"EntryPointError::ForbiddenStageOperations","parent":{"krate":0,"index":1811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Uses operations forbidden at this stage\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":240808,"byte_end":240859,"line_start":68,"line_end":68,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1842},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":240961,"byte_end":240979,"line_start":71,"line_end":71,"column_start":5,"column_end":23},"name":"InvalidGlobalUsage","qualname":"::valid::interface::EntryPointError::InvalidGlobalUsage","value":"EntryPointError::InvalidGlobalUsage(Handle<crate::GlobalVariable>, GlobalUse)","parent":{"krate":0,"index":1811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Global variable {0:?} is used incorrectly as {1:?}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":240894,"byte_end":240956,"line_start":70,"line_end":70,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1846},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":241091,"byte_end":241107,"line_start":73,"line_end":73,"column_start":5,"column_end":21},"name":"BindingCollision","qualname":"::valid::interface::EntryPointError::BindingCollision","value":"EntryPointError::BindingCollision(Handle<crate::GlobalVariable>)","parent":{"krate":0,"index":1811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Bindings for {0:?} conflict with other resource\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":241027,"byte_end":241086,"line_start":72,"line_end":72,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1849},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":241187,"byte_end":241195,"line_start":75,"line_end":75,"column_start":5,"column_end":13},"name":"Argument","qualname":"::valid::interface::EntryPointError::Argument","value":"EntryPointError::Argument(u32, VaryingError)","parent":{"krate":0,"index":1811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Argument {0} varying error\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":241144,"byte_end":241182,"line_start":74,"line_end":74,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1853},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":241267,"byte_end":241273,"line_start":77,"line_end":77,"column_start":5,"column_end":11},"name":"Result","qualname":"::valid::interface::EntryPointError::Result","value":"EntryPointError::Result(VaryingError)","parent":{"krate":0,"index":1811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Result varying error\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":241230,"byte_end":241262,"line_start":76,"line_end":76,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":1856},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":241382,"byte_end":241409,"line_start":79,"line_end":79,"column_start":5,"column_end":32},"name":"InvalidIntegerInterpolation","qualname":"::valid::interface::EntryPointError::InvalidIntegerInterpolation","value":"EntryPointError::InvalidIntegerInterpolation { location }","parent":{"krate":0,"index":1811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Location {location} onterpolation of an integer has to be flat\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":241303,"byte_end":241377,"line_start":78,"line_end":78,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1858},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":241459,"byte_end":241467,"line_start":81,"line_end":81,"column_start":5,"column_end":13},"name":"Function","qualname":"::valid::interface::EntryPointError::Function","value":"EntryPointError::Function(FunctionError)","parent":{"krate":0,"index":1811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":241433,"byte_end":241454,"line_start":80,"line_end":80,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":1811},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":240487,"byte_end":240502,"line_start":59,"line_end":59,"column_start":10,"column_end":25},"name":"EntryPointError","qualname":"::valid::interface::EntryPointError","value":"pub enum EntryPointError {\n    Conflict,\n    UnexpectedEarlyDepthTest,\n    UnexpectedWorkgroupSize,\n    OutOfRangeWorkgroupSize,\n    ForbiddenStageOperations,\n    InvalidGlobalUsage(Handle<crate::GlobalVariable>, GlobalUse),\n    BindingCollision(Handle<crate::GlobalVariable>),\n    Argument(u32, VaryingError),\n    Result(VaryingError),\n    InvalidIntegerInterpolation {\n            location: u32,\n        },\n    Function(FunctionError),\n}","parent":null,"children":[{"krate":0,"index":1832},{"krate":0,"index":1834},{"krate":0,"index":1836},{"krate":0,"index":1838},{"krate":0,"index":1840},{"krate":0,"index":1842},{"krate":0,"index":1846},{"krate":0,"index":1849},{"krate":0,"index":1853},{"krate":0,"index":1856},{"krate":0,"index":1858}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1861},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":258157,"byte_end":258166,"line_start":9,"line_end":9,"column_start":16,"column_end":25},"name":"TypeFlags","qualname":"::valid::r#type::TypeFlags","value":"TypeFlags {  }","parent":null,"children":[{"krate":0,"index":1862}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":13937033,"byte_end":13937042,"line_start":362,"line_end":362,"column_start":11,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":1898},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":258231,"byte_end":258235,"line_start":11,"line_end":11,"column_start":15,"column_end":19},"name":"DATA","qualname":"::valid::r#type::TypeFlags::DATA","value":"Self","parent":{"krate":0,"index":1897},"children":[],"decl_id":null,"docs":" Can be used for data variables.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1899},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":258299,"byte_end":258304,"line_start":13,"line_end":13,"column_start":15,"column_end":20},"name":"SIZED","qualname":"::valid::r#type::TypeFlags::SIZED","value":"Self","parent":{"krate":0,"index":1897},"children":[],"decl_id":null,"docs":" The data type has known size.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1900},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":258394,"byte_end":258403,"line_start":15,"line_end":15,"column_start":15,"column_end":24},"name":"INTERFACE","qualname":"::valid::r#type::TypeFlags::INTERFACE","value":"Self","parent":{"krate":0,"index":1897},"children":[],"decl_id":null,"docs":" Can be be used for interfacing between pipeline stages.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1901},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":258480,"byte_end":258491,"line_start":17,"line_end":17,"column_start":15,"column_end":26},"name":"HOST_SHARED","qualname":"::valid::r#type::TypeFlags::HOST_SHARED","value":"Self","parent":{"krate":0,"index":1897},"children":[],"decl_id":null,"docs":" Can be used for host-shareable structures.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1902},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":258566,"byte_end":258575,"line_start":19,"line_end":19,"column_start":15,"column_end":24},"name":"TOP_LEVEL","qualname":"::valid::r#type::TypeFlags::TOP_LEVEL","value":"Self","parent":{"krate":0,"index":1897},"children":[],"decl_id":null,"docs":" This is a top-level host-shareable type.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1984},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":258767,"byte_end":258778,"line_start":26,"line_end":26,"column_start":5,"column_end":16},"name":"ArrayStride","qualname":"::valid::r#type::Disalignment::ArrayStride","value":"Disalignment::ArrayStride { stride, alignment }","parent":{"krate":0,"index":1968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The array stride {stride} is not a multiple of the required alignment {alignment}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":258669,"byte_end":258762,"line_start":25,"line_end":25,"column_start":5,"column_end":98}}]},{"kind":"StructVariant","id":{"krate":0,"index":1987},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":258912,"byte_end":258922,"line_start":28,"line_end":28,"column_start":5,"column_end":15},"name":"StructSpan","qualname":"::valid::r#type::Disalignment::StructSpan","value":"Disalignment::StructSpan { span, alignment }","parent":{"krate":0,"index":1968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The struct span {span}, is not a multiple of the required alignment {alignment}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":258816,"byte_end":258907,"line_start":27,"line_end":27,"column_start":5,"column_end":96}}]},{"kind":"StructVariant","id":{"krate":0,"index":1990},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":259073,"byte_end":259085,"line_start":30,"line_end":30,"column_start":5,"column_end":17},"name":"MemberOffset","qualname":"::valid::r#type::Disalignment::MemberOffset","value":"Disalignment::MemberOffset { index, offset, alignment }","parent":{"krate":0,"index":1968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The struct member[{index}] offset {offset} is not a multiple of the required alignment {alignment}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":258958,"byte_end":259068,"line_start":29,"line_end":29,"column_start":5,"column_end":115}}]},{"kind":"StructVariant","id":{"krate":0,"index":1994},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":259231,"byte_end":259244,"line_start":36,"line_end":36,"column_start":5,"column_end":18},"name":"UnsizedMember","qualname":"::valid::r#type::Disalignment::UnsizedMember","value":"Disalignment::UnsizedMember { index }","parent":{"krate":0,"index":1968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The struct member[{index}] is not statically sized\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":259164,"byte_end":259226,"line_start":35,"line_end":35,"column_start":5,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":1968},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":258650,"byte_end":258662,"line_start":24,"line_end":24,"column_start":10,"column_end":22},"name":"Disalignment","qualname":"::valid::r#type::Disalignment","value":"pub enum Disalignment {\n    ArrayStride {\n            stride: u32,\n            alignment: u32,\n        },\n    StructSpan {\n            span: u32,\n            alignment: u32,\n        },\n    MemberOffset {\n            index: u32,\n            offset: u32,\n            alignment: u32,\n        },\n    UnsizedMember {\n            index: u32,\n        },\n}","parent":null,"children":[{"krate":0,"index":1984},{"krate":0,"index":1987},{"krate":0,"index":1990},{"krate":0,"index":1994}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2011},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":259391,"byte_end":259403,"line_start":42,"line_end":42,"column_start":5,"column_end":17},"name":"InvalidWidth","qualname":"::valid::r#type::TypeError::InvalidWidth","value":"TypeError::InvalidWidth(crate::ScalarKind, crate::Bytes)","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The {0:?} scalar width {1} is not supported\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":259331,"byte_end":259386,"line_start":41,"line_end":41,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2015},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":259500,"byte_end":259514,"line_start":44,"line_end":44,"column_start":5,"column_end":19},"name":"UnresolvedBase","qualname":"::valid::r#type::TypeError::UnresolvedBase","value":"TypeError::UnresolvedBase(Handle<crate::Type>)","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The base handle {0:?} can not be resolved\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":259442,"byte_end":259495,"line_start":43,"line_end":43,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2018},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":259589,"byte_end":259600,"line_start":46,"line_end":46,"column_start":5,"column_end":16},"name":"InvalidData","qualname":"::valid::r#type::TypeError::InvalidData","value":"TypeError::InvalidData(Handle<crate::Type>)","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Expected data type, found {0:?}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":259541,"byte_end":259584,"line_start":45,"line_end":45,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2021},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":259693,"byte_end":259709,"line_start":48,"line_end":48,"column_start":5,"column_end":21},"name":"InvalidBlockType","qualname":"::valid::r#type::TypeError::InvalidBlockType","value":"TypeError::InvalidBlockType(Handle<crate::Type>)","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Structure type {0:?} can not be a block structure\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":259627,"byte_end":259688,"line_start":47,"line_end":47,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2024},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":259793,"byte_end":259813,"line_start":50,"line_end":50,"column_start":5,"column_end":25},"name":"InvalidArrayBaseType","qualname":"::valid::r#type::TypeError::InvalidArrayBaseType","value":"TypeError::InvalidArrayBaseType(Handle<crate::Type>)","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Base type {0:?} for the array is invalid\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":259736,"byte_end":259788,"line_start":49,"line_end":49,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2027},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":259909,"byte_end":259933,"line_start":52,"line_end":52,"column_start":5,"column_end":29},"name":"InvalidArraySizeConstant","qualname":"::valid::r#type::TypeError::InvalidArraySizeConstant","value":"TypeError::InvalidArraySizeConstant(Handle<crate::Constant>)","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The constant {0:?} can not be used for an array size\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":259840,"byte_end":259904,"line_start":51,"line_end":51,"column_start":5,"column_end":69}}]},{"kind":"StructVariant","id":{"krate":0,"index":2030},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":260052,"byte_end":260075,"line_start":54,"line_end":54,"column_start":5,"column_end":28},"name":"InsufficientArrayStride","qualname":"::valid::r#type::TypeError::InsufficientArrayStride","value":"TypeError::InsufficientArrayStride { stride, base_size }","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Array stride {stride} is smaller than the base element size {base_size}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":259964,"byte_end":260047,"line_start":53,"line_end":53,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2033},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":260184,"byte_end":260203,"line_start":56,"line_end":56,"column_start":5,"column_end":24},"name":"InvalidDynamicArray","qualname":"::valid::r#type::TypeError::InvalidDynamicArray","value":"TypeError::InvalidDynamicArray(String, Handle<crate::Type>)","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Field '{0}' can't be dynamically-sized, has type {1:?}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":260113,"byte_end":260179,"line_start":55,"line_end":55,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":2037},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":260321,"byte_end":260334,"line_start":58,"line_end":58,"column_start":5,"column_end":18},"name":"MemberOverlap","qualname":"::valid::r#type::TypeError::MemberOverlap","value":"TypeError::MemberOverlap { index, offset }","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Structure member[{index}] at {offset} overlaps the previous member\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":260238,"byte_end":260316,"line_start":57,"line_end":57,"column_start":5,"column_end":83}}]},{"kind":"StructVariant","id":{"krate":0,"index":2040},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":260498,"byte_end":260515,"line_start":62,"line_end":62,"column_start":5,"column_end":22},"name":"MemberOutOfBounds","qualname":"::valid::r#type::TypeError::MemberOutOfBounds","value":"TypeError::MemberOutOfBounds { index, offset, size, span }","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Structure member[{index}] at {offset} and size {size} crosses the structure boundary of size {span}\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":260368,"byte_end":260493,"line_start":59,"line_end":61,"column_start":5,"column_end":7}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2045},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":260674,"byte_end":260688,"line_start":69,"line_end":69,"column_start":5,"column_end":19},"name":"NestedTopLevel","qualname":"::valid::r#type::TypeError::NestedTopLevel","value":"TypeError::NestedTopLevel","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The composite type contains a top-level structure\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":260608,"byte_end":260669,"line_start":68,"line_end":68,"column_start":5,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":1996},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":259315,"byte_end":259324,"line_start":40,"line_end":40,"column_start":10,"column_end":19},"name":"TypeError","qualname":"::valid::r#type::TypeError","value":"pub enum TypeError {\n    InvalidWidth(crate::ScalarKind, crate::Bytes),\n    UnresolvedBase(Handle<crate::Type>),\n    InvalidData(Handle<crate::Type>),\n    InvalidBlockType(Handle<crate::Type>),\n    InvalidArrayBaseType(Handle<crate::Type>),\n    InvalidArraySizeConstant(Handle<crate::Constant>),\n    InsufficientArrayStride {\n            stride: u32,\n            base_size: u32,\n        },\n    InvalidDynamicArray(String, Handle<crate::Type>),\n    MemberOverlap {\n            index: u32,\n            offset: u32,\n        },\n    MemberOutOfBounds {\n            index: u32,\n            offset: u32,\n            size: u32,\n            span: u32,\n        },\n    NestedTopLevel,\n}","parent":null,"children":[{"krate":0,"index":2011},{"krate":0,"index":2015},{"krate":0,"index":2018},{"krate":0,"index":2021},{"krate":0,"index":2024},{"krate":0,"index":2027},{"krate":0,"index":2030},{"krate":0,"index":2033},{"krate":0,"index":2037},{"krate":0,"index":2040},{"krate":0,"index":2045}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2055},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":111439,"byte_end":111454,"line_start":30,"line_end":30,"column_start":16,"column_end":31},"name":"ValidationFlags","qualname":"::valid::ValidationFlags","value":"ValidationFlags {  }","parent":null,"children":[{"krate":0,"index":2056}],"decl_id":null,"docs":" Validation flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2092},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":111500,"byte_end":111511,"line_start":32,"line_end":32,"column_start":15,"column_end":26},"name":"EXPRESSIONS","qualname":"::valid::ValidationFlags::EXPRESSIONS","value":"Self","parent":{"krate":0,"index":2091},"children":[],"decl_id":null,"docs":" Expressions.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2093},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":111576,"byte_end":111582,"line_start":34,"line_end":34,"column_start":15,"column_end":21},"name":"BLOCKS","qualname":"::valid::ValidationFlags::BLOCKS","value":"Self","parent":{"krate":0,"index":2091},"children":[],"decl_id":null,"docs":" Statements and blocks of them.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2094},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":111675,"byte_end":111698,"line_start":36,"line_end":36,"column_start":15,"column_end":38},"name":"CONTROL_FLOW_UNIFORMITY","qualname":"::valid::ValidationFlags::CONTROL_FLOW_UNIFORMITY","value":"Self","parent":{"krate":0,"index":2091},"children":[],"decl_id":null,"docs":" Uniformity of control flow for operations that require it.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2095},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":111766,"byte_end":111780,"line_start":38,"line_end":38,"column_start":15,"column_end":29},"name":"STRUCT_LAYOUTS","qualname":"::valid::ValidationFlags::STRUCT_LAYOUTS","value":"Self","parent":{"krate":0,"index":2091},"children":[],"decl_id":null,"docs":" Host-shareable structure layouts.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2096},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":111825,"byte_end":111834,"line_start":40,"line_end":40,"column_start":15,"column_end":24},"name":"CONSTANTS","qualname":"::valid::ValidationFlags::CONSTANTS","value":"Self","parent":{"krate":0,"index":2091},"children":[],"decl_id":null,"docs":" Constants.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2164},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":112182,"byte_end":112194,"line_start":56,"line_end":56,"column_start":16,"column_end":28},"name":"Capabilities","qualname":"::valid::Capabilities","value":"Capabilities {  }","parent":null,"children":[{"krate":0,"index":2165}],"decl_id":null,"docs":" Allowed IR capabilities.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2198},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":112268,"byte_end":112281,"line_start":58,"line_end":58,"column_start":15,"column_end":28},"name":"PUSH_CONSTANT","qualname":"::valid::Capabilities::PUSH_CONSTANT","value":"Self","parent":{"krate":0,"index":2197},"children":[],"decl_id":null,"docs":" Support for `StorageClass:PushConstant`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2199},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":112344,"byte_end":112351,"line_start":60,"line_end":60,"column_start":15,"column_end":22},"name":"FLOAT64","qualname":"::valid::Capabilities::FLOAT64","value":"Self","parent":{"krate":0,"index":2197},"children":[],"decl_id":null,"docs":" Float values with width = 8.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2256},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":112565,"byte_end":112577,"line_start":68,"line_end":68,"column_start":16,"column_end":28},"name":"ShaderStages","qualname":"::valid::ShaderStages","value":"ShaderStages {  }","parent":null,"children":[{"krate":0,"index":2257}],"decl_id":null,"docs":" Validation flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2291},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":112598,"byte_end":112604,"line_start":69,"line_end":69,"column_start":15,"column_end":21},"name":"VERTEX","qualname":"::valid::ShaderStages::VERTEX","value":"Self","parent":{"krate":0,"index":2290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2292},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":112626,"byte_end":112634,"line_start":70,"line_end":70,"column_start":15,"column_end":23},"name":"FRAGMENT","qualname":"::valid::ShaderStages::FRAGMENT","value":"Self","parent":{"krate":0,"index":2290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2293},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":112656,"byte_end":112663,"line_start":71,"line_end":71,"column_start":15,"column_end":22},"name":"COMPUTE","qualname":"::valid::ShaderStages::COMPUTE","value":"Self","parent":{"krate":0,"index":2290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2353},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":112834,"byte_end":112844,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"ModuleInfo","qualname":"::valid::ModuleInfo","value":"ModuleInfo {  }","parent":null,"children":[{"krate":0,"index":2354},{"krate":0,"index":2355}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2358},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":113160,"byte_end":113169,"line_start":91,"line_end":91,"column_start":12,"column_end":21},"name":"Validator","qualname":"::valid::Validator","value":"Validator {  }","parent":null,"children":[{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2363},{"krate":0,"index":2364},{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2367}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2384},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":113607,"byte_end":113618,"line_start":106,"line_end":106,"column_start":5,"column_end":16},"name":"InvalidType","qualname":"::valid::ConstantError::InvalidType","value":"ConstantError::InvalidType","parent":{"krate":0,"index":2370},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The type doesn't match the constant\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":113555,"byte_end":113602,"line_start":105,"line_end":105,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2386},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":113687,"byte_end":113706,"line_start":108,"line_end":108,"column_start":5,"column_end":24},"name":"UnresolvedComponent","qualname":"::valid::ConstantError::UnresolvedComponent","value":"ConstantError::UnresolvedComponent(Handle<crate::Constant>)","parent":{"krate":0,"index":2370},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The component handle {0:?} can not be resolved\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":113624,"byte_end":113682,"line_start":107,"line_end":107,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2389},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":113801,"byte_end":113815,"line_start":110,"line_end":110,"column_start":5,"column_end":19},"name":"UnresolvedSize","qualname":"::valid::ConstantError::UnresolvedSize","value":"ConstantError::UnresolvedSize(Handle<crate::Constant>)","parent":{"krate":0,"index":2370},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The array size handle {0:?} can not be resolved\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":113737,"byte_end":113796,"line_start":109,"line_end":109,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2392},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":113872,"byte_end":113879,"line_start":112,"line_end":112,"column_start":5,"column_end":12},"name":"Compose","qualname":"::valid::ConstantError::Compose","value":"ConstantError::Compose(ComposeError)","parent":{"krate":0,"index":2370},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":113846,"byte_end":113867,"line_start":111,"line_end":111,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":2370},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":113535,"byte_end":113548,"line_start":104,"line_end":104,"column_start":10,"column_end":23},"name":"ConstantError","qualname":"::valid::ConstantError","value":"pub enum ConstantError {\n    InvalidType,\n    UnresolvedComponent(Handle<crate::Constant>),\n    UnresolvedSize(Handle<crate::Constant>),\n    Compose(ComposeError),\n}","parent":null,"children":[{"krate":0,"index":2384},{"krate":0,"index":2386},{"krate":0,"index":2389},{"krate":0,"index":2392}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2416},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":114005,"byte_end":114013,"line_start":118,"line_end":118,"column_start":5,"column_end":13},"name":"Layouter","qualname":"::valid::ValidationError::Layouter","value":"ValidationError::Layouter(InvalidBaseType)","parent":{"krate":0,"index":2395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":113979,"byte_end":114000,"line_start":117,"line_end":117,"column_start":5,"column_end":26}}]},{"kind":"StructVariant","id":{"krate":0,"index":2419},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":114096,"byte_end":114100,"line_start":120,"line_end":120,"column_start":5,"column_end":9},"name":"Type","qualname":"::valid::ValidationError::Type","value":"ValidationError::Type { handle, name, error }","parent":{"krate":0,"index":2395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Type {handle:?} '{name}' is invalid\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":114044,"byte_end":114091,"line_start":119,"line_end":119,"column_start":5,"column_end":52}}]},{"kind":"StructVariant","id":{"krate":0,"index":2423},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":114273,"byte_end":114281,"line_start":127,"line_end":127,"column_start":5,"column_end":13},"name":"Constant","qualname":"::valid::ValidationError::Constant","value":"ValidationError::Constant { handle, name, error }","parent":{"krate":0,"index":2395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Constant {handle:?} '{name}' is invalid\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":114217,"byte_end":114268,"line_start":126,"line_end":126,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":2427},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":114469,"byte_end":114483,"line_start":134,"line_end":134,"column_start":5,"column_end":19},"name":"GlobalVariable","qualname":"::valid::ValidationError::GlobalVariable","value":"ValidationError::GlobalVariable { handle, name, error }","parent":{"krate":0,"index":2395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Global variable {handle:?} '{name}' is invalid\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":114406,"byte_end":114464,"line_start":133,"line_end":133,"column_start":5,"column_end":63}}]},{"kind":"StructVariant","id":{"krate":0,"index":2431},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":114676,"byte_end":114684,"line_start":141,"line_end":141,"column_start":5,"column_end":13},"name":"Function","qualname":"::valid::ValidationError::Function","value":"ValidationError::Function { handle, name, error }","parent":{"krate":0,"index":2395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Function {handle:?} '{name}' is invalid\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":114620,"byte_end":114671,"line_start":140,"line_end":140,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":2435},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":114868,"byte_end":114878,"line_start":148,"line_end":148,"column_start":5,"column_end":15},"name":"EntryPoint","qualname":"::valid::ValidationError::EntryPoint","value":"ValidationError::EntryPoint { stage, name, error }","parent":{"krate":0,"index":2395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Entry point {name} at {stage:?} is invalid\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":114809,"byte_end":114863,"line_start":147,"line_end":147,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2439},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":115035,"byte_end":115044,"line_start":155,"line_end":155,"column_start":5,"column_end":14},"name":"Corrupted","qualname":"::valid::ValidationError::Corrupted","value":"ValidationError::Corrupted","parent":{"krate":0,"index":2395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Module is corrupted\")","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":114999,"byte_end":115030,"line_start":154,"line_end":154,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":2395},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":113957,"byte_end":113972,"line_start":116,"line_end":116,"column_start":10,"column_end":25},"name":"ValidationError","qualname":"::valid::ValidationError","value":"pub enum ValidationError {\n    Layouter(InvalidBaseType),\n    Type {\n            handle: Handle<crate::Type>,\n            name: String,\n            error: TypeError,\n        },\n    Constant {\n            handle: Handle<crate::Constant>,\n            name: String,\n            error: ConstantError,\n        },\n    GlobalVariable {\n            handle: Handle<crate::GlobalVariable>,\n            name: String,\n            error: GlobalVariableError,\n        },\n    Function {\n            handle: Handle<crate::Function>,\n            name: String,\n            error: FunctionError,\n        },\n    EntryPoint {\n            stage: crate::ShaderStage,\n            name: String,\n            error: EntryPointError,\n        },\n    Corrupted,\n}","parent":null,"children":[{"krate":0,"index":2416},{"krate":0,"index":2419},{"krate":0,"index":2423},{"krate":0,"index":2427},{"krate":0,"index":2431},{"krate":0,"index":2435},{"krate":0,"index":2439}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":116293,"byte_end":116296,"line_start":198,"line_end":198,"column_start":12,"column_end":15},"name":"new","qualname":"<Validator>::new","value":"pub fn new(ValidationFlags, Capabilities) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new validator instance.\n","sig":null,"attributes":[{"value":"/ Construct a new validator instance.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":116242,"byte_end":116281,"line_start":197,"line_end":197,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":118264,"byte_end":118272,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"name":"validate","qualname":"<Validator>::validate","value":"pub fn validate(&mut Self, &crate::Module)\n-> Result<ModuleInfo, ValidationError>","parent":null,"children":[],"decl_id":null,"docs":" Check the given module to be valid.\n","sig":null,"attributes":[{"value":"/ Check the given module to be valid.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":118213,"byte_end":118252,"line_start":251,"line_end":251,"column_start":5,"column_end":44}}]},{"kind":"Const","id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":5949,"byte_end":5959,"line_start":147,"line_end":147,"column_start":11,"column_end":21},"name":"BOOL_WIDTH","qualname":"::BOOL_WIDTH","value":"Bytes","parent":null,"children":[],"decl_id":null,"docs":" Width of a boolean type, in bytes.\n","sig":null,"attributes":[{"value":"/ Width of a boolean type, in bytes.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":5900,"byte_end":5938,"line_start":146,"line_end":146,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":6044,"byte_end":6055,"line_start":150,"line_end":150,"column_start":10,"column_end":21},"name":"FastHashMap","qualname":"::FastHashMap","value":"HashMap<K, T, BuildHasherDefault<fxhash::FxHasher>>","parent":null,"children":[],"decl_id":null,"docs":" Hash map that is faster but not resilient to DoS attacks.\n","sig":null,"attributes":[{"value":"/ Hash map that is faster but not resilient to DoS attacks.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":5973,"byte_end":6034,"line_start":149,"line_end":149,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":6188,"byte_end":6199,"line_start":152,"line_end":152,"column_start":10,"column_end":21},"name":"FastHashSet","qualname":"::FastHashSet","value":"HashSet<K, BuildHasherDefault<fxhash::FxHasher>>","parent":null,"children":[],"decl_id":null,"docs":" Hash set that is faster but not resilient to DoS attacks.\n","sig":null,"attributes":[{"value":"/ Hash set that is faster but not resilient to DoS attacks.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":6117,"byte_end":6178,"line_start":151,"line_end":151,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":2441},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":7238,"byte_end":7252,"line_start":172,"line_end":172,"column_start":12,"column_end":26},"name":"EarlyDepthTest","qualname":"::EarlyDepthTest","value":"EarlyDepthTest {  }","parent":null,"children":[{"krate":0,"index":2442}],"decl_id":null,"docs":" Early fragment tests. In a standard situation if a driver determines that it is possible to\n switch on early depth test it will. Typical situations when early depth test is switched off:\n   - Calling ```discard``` in a shader.\n   - Writing to the depth buffer, unless ConservativeDepth is enabled.","sig":null,"attributes":[{"value":"/ Early fragment tests. In a standard situation if a driver determines that it is possible to","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":6392,"byte_end":6487,"line_start":157,"line_end":157,"column_start":1,"column_end":96}},{"value":"/ switch on early depth test it will. Typical situations when early depth test is switched off:","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":6488,"byte_end":6585,"line_start":158,"line_end":158,"column_start":1,"column_end":98}},{"value":"/   - Calling ```discard``` in a shader.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":6586,"byte_end":6628,"line_start":159,"line_end":159,"column_start":1,"column_end":43}},{"value":"/   - Writing to the depth buffer, unless ConservativeDepth is enabled.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":6629,"byte_end":6702,"line_start":160,"line_end":160,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":6703,"byte_end":6706,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ SPIR-V: ExecutionMode EarlyFragmentTests","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":6707,"byte_end":6751,"line_start":162,"line_end":162,"column_start":1,"column_end":45}},{"value":"/ In GLSL: layout(early_fragment_tests) in;","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":6752,"byte_end":6797,"line_start":163,"line_end":163,"column_start":1,"column_end":46}},{"value":"/ HLSL: Attribute earlydepthstencil","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":6798,"byte_end":6835,"line_start":164,"line_end":164,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":6836,"byte_end":6839,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ For more, see:","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":6840,"byte_end":6858,"line_start":166,"line_end":166,"column_start":1,"column_end":19}},{"value":"/   - https://www.khronos.org/opengl/wiki/Early_Fragment_Test#Explicit_specification","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":6859,"byte_end":6945,"line_start":167,"line_end":167,"column_start":1,"column_end":87}},{"value":"/   - https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/sm5-attributes-earlydepthstencil","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":6946,"byte_end":7046,"line_start":168,"line_end":168,"column_start":1,"column_end":101}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2463},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":8164,"byte_end":8176,"line_start":190,"line_end":190,"column_start":5,"column_end":17},"name":"GreaterEqual","qualname":"::ConservativeDepth::GreaterEqual","value":"ConservativeDepth::GreaterEqual","parent":{"krate":0,"index":2462},"children":[],"decl_id":null,"docs":" Shader may rewrite depth only with a value greater than calculated;\n","sig":null,"attributes":[{"value":"/ Shader may rewrite depth only with a value greater than calculated;","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":8088,"byte_end":8159,"line_start":189,"line_end":189,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2465},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":8288,"byte_end":8297,"line_start":193,"line_end":193,"column_start":5,"column_end":14},"name":"LessEqual","qualname":"::ConservativeDepth::LessEqual","value":"ConservativeDepth::LessEqual","parent":{"krate":0,"index":2462},"children":[],"decl_id":null,"docs":" Shader may rewrite depth smaller than one that would have been written without the modification.\n","sig":null,"attributes":[{"value":"/ Shader may rewrite depth smaller than one that would have been written without the modification.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":8183,"byte_end":8283,"line_start":192,"line_end":192,"column_start":5,"column_end":105}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2467},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":8348,"byte_end":8357,"line_start":196,"line_end":196,"column_start":5,"column_end":14},"name":"Unchanged","qualname":"::ConservativeDepth::Unchanged","value":"ConservativeDepth::Unchanged","parent":{"krate":0,"index":2462},"children":[],"decl_id":null,"docs":" Shader may not rewrite depth value.\n","sig":null,"attributes":[{"value":"/ Shader may not rewrite depth value.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":8304,"byte_end":8343,"line_start":195,"line_end":195,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":2462},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":8064,"byte_end":8081,"line_start":188,"line_end":188,"column_start":10,"column_end":27},"name":"ConservativeDepth","qualname":"::ConservativeDepth","value":"pub enum ConservativeDepth { GreaterEqual, LessEqual, Unchanged, }","parent":null,"children":[{"krate":0,"index":2463},{"krate":0,"index":2465},{"krate":0,"index":2467}],"decl_id":null,"docs":" Enables adjusting depth without disabling early Z.","sig":null,"attributes":[{"value":"/ Enables adjusting depth without disabling early Z.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":7302,"byte_end":7356,"line_start":175,"line_end":175,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":7357,"byte_end":7360,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ SPIR-V: ExecutionMode DepthGreater/DepthLess/DepthUnchanged","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":7361,"byte_end":7424,"line_start":177,"line_end":177,"column_start":1,"column_end":64}},{"value":"/ GLSL: layout (depth_<greater/less/unchanged/any>) out float gl_FragDepth;","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":7425,"byte_end":7502,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/   - ```depth_any``` option behaves as if the layout qualifier was not present.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":7503,"byte_end":7585,"line_start":179,"line_end":179,"column_start":1,"column_end":83}},{"value":"/ HLSL: SV_Depth/SV_DepthGreaterEqual/SV_DepthLessEqual","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":7586,"byte_end":7643,"line_start":180,"line_end":180,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":7644,"byte_end":7647,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ For more, see:","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":7648,"byte_end":7666,"line_start":182,"line_end":182,"column_start":1,"column_end":19}},{"value":"/   - https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_conservative_depth.txt","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":7667,"byte_end":7756,"line_start":183,"line_end":183,"column_start":1,"column_end":90}},{"value":"/   - https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-semantics#system-value-semantics","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":7757,"byte_end":7874,"line_start":184,"line_end":184,"column_start":1,"column_end":118}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2488},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":8662,"byte_end":8668,"line_start":205,"line_end":205,"column_start":5,"column_end":11},"name":"Vertex","qualname":"::ShaderStage::Vertex","value":"ShaderStage::Vertex","parent":{"krate":0,"index":2487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2490},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":8674,"byte_end":8682,"line_start":206,"line_end":206,"column_start":5,"column_end":13},"name":"Fragment","qualname":"::ShaderStage::Fragment","value":"ShaderStage::Fragment","parent":{"krate":0,"index":2487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2492},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":8688,"byte_end":8695,"line_start":207,"line_end":207,"column_start":5,"column_end":12},"name":"Compute","qualname":"::ShaderStage::Compute","value":"ShaderStage::Compute","parent":{"krate":0,"index":2487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2487},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":8644,"byte_end":8655,"line_start":204,"line_end":204,"column_start":10,"column_end":21},"name":"ShaderStage","qualname":"::ShaderStage","value":"pub enum ShaderStage { Vertex, Fragment, Compute, }","parent":null,"children":[{"krate":0,"index":2488},{"krate":0,"index":2490},{"krate":0,"index":2492}],"decl_id":null,"docs":" Stage of the programmable pipeline.\n","sig":null,"attributes":[{"value":"/ Stage of the programmable pipeline.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":8362,"byte_end":8401,"line_start":199,"line_end":199,"column_start":1,"column_end":40}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":8582,"byte_end":8604,"line_start":203,"line_end":203,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2513},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":8969,"byte_end":8977,"line_start":216,"line_end":216,"column_start":5,"column_end":13},"name":"Function","qualname":"::StorageClass::Function","value":"StorageClass::Function","parent":{"krate":0,"index":2512},"children":[],"decl_id":null,"docs":" Function locals.\n","sig":null,"attributes":[{"value":"/ Function locals.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":8944,"byte_end":8964,"line_start":215,"line_end":215,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2515},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9030,"byte_end":9037,"line_start":218,"line_end":218,"column_start":5,"column_end":12},"name":"Private","qualname":"::StorageClass::Private","value":"StorageClass::Private","parent":{"krate":0,"index":2512},"children":[],"decl_id":null,"docs":" Private data, per invocation, mutable.\n","sig":null,"attributes":[{"value":"/ Private data, per invocation, mutable.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":8983,"byte_end":9025,"line_start":217,"line_end":217,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2517},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9083,"byte_end":9092,"line_start":220,"line_end":220,"column_start":5,"column_end":14},"name":"WorkGroup","qualname":"::StorageClass::WorkGroup","value":"StorageClass::WorkGroup","parent":{"krate":0,"index":2512},"children":[],"decl_id":null,"docs":" Workgroup shared data, mutable.\n","sig":null,"attributes":[{"value":"/ Workgroup shared data, mutable.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9043,"byte_end":9078,"line_start":219,"line_end":219,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2519},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9127,"byte_end":9134,"line_start":222,"line_end":222,"column_start":5,"column_end":12},"name":"Uniform","qualname":"::StorageClass::Uniform","value":"StorageClass::Uniform","parent":{"krate":0,"index":2512},"children":[],"decl_id":null,"docs":" Uniform buffer data.\n","sig":null,"attributes":[{"value":"/ Uniform buffer data.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9098,"byte_end":9122,"line_start":221,"line_end":221,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2521},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9190,"byte_end":9197,"line_start":224,"line_end":224,"column_start":5,"column_end":12},"name":"Storage","qualname":"::StorageClass::Storage","value":"StorageClass::Storage","parent":{"krate":0,"index":2512},"children":[],"decl_id":null,"docs":" Storage buffer data, potentially mutable.\n","sig":null,"attributes":[{"value":"/ Storage buffer data, potentially mutable.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9140,"byte_end":9185,"line_start":223,"line_end":223,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2523},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9256,"byte_end":9262,"line_start":226,"line_end":226,"column_start":5,"column_end":11},"name":"Handle","qualname":"::StorageClass::Handle","value":"StorageClass::Handle","parent":{"krate":0,"index":2512},"children":[],"decl_id":null,"docs":" Opaque handles, such as samplers and images.\n","sig":null,"attributes":[{"value":"/ Opaque handles, such as samplers and images.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9203,"byte_end":9251,"line_start":225,"line_end":225,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2525},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9292,"byte_end":9304,"line_start":228,"line_end":228,"column_start":5,"column_end":17},"name":"PushConstant","qualname":"::StorageClass::PushConstant","value":"StorageClass::PushConstant","parent":{"krate":0,"index":2512},"children":[],"decl_id":null,"docs":" Push constants.\n","sig":null,"attributes":[{"value":"/ Push constants.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9268,"byte_end":9287,"line_start":227,"line_end":227,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":2512},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":8925,"byte_end":8937,"line_start":214,"line_end":214,"column_start":10,"column_end":22},"name":"StorageClass","qualname":"::StorageClass","value":"pub enum StorageClass {\n    Function,\n    Private,\n    WorkGroup,\n    Uniform,\n    Storage,\n    Handle,\n    PushConstant,\n}","parent":null,"children":[{"krate":0,"index":2513},{"krate":0,"index":2515},{"krate":0,"index":2517},{"krate":0,"index":2519},{"krate":0,"index":2521},{"krate":0,"index":2523},{"krate":0,"index":2525}],"decl_id":null,"docs":" Class of storage for variables.\n","sig":null,"attributes":[{"value":"/ Class of storage for variables.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":8700,"byte_end":8735,"line_start":210,"line_end":210,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2546},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9545,"byte_end":9553,"line_start":236,"line_end":236,"column_start":5,"column_end":13},"name":"Position","qualname":"::BuiltIn::Position","value":"BuiltIn::Position","parent":{"krate":0,"index":2545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2548},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9573,"byte_end":9585,"line_start":238,"line_end":238,"column_start":5,"column_end":17},"name":"BaseInstance","qualname":"::BuiltIn::BaseInstance","value":"BuiltIn::BaseInstance","parent":{"krate":0,"index":2545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2550},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9591,"byte_end":9601,"line_start":239,"line_end":239,"column_start":5,"column_end":15},"name":"BaseVertex","qualname":"::BuiltIn::BaseVertex","value":"BuiltIn::BaseVertex","parent":{"krate":0,"index":2545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2552},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9607,"byte_end":9619,"line_start":240,"line_end":240,"column_start":5,"column_end":17},"name":"ClipDistance","qualname":"::BuiltIn::ClipDistance","value":"BuiltIn::ClipDistance","parent":{"krate":0,"index":2545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2554},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9625,"byte_end":9637,"line_start":241,"line_end":241,"column_start":5,"column_end":17},"name":"CullDistance","qualname":"::BuiltIn::CullDistance","value":"BuiltIn::CullDistance","parent":{"krate":0,"index":2545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2556},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9643,"byte_end":9656,"line_start":242,"line_end":242,"column_start":5,"column_end":18},"name":"InstanceIndex","qualname":"::BuiltIn::InstanceIndex","value":"BuiltIn::InstanceIndex","parent":{"krate":0,"index":2545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2558},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9662,"byte_end":9671,"line_start":243,"line_end":243,"column_start":5,"column_end":14},"name":"PointSize","qualname":"::BuiltIn::PointSize","value":"BuiltIn::PointSize","parent":{"krate":0,"index":2545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2560},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9677,"byte_end":9688,"line_start":244,"line_end":244,"column_start":5,"column_end":16},"name":"VertexIndex","qualname":"::BuiltIn::VertexIndex","value":"BuiltIn::VertexIndex","parent":{"krate":0,"index":2545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2562},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9710,"byte_end":9719,"line_start":246,"line_end":246,"column_start":5,"column_end":14},"name":"FragDepth","qualname":"::BuiltIn::FragDepth","value":"BuiltIn::FragDepth","parent":{"krate":0,"index":2545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2564},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9725,"byte_end":9736,"line_start":247,"line_end":247,"column_start":5,"column_end":16},"name":"FrontFacing","qualname":"::BuiltIn::FrontFacing","value":"BuiltIn::FrontFacing","parent":{"krate":0,"index":2545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2566},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9742,"byte_end":9753,"line_start":248,"line_end":248,"column_start":5,"column_end":16},"name":"SampleIndex","qualname":"::BuiltIn::SampleIndex","value":"BuiltIn::SampleIndex","parent":{"krate":0,"index":2545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2568},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9759,"byte_end":9769,"line_start":249,"line_end":249,"column_start":5,"column_end":15},"name":"SampleMask","qualname":"::BuiltIn::SampleMask","value":"BuiltIn::SampleMask","parent":{"krate":0,"index":2545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2570},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9790,"byte_end":9808,"line_start":251,"line_end":251,"column_start":5,"column_end":23},"name":"GlobalInvocationId","qualname":"::BuiltIn::GlobalInvocationId","value":"BuiltIn::GlobalInvocationId","parent":{"krate":0,"index":2545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2572},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9814,"byte_end":9831,"line_start":252,"line_end":252,"column_start":5,"column_end":22},"name":"LocalInvocationId","qualname":"::BuiltIn::LocalInvocationId","value":"BuiltIn::LocalInvocationId","parent":{"krate":0,"index":2545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2574},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9837,"byte_end":9857,"line_start":253,"line_end":253,"column_start":5,"column_end":25},"name":"LocalInvocationIndex","qualname":"::BuiltIn::LocalInvocationIndex","value":"BuiltIn::LocalInvocationIndex","parent":{"krate":0,"index":2545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2576},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9863,"byte_end":9874,"line_start":254,"line_end":254,"column_start":5,"column_end":16},"name":"WorkGroupId","qualname":"::BuiltIn::WorkGroupId","value":"BuiltIn::WorkGroupId","parent":{"krate":0,"index":2545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2578},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9880,"byte_end":9893,"line_start":255,"line_end":255,"column_start":5,"column_end":18},"name":"WorkGroupSize","qualname":"::BuiltIn::WorkGroupSize","value":"BuiltIn::WorkGroupSize","parent":{"krate":0,"index":2545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2545},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9531,"byte_end":9538,"line_start":235,"line_end":235,"column_start":10,"column_end":17},"name":"BuiltIn","qualname":"::BuiltIn","value":"pub enum BuiltIn {\n    Position,\n    BaseInstance,\n    BaseVertex,\n    ClipDistance,\n    CullDistance,\n    InstanceIndex,\n    PointSize,\n    VertexIndex,\n    FragDepth,\n    FrontFacing,\n    SampleIndex,\n    SampleMask,\n    GlobalInvocationId,\n    LocalInvocationId,\n    LocalInvocationIndex,\n    WorkGroupId,\n    WorkGroupSize,\n}","parent":null,"children":[{"krate":0,"index":2546},{"krate":0,"index":2548},{"krate":0,"index":2550},{"krate":0,"index":2552},{"krate":0,"index":2554},{"krate":0,"index":2556},{"krate":0,"index":2558},{"krate":0,"index":2560},{"krate":0,"index":2562},{"krate":0,"index":2564},{"krate":0,"index":2566},{"krate":0,"index":2568},{"krate":0,"index":2570},{"krate":0,"index":2572},{"krate":0,"index":2574},{"krate":0,"index":2576},{"krate":0,"index":2578}],"decl_id":null,"docs":" Built-in inputs and outputs.\n","sig":null,"attributes":[{"value":"/ Built-in inputs and outputs.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9309,"byte_end":9341,"line_start":231,"line_end":231,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":831},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9939,"byte_end":9944,"line_start":259,"line_end":259,"column_start":10,"column_end":15},"name":"Bytes","qualname":"::Bytes","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Number of bytes per scalar.\n","sig":null,"attributes":[{"value":"/ Number of bytes per scalar.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9898,"byte_end":9929,"line_start":258,"line_end":258,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2599},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":10226,"byte_end":10228,"line_start":268,"line_end":268,"column_start":5,"column_end":7},"name":"Bi","qualname":"::VectorSize::Bi","value":"VectorSize::Bi","parent":{"krate":0,"index":2598},"children":[],"decl_id":null,"docs":" 2D vector\n","sig":null,"attributes":[{"value":"/ 2D vector","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":10208,"byte_end":10221,"line_start":267,"line_end":267,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2602},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":10256,"byte_end":10259,"line_start":270,"line_end":270,"column_start":5,"column_end":8},"name":"Tri","qualname":"::VectorSize::Tri","value":"VectorSize::Tri","parent":{"krate":0,"index":2598},"children":[],"decl_id":null,"docs":" 3D vector\n","sig":null,"attributes":[{"value":"/ 3D vector","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":10238,"byte_end":10251,"line_start":269,"line_end":269,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2605},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":10287,"byte_end":10291,"line_start":272,"line_end":272,"column_start":5,"column_end":9},"name":"Quad","qualname":"::VectorSize::Quad","value":"VectorSize::Quad","parent":{"krate":0,"index":2598},"children":[],"decl_id":null,"docs":" 4D vector\n","sig":null,"attributes":[{"value":"/ 4D vector","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":10269,"byte_end":10282,"line_start":271,"line_end":271,"column_start":5,"column_end":18}}]},{"kind":"Enum","id":{"krate":0,"index":2598},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":10191,"byte_end":10201,"line_start":266,"line_end":266,"column_start":10,"column_end":20},"name":"VectorSize","qualname":"::VectorSize","value":"pub enum VectorSize { Bi = , Tri = , Quad = , }","parent":null,"children":[{"krate":0,"index":2599},{"krate":0,"index":2602},{"krate":0,"index":2605}],"decl_id":null,"docs":" Number of components in a vector.\n","sig":null,"attributes":[{"value":"/ Number of components in a vector.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9952,"byte_end":9989,"line_start":261,"line_end":261,"column_start":1,"column_end":38}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":9990,"byte_end":10001,"line_start":262,"line_end":262,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2627},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":10580,"byte_end":10584,"line_start":282,"line_end":282,"column_start":5,"column_end":9},"name":"Sint","qualname":"::ScalarKind::Sint","value":"ScalarKind::Sint","parent":{"krate":0,"index":2626},"children":[],"decl_id":null,"docs":" Signed integer type.\n","sig":null,"attributes":[{"value":"/ Signed integer type.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":10551,"byte_end":10575,"line_start":281,"line_end":281,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2629},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":10621,"byte_end":10625,"line_start":284,"line_end":284,"column_start":5,"column_end":9},"name":"Uint","qualname":"::ScalarKind::Uint","value":"ScalarKind::Uint","parent":{"krate":0,"index":2626},"children":[],"decl_id":null,"docs":" Unsigned integer type.\n","sig":null,"attributes":[{"value":"/ Unsigned integer type.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":10590,"byte_end":10616,"line_start":283,"line_end":283,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2631},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":10660,"byte_end":10665,"line_start":286,"line_end":286,"column_start":5,"column_end":10},"name":"Float","qualname":"::ScalarKind::Float","value":"ScalarKind::Float","parent":{"krate":0,"index":2626},"children":[],"decl_id":null,"docs":" Floating point type.\n","sig":null,"attributes":[{"value":"/ Floating point type.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":10631,"byte_end":10655,"line_start":285,"line_end":285,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2633},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":10693,"byte_end":10697,"line_start":288,"line_end":288,"column_start":5,"column_end":9},"name":"Bool","qualname":"::ScalarKind::Bool","value":"ScalarKind::Bool","parent":{"krate":0,"index":2626},"children":[],"decl_id":null,"docs":" Boolean type.\n","sig":null,"attributes":[{"value":"/ Boolean type.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":10671,"byte_end":10688,"line_start":287,"line_end":287,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":2626},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":10534,"byte_end":10544,"line_start":280,"line_end":280,"column_start":10,"column_end":20},"name":"ScalarKind","qualname":"::ScalarKind","value":"pub enum ScalarKind { Sint, Uint, Float, Bool, }","parent":null,"children":[{"krate":0,"index":2627},{"krate":0,"index":2629},{"krate":0,"index":2631},{"krate":0,"index":2633}],"decl_id":null,"docs":" Primitive type for a scalar.\n","sig":null,"attributes":[{"value":"/ Primitive type for a scalar.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":10300,"byte_end":10332,"line_start":275,"line_end":275,"column_start":1,"column_end":33}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":10333,"byte_end":10344,"line_start":276,"line_end":276,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2654},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":10977,"byte_end":10985,"line_start":298,"line_end":298,"column_start":5,"column_end":13},"name":"Constant","qualname":"::ArraySize::Constant","value":"ArraySize::Constant(Handle<Constant>)","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":" The array size is constant.\n","sig":null,"attributes":[{"value":"/ The array size is constant.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":10941,"byte_end":10972,"line_start":297,"line_end":297,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2657},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":11055,"byte_end":11062,"line_start":300,"line_end":300,"column_start":5,"column_end":12},"name":"Dynamic","qualname":"::ArraySize::Dynamic","value":"ArraySize::Dynamic","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":" The array size can change at runtime.\n","sig":null,"attributes":[{"value":"/ The array size can change at runtime.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":11009,"byte_end":11050,"line_start":299,"line_end":299,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":2653},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":10925,"byte_end":10934,"line_start":296,"line_end":296,"column_start":10,"column_end":19},"name":"ArraySize","qualname":"::ArraySize","value":"pub enum ArraySize { Constant(Handle<Constant>), Dynamic, }","parent":null,"children":[{"krate":0,"index":2654},{"krate":0,"index":2657}],"decl_id":null,"docs":" Size of an array.\n","sig":null,"attributes":[{"value":"/ Size of an array.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":10702,"byte_end":10723,"line_start":291,"line_end":291,"column_start":1,"column_end":22}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":10724,"byte_end":10735,"line_start":292,"line_end":292,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2679},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":11451,"byte_end":11462,"line_start":310,"line_end":310,"column_start":5,"column_end":16},"name":"Perspective","qualname":"::Interpolation::Perspective","value":"Interpolation::Perspective","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" The value will be interpolated in a perspective-correct fashion.\n Also known as \"smooth\" in glsl.\n","sig":null,"attributes":[{"value":"/ The value will be interpolated in a perspective-correct fashion.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":11338,"byte_end":11406,"line_start":308,"line_end":308,"column_start":5,"column_end":73}},{"value":"/ Also known as \"smooth\" in glsl.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":11411,"byte_end":11446,"line_start":309,"line_end":309,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2681},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":11608,"byte_end":11614,"line_start":314,"line_end":314,"column_start":5,"column_end":11},"name":"Linear","qualname":"::Interpolation::Linear","value":"Interpolation::Linear","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" Indicates that linear, non-perspective, correct\n interpolation must be used.\n Also known as \"no_perspective\" in glsl.\n","sig":null,"attributes":[{"value":"/ Indicates that linear, non-perspective, correct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":11468,"byte_end":11519,"line_start":311,"line_end":311,"column_start":5,"column_end":56}},{"value":"/ interpolation must be used.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":11524,"byte_end":11555,"line_start":312,"line_end":312,"column_start":5,"column_end":36}},{"value":"/ Also known as \"no_perspective\" in glsl.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":11560,"byte_end":11603,"line_start":313,"line_end":313,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2683},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":11679,"byte_end":11683,"line_start":316,"line_end":316,"column_start":5,"column_end":9},"name":"Flat","qualname":"::Interpolation::Flat","value":"Interpolation::Flat","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" Indicates that no interpolation will be performed.\n","sig":null,"attributes":[{"value":"/ Indicates that no interpolation will be performed.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":11620,"byte_end":11674,"line_start":315,"line_end":315,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":2678},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":11318,"byte_end":11331,"line_start":307,"line_end":307,"column_start":10,"column_end":23},"name":"Interpolation","qualname":"::Interpolation","value":"pub enum Interpolation { Perspective, Linear, Flat, }","parent":null,"children":[{"krate":0,"index":2679},{"krate":0,"index":2681},{"krate":0,"index":2683}],"decl_id":null,"docs":" The interpolation qualifier of a binding or struct field.\n","sig":null,"attributes":[{"value":"/ The interpolation qualifier of a binding or struct field.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":11067,"byte_end":11128,"line_start":303,"line_end":303,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2704},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":12008,"byte_end":12014,"line_start":325,"line_end":325,"column_start":5,"column_end":11},"name":"Center","qualname":"::Sampling::Center","value":"Sampling::Center","parent":{"krate":0,"index":2703},"children":[],"decl_id":null,"docs":" Interpolate the value at the center of the pixel.\n","sig":null,"attributes":[{"value":"/ Interpolate the value at the center of the pixel.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":11950,"byte_end":12003,"line_start":324,"line_end":324,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2706},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":12232,"byte_end":12240,"line_start":330,"line_end":330,"column_start":5,"column_end":13},"name":"Centroid","qualname":"::Sampling::Centroid","value":"Sampling::Centroid","parent":{"krate":0,"index":2703},"children":[],"decl_id":null,"docs":" Interpolate the value at a point that lies within all samples covered by\n the fragment within the current primitive. In multisampling, use a\n single value for all samples in the primitive.\n","sig":null,"attributes":[{"value":"/ Interpolate the value at a point that lies within all samples covered by","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":12021,"byte_end":12097,"line_start":327,"line_end":327,"column_start":5,"column_end":81}},{"value":"/ the fragment within the current primitive. In multisampling, use a","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":12102,"byte_end":12172,"line_start":328,"line_end":328,"column_start":5,"column_end":75}},{"value":"/ single value for all samples in the primitive.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":12177,"byte_end":12227,"line_start":329,"line_end":329,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2708},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":12372,"byte_end":12378,"line_start":334,"line_end":334,"column_start":5,"column_end":11},"name":"Sample","qualname":"::Sampling::Sample","value":"Sampling::Sample","parent":{"krate":0,"index":2703},"children":[],"decl_id":null,"docs":" Interpolate the value at each sample location. In multisampling, invoke\n the fragment shader once per sample.\n","sig":null,"attributes":[{"value":"/ Interpolate the value at each sample location. In multisampling, invoke","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":12247,"byte_end":12322,"line_start":332,"line_end":332,"column_start":5,"column_end":80}},{"value":"/ the fragment shader once per sample.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":12327,"byte_end":12367,"line_start":333,"line_end":333,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":2703},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":11935,"byte_end":11943,"line_start":323,"line_end":323,"column_start":10,"column_end":18},"name":"Sampling","qualname":"::Sampling","value":"pub enum Sampling { Center, Centroid, Sample, }","parent":null,"children":[{"krate":0,"index":2704},{"krate":0,"index":2706},{"krate":0,"index":2708}],"decl_id":null,"docs":" The sampling qualifiers of a binding or struct field.\n","sig":null,"attributes":[{"value":"/ The sampling qualifiers of a binding or struct field.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":11688,"byte_end":11745,"line_start":319,"line_end":319,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":2728},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":12657,"byte_end":12669,"line_start":342,"line_end":342,"column_start":12,"column_end":24},"name":"StructMember","qualname":"::StructMember","value":"StructMember { name, ty, binding, offset }","parent":null,"children":[{"krate":0,"index":2729},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2732}],"decl_id":null,"docs":" Member of a user-defined structure.\n","sig":null,"attributes":[{"value":"/ Member of a user-defined structure.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":12383,"byte_end":12422,"line_start":337,"line_end":337,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2729},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":12680,"byte_end":12684,"line_start":343,"line_end":343,"column_start":9,"column_end":13},"name":"name","qualname":"::StructMember::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2728},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2730},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":12737,"byte_end":12739,"line_start":345,"line_end":345,"column_start":9,"column_end":11},"name":"ty","qualname":"::StructMember::ty","value":"arena::Handle<Type>","parent":{"krate":0,"index":2728},"children":[],"decl_id":null,"docs":" Type of the field.\n","sig":null,"attributes":[{"value":"/ Type of the field.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":12706,"byte_end":12728,"line_start":344,"line_end":344,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":2731},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":12809,"byte_end":12816,"line_start":347,"line_end":347,"column_start":9,"column_end":16},"name":"binding","qualname":"::StructMember::binding","value":"std::option::Option<Binding>","parent":{"krate":0,"index":2728},"children":[],"decl_id":null,"docs":" For I/O structs, defines the binding.\n","sig":null,"attributes":[{"value":"/ For I/O structs, defines the binding.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":12759,"byte_end":12800,"line_start":346,"line_end":346,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2732},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":12894,"byte_end":12900,"line_start":349,"line_end":349,"column_start":9,"column_end":15},"name":"offset","qualname":"::StructMember::offset","value":"u32","parent":{"krate":0,"index":2728},"children":[],"decl_id":null,"docs":" Offset from the beginning from the struct.\n","sig":null,"attributes":[{"value":"/ Offset from the beginning from the struct.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":12839,"byte_end":12885,"line_start":348,"line_end":348,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2742},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":13180,"byte_end":13182,"line_start":358,"line_end":358,"column_start":5,"column_end":7},"name":"D1","qualname":"::ImageDimension::D1","value":"ImageDimension::D1","parent":{"krate":0,"index":2741},"children":[],"decl_id":null,"docs":" 1D image\n","sig":null,"attributes":[{"value":"/ 1D image","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":13163,"byte_end":13175,"line_start":357,"line_end":357,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2744},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":13205,"byte_end":13207,"line_start":360,"line_end":360,"column_start":5,"column_end":7},"name":"D2","qualname":"::ImageDimension::D2","value":"ImageDimension::D2","parent":{"krate":0,"index":2741},"children":[],"decl_id":null,"docs":" 2D image\n","sig":null,"attributes":[{"value":"/ 2D image","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":13188,"byte_end":13200,"line_start":359,"line_end":359,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2746},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":13230,"byte_end":13232,"line_start":362,"line_end":362,"column_start":5,"column_end":7},"name":"D3","qualname":"::ImageDimension::D3","value":"ImageDimension::D3","parent":{"krate":0,"index":2741},"children":[],"decl_id":null,"docs":" 3D image\n","sig":null,"attributes":[{"value":"/ 3D image","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":13213,"byte_end":13225,"line_start":361,"line_end":361,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2748},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":13255,"byte_end":13259,"line_start":364,"line_end":364,"column_start":5,"column_end":9},"name":"Cube","qualname":"::ImageDimension::Cube","value":"ImageDimension::Cube","parent":{"krate":0,"index":2741},"children":[],"decl_id":null,"docs":" Cube map\n","sig":null,"attributes":[{"value":"/ Cube map","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":13238,"byte_end":13250,"line_start":363,"line_end":363,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":2741},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":13142,"byte_end":13156,"line_start":356,"line_end":356,"column_start":10,"column_end":24},"name":"ImageDimension","qualname":"::ImageDimension","value":"pub enum ImageDimension { D1, D2, D3, Cube, }","parent":null,"children":[{"krate":0,"index":2742},{"krate":0,"index":2744},{"krate":0,"index":2746},{"krate":0,"index":2748}],"decl_id":null,"docs":" The number of dimensions an image has.\n","sig":null,"attributes":[{"value":"/ The number of dimensions an image has.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":12910,"byte_end":12952,"line_start":352,"line_end":352,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":2770},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":13479,"byte_end":13492,"line_start":372,"line_end":372,"column_start":16,"column_end":29},"name":"StorageAccess","qualname":"::StorageAccess","value":"StorageAccess {  }","parent":null,"children":[{"krate":0,"index":2771}],"decl_id":null,"docs":" Flags describing an image.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2804},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":13572,"byte_end":13576,"line_start":374,"line_end":374,"column_start":15,"column_end":19},"name":"LOAD","qualname":"::StorageAccess::LOAD","value":"Self","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":" Storage can be used as a source for load ops.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2805},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":13657,"byte_end":13662,"line_start":376,"line_end":376,"column_start":15,"column_end":20},"name":"STORE","qualname":"::StorageAccess::STORE","value":"Self","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":" Storage can be used as a target for store ops.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2863},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":13934,"byte_end":13941,"line_start":386,"line_end":386,"column_start":5,"column_end":12},"name":"R8Unorm","qualname":"::StorageFormat::R8Unorm","value":"StorageFormat::R8Unorm","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2865},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":13947,"byte_end":13954,"line_start":387,"line_end":387,"column_start":5,"column_end":12},"name":"R8Snorm","qualname":"::StorageFormat::R8Snorm","value":"StorageFormat::R8Snorm","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2867},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":13960,"byte_end":13966,"line_start":388,"line_end":388,"column_start":5,"column_end":11},"name":"R8Uint","qualname":"::StorageFormat::R8Uint","value":"StorageFormat::R8Uint","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2869},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":13972,"byte_end":13978,"line_start":389,"line_end":389,"column_start":5,"column_end":11},"name":"R8Sint","qualname":"::StorageFormat::R8Sint","value":"StorageFormat::R8Sint","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2871},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14007,"byte_end":14014,"line_start":392,"line_end":392,"column_start":5,"column_end":12},"name":"R16Uint","qualname":"::StorageFormat::R16Uint","value":"StorageFormat::R16Uint","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2873},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14020,"byte_end":14027,"line_start":393,"line_end":393,"column_start":5,"column_end":12},"name":"R16Sint","qualname":"::StorageFormat::R16Sint","value":"StorageFormat::R16Sint","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2875},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14033,"byte_end":14041,"line_start":394,"line_end":394,"column_start":5,"column_end":13},"name":"R16Float","qualname":"::StorageFormat::R16Float","value":"StorageFormat::R16Float","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2877},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14047,"byte_end":14055,"line_start":395,"line_end":395,"column_start":5,"column_end":13},"name":"Rg8Unorm","qualname":"::StorageFormat::Rg8Unorm","value":"StorageFormat::Rg8Unorm","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2879},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14061,"byte_end":14069,"line_start":396,"line_end":396,"column_start":5,"column_end":13},"name":"Rg8Snorm","qualname":"::StorageFormat::Rg8Snorm","value":"StorageFormat::Rg8Snorm","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2881},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14075,"byte_end":14082,"line_start":397,"line_end":397,"column_start":5,"column_end":12},"name":"Rg8Uint","qualname":"::StorageFormat::Rg8Uint","value":"StorageFormat::Rg8Uint","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2883},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14088,"byte_end":14095,"line_start":398,"line_end":398,"column_start":5,"column_end":12},"name":"Rg8Sint","qualname":"::StorageFormat::Rg8Sint","value":"StorageFormat::Rg8Sint","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2885},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14124,"byte_end":14131,"line_start":401,"line_end":401,"column_start":5,"column_end":12},"name":"R32Uint","qualname":"::StorageFormat::R32Uint","value":"StorageFormat::R32Uint","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2887},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14137,"byte_end":14144,"line_start":402,"line_end":402,"column_start":5,"column_end":12},"name":"R32Sint","qualname":"::StorageFormat::R32Sint","value":"StorageFormat::R32Sint","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2889},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14150,"byte_end":14158,"line_start":403,"line_end":403,"column_start":5,"column_end":13},"name":"R32Float","qualname":"::StorageFormat::R32Float","value":"StorageFormat::R32Float","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2891},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14164,"byte_end":14172,"line_start":404,"line_end":404,"column_start":5,"column_end":13},"name":"Rg16Uint","qualname":"::StorageFormat::Rg16Uint","value":"StorageFormat::Rg16Uint","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2893},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14178,"byte_end":14186,"line_start":405,"line_end":405,"column_start":5,"column_end":13},"name":"Rg16Sint","qualname":"::StorageFormat::Rg16Sint","value":"StorageFormat::Rg16Sint","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2895},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14192,"byte_end":14201,"line_start":406,"line_end":406,"column_start":5,"column_end":14},"name":"Rg16Float","qualname":"::StorageFormat::Rg16Float","value":"StorageFormat::Rg16Float","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2897},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14207,"byte_end":14217,"line_start":407,"line_end":407,"column_start":5,"column_end":15},"name":"Rgba8Unorm","qualname":"::StorageFormat::Rgba8Unorm","value":"StorageFormat::Rgba8Unorm","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2899},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14223,"byte_end":14233,"line_start":408,"line_end":408,"column_start":5,"column_end":15},"name":"Rgba8Snorm","qualname":"::StorageFormat::Rgba8Snorm","value":"StorageFormat::Rgba8Snorm","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2901},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14239,"byte_end":14248,"line_start":409,"line_end":409,"column_start":5,"column_end":14},"name":"Rgba8Uint","qualname":"::StorageFormat::Rgba8Uint","value":"StorageFormat::Rgba8Uint","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2903},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14254,"byte_end":14263,"line_start":410,"line_end":410,"column_start":5,"column_end":14},"name":"Rgba8Sint","qualname":"::StorageFormat::Rgba8Sint","value":"StorageFormat::Rgba8Sint","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2905},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14299,"byte_end":14311,"line_start":413,"line_end":413,"column_start":5,"column_end":17},"name":"Rgb10a2Unorm","qualname":"::StorageFormat::Rgb10a2Unorm","value":"StorageFormat::Rgb10a2Unorm","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2907},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14317,"byte_end":14329,"line_start":414,"line_end":414,"column_start":5,"column_end":17},"name":"Rg11b10Float","qualname":"::StorageFormat::Rg11b10Float","value":"StorageFormat::Rg11b10Float","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2909},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14358,"byte_end":14366,"line_start":417,"line_end":417,"column_start":5,"column_end":13},"name":"Rg32Uint","qualname":"::StorageFormat::Rg32Uint","value":"StorageFormat::Rg32Uint","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2911},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14372,"byte_end":14380,"line_start":418,"line_end":418,"column_start":5,"column_end":13},"name":"Rg32Sint","qualname":"::StorageFormat::Rg32Sint","value":"StorageFormat::Rg32Sint","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2913},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14386,"byte_end":14395,"line_start":419,"line_end":419,"column_start":5,"column_end":14},"name":"Rg32Float","qualname":"::StorageFormat::Rg32Float","value":"StorageFormat::Rg32Float","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2915},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14401,"byte_end":14411,"line_start":420,"line_end":420,"column_start":5,"column_end":15},"name":"Rgba16Uint","qualname":"::StorageFormat::Rgba16Uint","value":"StorageFormat::Rgba16Uint","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2917},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14417,"byte_end":14427,"line_start":421,"line_end":421,"column_start":5,"column_end":15},"name":"Rgba16Sint","qualname":"::StorageFormat::Rgba16Sint","value":"StorageFormat::Rgba16Sint","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2919},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14433,"byte_end":14444,"line_start":422,"line_end":422,"column_start":5,"column_end":16},"name":"Rgba16Float","qualname":"::StorageFormat::Rgba16Float","value":"StorageFormat::Rgba16Float","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2921},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14474,"byte_end":14484,"line_start":425,"line_end":425,"column_start":5,"column_end":15},"name":"Rgba32Uint","qualname":"::StorageFormat::Rgba32Uint","value":"StorageFormat::Rgba32Uint","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2923},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14490,"byte_end":14500,"line_start":426,"line_end":426,"column_start":5,"column_end":15},"name":"Rgba32Sint","qualname":"::StorageFormat::Rgba32Sint","value":"StorageFormat::Rgba32Sint","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2925},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14506,"byte_end":14517,"line_start":427,"line_end":427,"column_start":5,"column_end":16},"name":"Rgba32Float","qualname":"::StorageFormat::Rgba32Float","value":"StorageFormat::Rgba32Float","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2862},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":13893,"byte_end":13906,"line_start":384,"line_end":384,"column_start":10,"column_end":23},"name":"StorageFormat","qualname":"::StorageFormat","value":"pub enum StorageFormat {\n    R8Unorm,\n    R8Snorm,\n    R8Uint,\n    R8Sint,\n    R16Uint,\n    R16Sint,\n    R16Float,\n    Rg8Unorm,\n    Rg8Snorm,\n    Rg8Uint,\n    Rg8Sint,\n    R32Uint,\n    R32Sint,\n    R32Float,\n    Rg16Uint,\n    Rg16Sint,\n    Rg16Float,\n    Rgba8Unorm,\n    Rgba8Snorm,\n    Rgba8Uint,\n    Rgba8Sint,\n    Rgb10a2Unorm,\n    Rg11b10Float,\n    Rg32Uint,\n    Rg32Sint,\n    Rg32Float,\n    Rgba16Uint,\n    Rgba16Sint,\n    Rgba16Float,\n    Rgba32Uint,\n    Rgba32Sint,\n    Rgba32Float,\n}","parent":null,"children":[{"krate":0,"index":2863},{"krate":0,"index":2865},{"krate":0,"index":2867},{"krate":0,"index":2869},{"krate":0,"index":2871},{"krate":0,"index":2873},{"krate":0,"index":2875},{"krate":0,"index":2877},{"krate":0,"index":2879},{"krate":0,"index":2881},{"krate":0,"index":2883},{"krate":0,"index":2885},{"krate":0,"index":2887},{"krate":0,"index":2889},{"krate":0,"index":2891},{"krate":0,"index":2893},{"krate":0,"index":2895},{"krate":0,"index":2897},{"krate":0,"index":2899},{"krate":0,"index":2901},{"krate":0,"index":2903},{"krate":0,"index":2905},{"krate":0,"index":2907},{"krate":0,"index":2909},{"krate":0,"index":2911},{"krate":0,"index":2913},{"krate":0,"index":2915},{"krate":0,"index":2917},{"krate":0,"index":2919},{"krate":0,"index":2921},{"krate":0,"index":2923},{"krate":0,"index":2925}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2946},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14792,"byte_end":14799,"line_start":436,"line_end":436,"column_start":5,"column_end":12},"name":"Sampled","qualname":"::ImageClass::Sampled","value":"ImageClass::Sampled { kind, multi }","parent":{"krate":0,"index":2945},"children":[],"decl_id":null,"docs":" Regular sampled image.\n","sig":null,"attributes":[{"value":"/ Regular sampled image.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14761,"byte_end":14787,"line_start":435,"line_end":435,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2949},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14956,"byte_end":14961,"line_start":443,"line_end":443,"column_start":5,"column_end":10},"name":"Depth","qualname":"::ImageClass::Depth","value":"ImageClass::Depth","parent":{"krate":0,"index":2945},"children":[],"decl_id":null,"docs":" Depth comparison image.\n","sig":null,"attributes":[{"value":"/ Depth comparison image.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14924,"byte_end":14951,"line_start":442,"line_end":442,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2951},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14990,"byte_end":14997,"line_start":445,"line_end":445,"column_start":5,"column_end":12},"name":"Storage","qualname":"::ImageClass::Storage","value":"ImageClass::Storage(StorageFormat)","parent":{"krate":0,"index":2945},"children":[],"decl_id":null,"docs":" Storage image.\n","sig":null,"attributes":[{"value":"/ Storage image.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14967,"byte_end":14985,"line_start":444,"line_end":444,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":2945},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14744,"byte_end":14754,"line_start":434,"line_end":434,"column_start":10,"column_end":20},"name":"ImageClass","qualname":"::ImageClass","value":"pub enum ImageClass {\n    Sampled {\n            kind: ScalarKind,\n            multi: bool,\n        },\n    Depth,\n    Storage(StorageFormat),\n}","parent":null,"children":[{"krate":0,"index":2946},{"krate":0,"index":2949},{"krate":0,"index":2951}],"decl_id":null,"docs":" Sub-class of the image type.\n","sig":null,"attributes":[{"value":"/ Sub-class of the image type.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":14522,"byte_end":14554,"line_start":430,"line_end":430,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2973},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":15208,"byte_end":15212,"line_start":452,"line_end":452,"column_start":12,"column_end":16},"name":"Type","qualname":"::Type","value":"Type { name, inner }","parent":null,"children":[{"krate":0,"index":2974},{"krate":0,"index":2975}],"decl_id":null,"docs":" A data type declared in the module.\n","sig":null,"attributes":[{"value":"/ A data type declared in the module.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":15017,"byte_end":15056,"line_start":448,"line_end":448,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2974},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":15261,"byte_end":15265,"line_start":454,"line_end":454,"column_start":9,"column_end":13},"name":"name","qualname":"::Type::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2973},"children":[],"decl_id":null,"docs":" The name of the type, if any.\n","sig":null,"attributes":[{"value":"/ The name of the type, if any.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":15219,"byte_end":15252,"line_start":453,"line_end":453,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":2975},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":15353,"byte_end":15358,"line_start":456,"line_end":456,"column_start":9,"column_end":14},"name":"inner","qualname":"::Type::inner","value":"TypeInner","parent":{"krate":0,"index":2973},"children":[],"decl_id":null,"docs":" Inner structure that depends on the kind of the type.\n","sig":null,"attributes":[{"value":"/ Inner structure that depends on the kind of the type.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":15287,"byte_end":15344,"line_start":455,"line_end":455,"column_start":5,"column_end":62}}]},{"kind":"StructVariant","id":{"krate":0,"index":2983},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":15659,"byte_end":15665,"line_start":465,"line_end":465,"column_start":5,"column_end":11},"name":"Scalar","qualname":"::TypeInner::Scalar","value":"TypeInner::Scalar { kind, width }","parent":{"krate":0,"index":2982},"children":[],"decl_id":null,"docs":" Number of integral or floating-point kind.\n","sig":null,"attributes":[{"value":"/ Number of integral or floating-point kind.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":15608,"byte_end":15654,"line_start":464,"line_end":464,"column_start":5,"column_end":51}}]},{"kind":"StructVariant","id":{"krate":0,"index":2986},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":15733,"byte_end":15739,"line_start":467,"line_end":467,"column_start":5,"column_end":11},"name":"Vector","qualname":"::TypeInner::Vector","value":"TypeInner::Vector { size, kind, width }","parent":{"krate":0,"index":2982},"children":[],"decl_id":null,"docs":" Vector of numbers.\n","sig":null,"attributes":[{"value":"/ Vector of numbers.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":15706,"byte_end":15728,"line_start":466,"line_end":466,"column_start":5,"column_end":27}}]},{"kind":"StructVariant","id":{"krate":0,"index":2990},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":15853,"byte_end":15859,"line_start":473,"line_end":473,"column_start":5,"column_end":11},"name":"Matrix","qualname":"::TypeInner::Matrix","value":"TypeInner::Matrix { columns, rows, width }","parent":{"krate":0,"index":2982},"children":[],"decl_id":null,"docs":" Matrix of floats.\n","sig":null,"attributes":[{"value":"/ Matrix of floats.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":15827,"byte_end":15848,"line_start":472,"line_end":472,"column_start":5,"column_end":26}}]},{"kind":"StructVariant","id":{"krate":0,"index":2994},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":15983,"byte_end":15990,"line_start":479,"line_end":479,"column_start":5,"column_end":12},"name":"Pointer","qualname":"::TypeInner::Pointer","value":"TypeInner::Pointer { base, class }","parent":{"krate":0,"index":2982},"children":[],"decl_id":null,"docs":" Pointer to another type.\n","sig":null,"attributes":[{"value":"/ Pointer to another type.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":15950,"byte_end":15978,"line_start":478,"line_end":478,"column_start":5,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":2997},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":16089,"byte_end":16101,"line_start":484,"line_end":484,"column_start":5,"column_end":17},"name":"ValuePointer","qualname":"::TypeInner::ValuePointer","value":"TypeInner::ValuePointer { size, kind, width, class }","parent":{"krate":0,"index":2982},"children":[],"decl_id":null,"docs":" Pointer to a value.\n","sig":null,"attributes":[{"value":"/ Pointer to a value.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":16061,"byte_end":16084,"line_start":483,"line_end":483,"column_start":5,"column_end":28}}]},{"kind":"StructVariant","id":{"krate":0,"index":3002},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":16263,"byte_end":16268,"line_start":491,"line_end":491,"column_start":5,"column_end":10},"name":"Array","qualname":"::TypeInner::Array","value":"TypeInner::Array { base, size, stride }","parent":{"krate":0,"index":2982},"children":[],"decl_id":null,"docs":" Homogenous list of elements.\n","sig":null,"attributes":[{"value":"/ Homogenous list of elements.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":16226,"byte_end":16258,"line_start":490,"line_end":490,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":3006},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":16388,"byte_end":16394,"line_start":497,"line_end":497,"column_start":5,"column_end":11},"name":"Struct","qualname":"::TypeInner::Struct","value":"TypeInner::Struct { top_level, members, span }","parent":{"krate":0,"index":2982},"children":[],"decl_id":null,"docs":" User-defined structure.\n","sig":null,"attributes":[{"value":"/ User-defined structure.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":16356,"byte_end":16383,"line_start":496,"line_end":496,"column_start":5,"column_end":32}}]},{"kind":"StructVariant","id":{"krate":0,"index":3010},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":16581,"byte_end":16586,"line_start":504,"line_end":504,"column_start":5,"column_end":10},"name":"Image","qualname":"::TypeInner::Image","value":"TypeInner::Image { dim, arrayed, class }","parent":{"krate":0,"index":2982},"children":[],"decl_id":null,"docs":" Possibly multidimensional array of texels.\n","sig":null,"attributes":[{"value":"/ Possibly multidimensional array of texels.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":16530,"byte_end":16576,"line_start":503,"line_end":503,"column_start":5,"column_end":51}}]},{"kind":"StructVariant","id":{"krate":0,"index":3014},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":16729,"byte_end":16736,"line_start":510,"line_end":510,"column_start":5,"column_end":12},"name":"Sampler","qualname":"::TypeInner::Sampler","value":"TypeInner::Sampler { comparison }","parent":{"krate":0,"index":2982},"children":[],"decl_id":null,"docs":" Can be used to sample values from images.\n","sig":null,"attributes":[{"value":"/ Can be used to sample values from images.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":16679,"byte_end":16724,"line_start":509,"line_end":509,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":2982},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":15592,"byte_end":15601,"line_start":463,"line_end":463,"column_start":10,"column_end":19},"name":"TypeInner","qualname":"::TypeInner","value":"pub enum TypeInner {\n    Scalar {\n            kind: ScalarKind,\n            width: Bytes,\n        },\n    Vector {\n            size: VectorSize,\n            kind: ScalarKind,\n            width: Bytes,\n        },\n    Matrix {\n            columns: VectorSize,\n            rows: VectorSize,\n            width: Bytes,\n        },\n    Pointer {\n            base: Handle<Type>,\n            class: StorageClass,\n        },\n    ValuePointer {\n            size: Option<VectorSize>,\n            kind: ScalarKind,\n            width: Bytes,\n            class: StorageClass,\n        },\n    Array {\n            base: Handle<Type>,\n            size: ArraySize,\n            stride: u32,\n        },\n    Struct {\n            top_level: bool,\n            members: Vec<StructMember>,\n            span: u32,\n        },\n    Image {\n            dim: ImageDimension,\n            arrayed: bool,\n            class: ImageClass,\n        },\n    Sampler {\n            comparison: bool,\n        },\n}","parent":null,"children":[{"krate":0,"index":2983},{"krate":0,"index":2986},{"krate":0,"index":2990},{"krate":0,"index":2994},{"krate":0,"index":2997},{"krate":0,"index":3002},{"krate":0,"index":3006},{"krate":0,"index":3010},{"krate":0,"index":3014}],"decl_id":null,"docs":" Enum with additional information, depending on the kind of type.\n","sig":null,"attributes":[{"value":"/ Enum with additional information, depending on the kind of type.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":15374,"byte_end":15442,"line_start":459,"line_end":459,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":3022},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":16933,"byte_end":16941,"line_start":517,"line_end":517,"column_start":12,"column_end":20},"name":"Constant","qualname":"::Constant","value":"Constant { name, specialization, inner }","parent":null,"children":[{"krate":0,"index":3023},{"krate":0,"index":3024},{"krate":0,"index":3025}],"decl_id":null,"docs":" Constant value.\n","sig":null,"attributes":[{"value":"/ Constant value.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":16762,"byte_end":16781,"line_start":513,"line_end":513,"column_start":1,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":3023},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":16952,"byte_end":16956,"line_start":518,"line_end":518,"column_start":9,"column_end":13},"name":"name","qualname":"::Constant::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3024},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":16982,"byte_end":16996,"line_start":519,"line_end":519,"column_start":9,"column_end":23},"name":"specialization","qualname":"::Constant::specialization","value":"std::option::Option<u32>","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3025},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":17019,"byte_end":17024,"line_start":520,"line_end":520,"column_start":9,"column_end":14},"name":"inner","qualname":"::Constant::inner","value":"ConstantInner","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3033},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":17272,"byte_end":17276,"line_start":528,"line_end":528,"column_start":5,"column_end":9},"name":"Sint","qualname":"::ScalarValue::Sint","value":"ScalarValue::Sint(i64)","parent":{"krate":0,"index":3032},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3036},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":17287,"byte_end":17291,"line_start":529,"line_end":529,"column_start":5,"column_end":9},"name":"Uint","qualname":"::ScalarValue::Uint","value":"ScalarValue::Uint(u64)","parent":{"krate":0,"index":3032},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3039},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":17302,"byte_end":17307,"line_start":530,"line_end":530,"column_start":5,"column_end":10},"name":"Float","qualname":"::ScalarValue::Float","value":"ScalarValue::Float(f64)","parent":{"krate":0,"index":3032},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3042},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":17318,"byte_end":17322,"line_start":531,"line_end":531,"column_start":5,"column_end":9},"name":"Bool","qualname":"::ScalarValue::Bool","value":"ScalarValue::Bool(bool)","parent":{"krate":0,"index":3032},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3032},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":17254,"byte_end":17265,"line_start":527,"line_end":527,"column_start":10,"column_end":21},"name":"ScalarValue","qualname":"::ScalarValue","value":"pub enum ScalarValue { Sint(i64), Uint(u64), Float(f64), Bool(bool), }","parent":null,"children":[{"krate":0,"index":3033},{"krate":0,"index":3036},{"krate":0,"index":3039},{"krate":0,"index":3042}],"decl_id":null,"docs":" A literal scalar value, used in constants.\n","sig":null,"attributes":[{"value":"/ A literal scalar value, used in constants.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":17044,"byte_end":17090,"line_start":523,"line_end":523,"column_start":1,"column_end":47}}]},{"kind":"StructVariant","id":{"krate":0,"index":3053},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":17572,"byte_end":17578,"line_start":539,"line_end":539,"column_start":5,"column_end":11},"name":"Scalar","qualname":"::ConstantInner::Scalar","value":"ConstantInner::Scalar { width, value }","parent":{"krate":0,"index":3052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3056},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":17642,"byte_end":17651,"line_start":543,"line_end":543,"column_start":5,"column_end":14},"name":"Composite","qualname":"::ConstantInner::Composite","value":"ConstantInner::Composite { ty, components }","parent":{"krate":0,"index":3052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3052},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":17552,"byte_end":17565,"line_start":538,"line_end":538,"column_start":10,"column_end":23},"name":"ConstantInner","qualname":"::ConstantInner","value":"pub enum ConstantInner {\n    Scalar {\n            width: Bytes,\n            value: ScalarValue,\n        },\n    Composite {\n            ty: Handle<Type>,\n            components: Vec<Handle<Constant>>,\n        },\n}","parent":null,"children":[{"krate":0,"index":3053},{"krate":0,"index":3056}],"decl_id":null,"docs":" Additional information, dependent on the kind of constant.\n","sig":null,"attributes":[{"value":"/ Additional information, dependent on the kind of constant.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":17333,"byte_end":17395,"line_start":534,"line_end":534,"column_start":1,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3068},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":17996,"byte_end":18003,"line_start":555,"line_end":555,"column_start":5,"column_end":12},"name":"BuiltIn","qualname":"::Binding::BuiltIn","value":"Binding::BuiltIn(BuiltIn)","parent":{"krate":0,"index":3067},"children":[],"decl_id":null,"docs":" Built-in shader variable.\n","sig":null,"attributes":[{"value":"/ Built-in shader variable.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":17962,"byte_end":17991,"line_start":554,"line_end":554,"column_start":5,"column_end":34}}]},{"kind":"StructVariant","id":{"krate":0,"index":3071},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":18044,"byte_end":18052,"line_start":557,"line_end":557,"column_start":5,"column_end":13},"name":"Location","qualname":"::Binding::Location","value":"Binding::Location { location, interpolation, sampling }","parent":{"krate":0,"index":3067},"children":[],"decl_id":null,"docs":" Indexed location.\n","sig":null,"attributes":[{"value":"/ Indexed location.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":18018,"byte_end":18039,"line_start":556,"line_end":556,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":3067},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":17948,"byte_end":17955,"line_start":553,"line_end":553,"column_start":10,"column_end":17},"name":"Binding","qualname":"::Binding","value":"pub enum Binding {\n    BuiltIn(BuiltIn),\n    Location {\n            location: u32,\n            interpolation: Option<Interpolation>,\n            sampling: Option<Sampling>,\n        },\n}","parent":null,"children":[{"krate":0,"index":3068},{"krate":0,"index":3071}],"decl_id":null,"docs":" Describes how an input/output variable is to be bound.\n","sig":null,"attributes":[{"value":"/ Describes how an input/output variable is to be bound.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":17733,"byte_end":17791,"line_start":549,"line_end":549,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3083},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":18389,"byte_end":18404,"line_start":568,"line_end":568,"column_start":12,"column_end":27},"name":"ResourceBinding","qualname":"::ResourceBinding","value":"ResourceBinding { group, binding }","parent":null,"children":[{"krate":0,"index":3084},{"krate":0,"index":3085}],"decl_id":null,"docs":" Pipeline binding information for global resources.\n","sig":null,"attributes":[{"value":"/ Pipeline binding information for global resources.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":18170,"byte_end":18224,"line_start":564,"line_end":564,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":3084},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":18445,"byte_end":18450,"line_start":570,"line_end":570,"column_start":9,"column_end":14},"name":"group","qualname":"::ResourceBinding::group","value":"u32","parent":{"krate":0,"index":3083},"children":[],"decl_id":null,"docs":" The bind group index.\n","sig":null,"attributes":[{"value":"/ The bind group index.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":18411,"byte_end":18436,"line_start":569,"line_end":569,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":3085},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":18506,"byte_end":18513,"line_start":572,"line_end":572,"column_start":9,"column_end":16},"name":"binding","qualname":"::ResourceBinding::binding","value":"u32","parent":{"krate":0,"index":3083},"children":[],"decl_id":null,"docs":" Binding number within the group.\n","sig":null,"attributes":[{"value":"/ Binding number within the group.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":18461,"byte_end":18497,"line_start":571,"line_end":571,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3097},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":18719,"byte_end":18733,"line_start":579,"line_end":579,"column_start":12,"column_end":26},"name":"GlobalVariable","qualname":"::GlobalVariable","value":"GlobalVariable { name, class, binding, ty, init, storage_access }","parent":null,"children":[{"krate":0,"index":3098},{"krate":0,"index":3099},{"krate":0,"index":3100},{"krate":0,"index":3101},{"krate":0,"index":3102},{"krate":0,"index":3103}],"decl_id":null,"docs":" Variable defined at module level.\n","sig":null,"attributes":[{"value":"/ Variable defined at module level.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":18523,"byte_end":18560,"line_start":575,"line_end":575,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":3098},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":18782,"byte_end":18786,"line_start":581,"line_end":581,"column_start":9,"column_end":13},"name":"name","qualname":"::GlobalVariable::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":" Name of the variable, if any.\n","sig":null,"attributes":[{"value":"/ Name of the variable, if any.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":18740,"byte_end":18773,"line_start":580,"line_end":580,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":3099},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":18855,"byte_end":18860,"line_start":583,"line_end":583,"column_start":9,"column_end":14},"name":"class","qualname":"::GlobalVariable::class","value":"StorageClass","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":" How this variable is to be stored.\n","sig":null,"attributes":[{"value":"/ How this variable is to be stored.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":18808,"byte_end":18846,"line_start":582,"line_end":582,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":3100},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":18934,"byte_end":18941,"line_start":585,"line_end":585,"column_start":9,"column_end":16},"name":"binding","qualname":"::GlobalVariable::binding","value":"std::option::Option<ResourceBinding>","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":" For resources, defines the binding point.\n","sig":null,"attributes":[{"value":"/ For resources, defines the binding point.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":18880,"byte_end":18925,"line_start":584,"line_end":584,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3101},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":19011,"byte_end":19013,"line_start":587,"line_end":587,"column_start":9,"column_end":11},"name":"ty","qualname":"::GlobalVariable::ty","value":"arena::Handle<Type>","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":" The type of this variable.\n","sig":null,"attributes":[{"value":"/ The type of this variable.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":18972,"byte_end":19002,"line_start":586,"line_end":586,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":3102},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":19078,"byte_end":19082,"line_start":589,"line_end":589,"column_start":9,"column_end":13},"name":"init","qualname":"::GlobalVariable::init","value":"std::option::Option<arena::Handle<Constant>>","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":" Initial value for this variable.\n","sig":null,"attributes":[{"value":"/ Initial value for this variable.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":19033,"byte_end":19069,"line_start":588,"line_end":588,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":3103},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":19178,"byte_end":19192,"line_start":591,"line_end":591,"column_start":9,"column_end":23},"name":"storage_access","qualname":"::GlobalVariable::storage_access","value":"StorageAccess","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":" Access bit for storage types of images and buffers.\n","sig":null,"attributes":[{"value":"/ Access bit for storage types of images and buffers.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":19114,"byte_end":19169,"line_start":590,"line_end":590,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3112},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":19399,"byte_end":19412,"line_start":598,"line_end":598,"column_start":12,"column_end":25},"name":"LocalVariable","qualname":"::LocalVariable","value":"LocalVariable { name, ty, init }","parent":null,"children":[{"krate":0,"index":3113},{"krate":0,"index":3114},{"krate":0,"index":3115}],"decl_id":null,"docs":" Variable defined at function level.\n","sig":null,"attributes":[{"value":"/ Variable defined at function level.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":19212,"byte_end":19251,"line_start":594,"line_end":594,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":3113},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":19461,"byte_end":19465,"line_start":600,"line_end":600,"column_start":9,"column_end":13},"name":"name","qualname":"::LocalVariable::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3112},"children":[],"decl_id":null,"docs":" Name of the variable, if any.\n","sig":null,"attributes":[{"value":"/ Name of the variable, if any.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":19419,"byte_end":19452,"line_start":599,"line_end":599,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":3114},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":19526,"byte_end":19528,"line_start":602,"line_end":602,"column_start":9,"column_end":11},"name":"ty","qualname":"::LocalVariable::ty","value":"arena::Handle<Type>","parent":{"krate":0,"index":3112},"children":[],"decl_id":null,"docs":" The type of this variable.\n","sig":null,"attributes":[{"value":"/ The type of this variable.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":19487,"byte_end":19517,"line_start":601,"line_end":601,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":3115},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":19593,"byte_end":19597,"line_start":604,"line_end":604,"column_start":9,"column_end":13},"name":"init","qualname":"::LocalVariable::init","value":"std::option::Option<arena::Handle<Constant>>","parent":{"krate":0,"index":3112},"children":[],"decl_id":null,"docs":" Initial value for this variable.\n","sig":null,"attributes":[{"value":"/ Initial value for this variable.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":19548,"byte_end":19584,"line_start":603,"line_end":603,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3121},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":19890,"byte_end":19896,"line_start":612,"line_end":612,"column_start":5,"column_end":11},"name":"Negate","qualname":"::UnaryOperator::Negate","value":"UnaryOperator::Negate","parent":{"krate":0,"index":3120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3123},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":19902,"byte_end":19905,"line_start":613,"line_end":613,"column_start":5,"column_end":8},"name":"Not","qualname":"::UnaryOperator::Not","value":"UnaryOperator::Not","parent":{"krate":0,"index":3120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3120},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":19870,"byte_end":19883,"line_start":611,"line_end":611,"column_start":10,"column_end":23},"name":"UnaryOperator","qualname":"::UnaryOperator","value":"pub enum UnaryOperator { Negate, Not, }","parent":null,"children":[{"krate":0,"index":3121},{"krate":0,"index":3123}],"decl_id":null,"docs":" Operation that can be applied on a single value.\n","sig":null,"attributes":[{"value":"/ Operation that can be applied on a single value.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":19628,"byte_end":19680,"line_start":607,"line_end":607,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3144},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20169,"byte_end":20172,"line_start":621,"line_end":621,"column_start":5,"column_end":8},"name":"Add","qualname":"::BinaryOperator::Add","value":"BinaryOperator::Add","parent":{"krate":0,"index":3143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3146},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20178,"byte_end":20186,"line_start":622,"line_end":622,"column_start":5,"column_end":13},"name":"Subtract","qualname":"::BinaryOperator::Subtract","value":"BinaryOperator::Subtract","parent":{"krate":0,"index":3143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3148},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20192,"byte_end":20200,"line_start":623,"line_end":623,"column_start":5,"column_end":13},"name":"Multiply","qualname":"::BinaryOperator::Multiply","value":"BinaryOperator::Multiply","parent":{"krate":0,"index":3143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3150},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20206,"byte_end":20212,"line_start":624,"line_end":624,"column_start":5,"column_end":11},"name":"Divide","qualname":"::BinaryOperator::Divide","value":"BinaryOperator::Divide","parent":{"krate":0,"index":3143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3152},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20218,"byte_end":20224,"line_start":625,"line_end":625,"column_start":5,"column_end":11},"name":"Modulo","qualname":"::BinaryOperator::Modulo","value":"BinaryOperator::Modulo","parent":{"krate":0,"index":3143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3154},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20230,"byte_end":20235,"line_start":626,"line_end":626,"column_start":5,"column_end":10},"name":"Equal","qualname":"::BinaryOperator::Equal","value":"BinaryOperator::Equal","parent":{"krate":0,"index":3143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3156},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20241,"byte_end":20249,"line_start":627,"line_end":627,"column_start":5,"column_end":13},"name":"NotEqual","qualname":"::BinaryOperator::NotEqual","value":"BinaryOperator::NotEqual","parent":{"krate":0,"index":3143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3158},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20255,"byte_end":20259,"line_start":628,"line_end":628,"column_start":5,"column_end":9},"name":"Less","qualname":"::BinaryOperator::Less","value":"BinaryOperator::Less","parent":{"krate":0,"index":3143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3160},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20265,"byte_end":20274,"line_start":629,"line_end":629,"column_start":5,"column_end":14},"name":"LessEqual","qualname":"::BinaryOperator::LessEqual","value":"BinaryOperator::LessEqual","parent":{"krate":0,"index":3143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3162},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20280,"byte_end":20287,"line_start":630,"line_end":630,"column_start":5,"column_end":12},"name":"Greater","qualname":"::BinaryOperator::Greater","value":"BinaryOperator::Greater","parent":{"krate":0,"index":3143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3164},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20293,"byte_end":20305,"line_start":631,"line_end":631,"column_start":5,"column_end":17},"name":"GreaterEqual","qualname":"::BinaryOperator::GreaterEqual","value":"BinaryOperator::GreaterEqual","parent":{"krate":0,"index":3143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3166},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20311,"byte_end":20314,"line_start":632,"line_end":632,"column_start":5,"column_end":8},"name":"And","qualname":"::BinaryOperator::And","value":"BinaryOperator::And","parent":{"krate":0,"index":3143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3168},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20320,"byte_end":20331,"line_start":633,"line_end":633,"column_start":5,"column_end":16},"name":"ExclusiveOr","qualname":"::BinaryOperator::ExclusiveOr","value":"BinaryOperator::ExclusiveOr","parent":{"krate":0,"index":3143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3170},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20337,"byte_end":20348,"line_start":634,"line_end":634,"column_start":5,"column_end":16},"name":"InclusiveOr","qualname":"::BinaryOperator::InclusiveOr","value":"BinaryOperator::InclusiveOr","parent":{"krate":0,"index":3143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3172},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20354,"byte_end":20364,"line_start":635,"line_end":635,"column_start":5,"column_end":15},"name":"LogicalAnd","qualname":"::BinaryOperator::LogicalAnd","value":"BinaryOperator::LogicalAnd","parent":{"krate":0,"index":3143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3174},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20370,"byte_end":20379,"line_start":636,"line_end":636,"column_start":5,"column_end":14},"name":"LogicalOr","qualname":"::BinaryOperator::LogicalOr","value":"BinaryOperator::LogicalOr","parent":{"krate":0,"index":3143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3176},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20385,"byte_end":20394,"line_start":637,"line_end":637,"column_start":5,"column_end":14},"name":"ShiftLeft","qualname":"::BinaryOperator::ShiftLeft","value":"BinaryOperator::ShiftLeft","parent":{"krate":0,"index":3143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3178},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20462,"byte_end":20472,"line_start":639,"line_end":639,"column_start":5,"column_end":15},"name":"ShiftRight","qualname":"::BinaryOperator::ShiftRight","value":"BinaryOperator::ShiftRight","parent":{"krate":0,"index":3143},"children":[],"decl_id":null,"docs":" Right shift carries the sign of signed integers only.\n","sig":null,"attributes":[{"value":"/ Right shift carries the sign of signed integers only.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20400,"byte_end":20457,"line_start":638,"line_end":638,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":3143},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20148,"byte_end":20162,"line_start":620,"line_end":620,"column_start":10,"column_end":24},"name":"BinaryOperator","qualname":"::BinaryOperator","value":"pub enum BinaryOperator {\n    Add,\n    Subtract,\n    Multiply,\n    Divide,\n    Modulo,\n    Equal,\n    NotEqual,\n    Less,\n    LessEqual,\n    Greater,\n    GreaterEqual,\n    And,\n    ExclusiveOr,\n    InclusiveOr,\n    LogicalAnd,\n    LogicalOr,\n    ShiftLeft,\n    ShiftRight,\n}","parent":null,"children":[{"krate":0,"index":3144},{"krate":0,"index":3146},{"krate":0,"index":3148},{"krate":0,"index":3150},{"krate":0,"index":3152},{"krate":0,"index":3154},{"krate":0,"index":3156},{"krate":0,"index":3158},{"krate":0,"index":3160},{"krate":0,"index":3162},{"krate":0,"index":3164},{"krate":0,"index":3166},{"krate":0,"index":3168},{"krate":0,"index":3170},{"krate":0,"index":3172},{"krate":0,"index":3174},{"krate":0,"index":3176},{"krate":0,"index":3178}],"decl_id":null,"docs":" Operation that can be applied on two values.\n","sig":null,"attributes":[{"value":"/ Operation that can be applied on two values.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":19910,"byte_end":19958,"line_start":616,"line_end":616,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3199},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20730,"byte_end":20731,"line_start":647,"line_end":647,"column_start":5,"column_end":6},"name":"X","qualname":"::DerivativeAxis::X","value":"DerivativeAxis::X","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3201},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20737,"byte_end":20738,"line_start":648,"line_end":648,"column_start":5,"column_end":6},"name":"Y","qualname":"::DerivativeAxis::Y","value":"DerivativeAxis::Y","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3203},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20744,"byte_end":20749,"line_start":649,"line_end":649,"column_start":5,"column_end":10},"name":"Width","qualname":"::DerivativeAxis::Width","value":"DerivativeAxis::Width","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3198},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20709,"byte_end":20723,"line_start":646,"line_end":646,"column_start":10,"column_end":24},"name":"DerivativeAxis","qualname":"::DerivativeAxis","value":"pub enum DerivativeAxis { X, Y, Width, }","parent":null,"children":[{"krate":0,"index":3199},{"krate":0,"index":3201},{"krate":0,"index":3203}],"decl_id":null,"docs":" Axis on which to compute a derivative.\n","sig":null,"attributes":[{"value":"/ Axis on which to compute a derivative.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20477,"byte_end":20519,"line_start":642,"line_end":642,"column_start":1,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3224},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21034,"byte_end":21037,"line_start":657,"line_end":657,"column_start":5,"column_end":8},"name":"All","qualname":"::RelationalFunction::All","value":"RelationalFunction::All","parent":{"krate":0,"index":3223},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3226},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21043,"byte_end":21046,"line_start":658,"line_end":658,"column_start":5,"column_end":8},"name":"Any","qualname":"::RelationalFunction::Any","value":"RelationalFunction::Any","parent":{"krate":0,"index":3223},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3228},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21052,"byte_end":21057,"line_start":659,"line_end":659,"column_start":5,"column_end":10},"name":"IsNan","qualname":"::RelationalFunction::IsNan","value":"RelationalFunction::IsNan","parent":{"krate":0,"index":3223},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3230},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21063,"byte_end":21068,"line_start":660,"line_end":660,"column_start":5,"column_end":10},"name":"IsInf","qualname":"::RelationalFunction::IsInf","value":"RelationalFunction::IsInf","parent":{"krate":0,"index":3223},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3232},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21074,"byte_end":21082,"line_start":661,"line_end":661,"column_start":5,"column_end":13},"name":"IsFinite","qualname":"::RelationalFunction::IsFinite","value":"RelationalFunction::IsFinite","parent":{"krate":0,"index":3223},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3234},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21088,"byte_end":21096,"line_start":662,"line_end":662,"column_start":5,"column_end":13},"name":"IsNormal","qualname":"::RelationalFunction::IsNormal","value":"RelationalFunction::IsNormal","parent":{"krate":0,"index":3223},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3223},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21009,"byte_end":21027,"line_start":656,"line_end":656,"column_start":10,"column_end":28},"name":"RelationalFunction","qualname":"::RelationalFunction","value":"pub enum RelationalFunction { All, Any, IsNan, IsInf, IsFinite, IsNormal, }","parent":null,"children":[{"krate":0,"index":3224},{"krate":0,"index":3226},{"krate":0,"index":3228},{"krate":0,"index":3230},{"krate":0,"index":3232},{"krate":0,"index":3234}],"decl_id":null,"docs":" Built-in shader function for testing relation between values.\n","sig":null,"attributes":[{"value":"/ Built-in shader function for testing relation between values.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":20754,"byte_end":20819,"line_start":652,"line_end":652,"column_start":1,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3255},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21366,"byte_end":21369,"line_start":671,"line_end":671,"column_start":5,"column_end":8},"name":"Abs","qualname":"::MathFunction::Abs","value":"MathFunction::Abs","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3257},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21375,"byte_end":21378,"line_start":672,"line_end":672,"column_start":5,"column_end":8},"name":"Min","qualname":"::MathFunction::Min","value":"MathFunction::Min","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3259},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21384,"byte_end":21387,"line_start":673,"line_end":673,"column_start":5,"column_end":8},"name":"Max","qualname":"::MathFunction::Max","value":"MathFunction::Max","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3261},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21393,"byte_end":21398,"line_start":674,"line_end":674,"column_start":5,"column_end":10},"name":"Clamp","qualname":"::MathFunction::Clamp","value":"MathFunction::Clamp","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3263},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21424,"byte_end":21427,"line_start":676,"line_end":676,"column_start":5,"column_end":8},"name":"Cos","qualname":"::MathFunction::Cos","value":"MathFunction::Cos","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3265},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21433,"byte_end":21437,"line_start":677,"line_end":677,"column_start":5,"column_end":9},"name":"Cosh","qualname":"::MathFunction::Cosh","value":"MathFunction::Cosh","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3267},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21443,"byte_end":21446,"line_start":678,"line_end":678,"column_start":5,"column_end":8},"name":"Sin","qualname":"::MathFunction::Sin","value":"MathFunction::Sin","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3269},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21452,"byte_end":21456,"line_start":679,"line_end":679,"column_start":5,"column_end":9},"name":"Sinh","qualname":"::MathFunction::Sinh","value":"MathFunction::Sinh","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3271},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21462,"byte_end":21465,"line_start":680,"line_end":680,"column_start":5,"column_end":8},"name":"Tan","qualname":"::MathFunction::Tan","value":"MathFunction::Tan","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3273},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21471,"byte_end":21475,"line_start":681,"line_end":681,"column_start":5,"column_end":9},"name":"Tanh","qualname":"::MathFunction::Tanh","value":"MathFunction::Tanh","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3275},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21481,"byte_end":21485,"line_start":682,"line_end":682,"column_start":5,"column_end":9},"name":"Acos","qualname":"::MathFunction::Acos","value":"MathFunction::Acos","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3277},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21491,"byte_end":21495,"line_start":683,"line_end":683,"column_start":5,"column_end":9},"name":"Asin","qualname":"::MathFunction::Asin","value":"MathFunction::Asin","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3279},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21501,"byte_end":21505,"line_start":684,"line_end":684,"column_start":5,"column_end":9},"name":"Atan","qualname":"::MathFunction::Atan","value":"MathFunction::Atan","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3281},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21511,"byte_end":21516,"line_start":685,"line_end":685,"column_start":5,"column_end":10},"name":"Atan2","qualname":"::MathFunction::Atan2","value":"MathFunction::Atan2","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3283},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21543,"byte_end":21547,"line_start":687,"line_end":687,"column_start":5,"column_end":9},"name":"Ceil","qualname":"::MathFunction::Ceil","value":"MathFunction::Ceil","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3285},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21553,"byte_end":21558,"line_start":688,"line_end":688,"column_start":5,"column_end":10},"name":"Floor","qualname":"::MathFunction::Floor","value":"MathFunction::Floor","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3287},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21564,"byte_end":21569,"line_start":689,"line_end":689,"column_start":5,"column_end":10},"name":"Round","qualname":"::MathFunction::Round","value":"MathFunction::Round","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3289},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21575,"byte_end":21580,"line_start":690,"line_end":690,"column_start":5,"column_end":10},"name":"Fract","qualname":"::MathFunction::Fract","value":"MathFunction::Fract","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3291},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21586,"byte_end":21591,"line_start":691,"line_end":691,"column_start":5,"column_end":10},"name":"Trunc","qualname":"::MathFunction::Trunc","value":"MathFunction::Trunc","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3293},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21597,"byte_end":21601,"line_start":692,"line_end":692,"column_start":5,"column_end":9},"name":"Modf","qualname":"::MathFunction::Modf","value":"MathFunction::Modf","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3295},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21607,"byte_end":21612,"line_start":693,"line_end":693,"column_start":5,"column_end":10},"name":"Frexp","qualname":"::MathFunction::Frexp","value":"MathFunction::Frexp","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3297},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21618,"byte_end":21623,"line_start":694,"line_end":694,"column_start":5,"column_end":10},"name":"Ldexp","qualname":"::MathFunction::Ldexp","value":"MathFunction::Ldexp","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3299},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21645,"byte_end":21648,"line_start":696,"line_end":696,"column_start":5,"column_end":8},"name":"Exp","qualname":"::MathFunction::Exp","value":"MathFunction::Exp","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3301},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21654,"byte_end":21658,"line_start":697,"line_end":697,"column_start":5,"column_end":9},"name":"Exp2","qualname":"::MathFunction::Exp2","value":"MathFunction::Exp2","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3303},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21664,"byte_end":21667,"line_start":698,"line_end":698,"column_start":5,"column_end":8},"name":"Log","qualname":"::MathFunction::Log","value":"MathFunction::Log","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3305},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21673,"byte_end":21677,"line_start":699,"line_end":699,"column_start":5,"column_end":9},"name":"Log2","qualname":"::MathFunction::Log2","value":"MathFunction::Log2","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3307},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21683,"byte_end":21686,"line_start":700,"line_end":700,"column_start":5,"column_end":8},"name":"Pow","qualname":"::MathFunction::Pow","value":"MathFunction::Pow","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3309},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21708,"byte_end":21711,"line_start":702,"line_end":702,"column_start":5,"column_end":8},"name":"Dot","qualname":"::MathFunction::Dot","value":"MathFunction::Dot","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3311},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21717,"byte_end":21722,"line_start":703,"line_end":703,"column_start":5,"column_end":10},"name":"Outer","qualname":"::MathFunction::Outer","value":"MathFunction::Outer","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3313},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21728,"byte_end":21733,"line_start":704,"line_end":704,"column_start":5,"column_end":10},"name":"Cross","qualname":"::MathFunction::Cross","value":"MathFunction::Cross","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3315},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21739,"byte_end":21747,"line_start":705,"line_end":705,"column_start":5,"column_end":13},"name":"Distance","qualname":"::MathFunction::Distance","value":"MathFunction::Distance","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3317},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21753,"byte_end":21759,"line_start":706,"line_end":706,"column_start":5,"column_end":11},"name":"Length","qualname":"::MathFunction::Length","value":"MathFunction::Length","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3319},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21765,"byte_end":21774,"line_start":707,"line_end":707,"column_start":5,"column_end":14},"name":"Normalize","qualname":"::MathFunction::Normalize","value":"MathFunction::Normalize","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3321},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21780,"byte_end":21791,"line_start":708,"line_end":708,"column_start":5,"column_end":16},"name":"FaceForward","qualname":"::MathFunction::FaceForward","value":"MathFunction::FaceForward","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3323},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21797,"byte_end":21804,"line_start":709,"line_end":709,"column_start":5,"column_end":12},"name":"Reflect","qualname":"::MathFunction::Reflect","value":"MathFunction::Reflect","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3325},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21810,"byte_end":21817,"line_start":710,"line_end":710,"column_start":5,"column_end":12},"name":"Refract","qualname":"::MathFunction::Refract","value":"MathFunction::Refract","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3327},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21844,"byte_end":21848,"line_start":712,"line_end":712,"column_start":5,"column_end":9},"name":"Sign","qualname":"::MathFunction::Sign","value":"MathFunction::Sign","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3329},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21854,"byte_end":21857,"line_start":713,"line_end":713,"column_start":5,"column_end":8},"name":"Fma","qualname":"::MathFunction::Fma","value":"MathFunction::Fma","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3331},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21863,"byte_end":21866,"line_start":714,"line_end":714,"column_start":5,"column_end":8},"name":"Mix","qualname":"::MathFunction::Mix","value":"MathFunction::Mix","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3333},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21872,"byte_end":21876,"line_start":715,"line_end":715,"column_start":5,"column_end":9},"name":"Step","qualname":"::MathFunction::Step","value":"MathFunction::Step","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3335},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21882,"byte_end":21892,"line_start":716,"line_end":716,"column_start":5,"column_end":15},"name":"SmoothStep","qualname":"::MathFunction::SmoothStep","value":"MathFunction::SmoothStep","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3337},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21898,"byte_end":21902,"line_start":717,"line_end":717,"column_start":5,"column_end":9},"name":"Sqrt","qualname":"::MathFunction::Sqrt","value":"MathFunction::Sqrt","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3339},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21908,"byte_end":21919,"line_start":718,"line_end":718,"column_start":5,"column_end":16},"name":"InverseSqrt","qualname":"::MathFunction::InverseSqrt","value":"MathFunction::InverseSqrt","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3341},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21925,"byte_end":21932,"line_start":719,"line_end":719,"column_start":5,"column_end":12},"name":"Inverse","qualname":"::MathFunction::Inverse","value":"MathFunction::Inverse","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3343},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21938,"byte_end":21947,"line_start":720,"line_end":720,"column_start":5,"column_end":14},"name":"Transpose","qualname":"::MathFunction::Transpose","value":"MathFunction::Transpose","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3345},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21953,"byte_end":21964,"line_start":721,"line_end":721,"column_start":5,"column_end":16},"name":"Determinant","qualname":"::MathFunction::Determinant","value":"MathFunction::Determinant","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3347},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21982,"byte_end":21994,"line_start":723,"line_end":723,"column_start":5,"column_end":17},"name":"CountOneBits","qualname":"::MathFunction::CountOneBits","value":"MathFunction::CountOneBits","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3349},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":22000,"byte_end":22011,"line_start":724,"line_end":724,"column_start":5,"column_end":16},"name":"ReverseBits","qualname":"::MathFunction::ReverseBits","value":"MathFunction::ReverseBits","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3254},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21329,"byte_end":21341,"line_start":669,"line_end":669,"column_start":10,"column_end":22},"name":"MathFunction","qualname":"::MathFunction","value":"pub enum MathFunction {\n    Abs,\n    Min,\n    Max,\n    Clamp,\n    Cos,\n    Cosh,\n    Sin,\n    Sinh,\n    Tan,\n    Tanh,\n    Acos,\n    Asin,\n    Atan,\n    Atan2,\n    Ceil,\n    Floor,\n    Round,\n    Fract,\n    Trunc,\n    Modf,\n    Frexp,\n    Ldexp,\n    Exp,\n    Exp2,\n    Log,\n    Log2,\n    Pow,\n    Dot,\n    Outer,\n    Cross,\n    Distance,\n    Length,\n    Normalize,\n    FaceForward,\n    Reflect,\n    Refract,\n    Sign,\n    Fma,\n    Mix,\n    Step,\n    SmoothStep,\n    Sqrt,\n    InverseSqrt,\n    Inverse,\n    Transpose,\n    Determinant,\n    CountOneBits,\n    ReverseBits,\n}","parent":null,"children":[{"krate":0,"index":3255},{"krate":0,"index":3257},{"krate":0,"index":3259},{"krate":0,"index":3261},{"krate":0,"index":3263},{"krate":0,"index":3265},{"krate":0,"index":3267},{"krate":0,"index":3269},{"krate":0,"index":3271},{"krate":0,"index":3273},{"krate":0,"index":3275},{"krate":0,"index":3277},{"krate":0,"index":3279},{"krate":0,"index":3281},{"krate":0,"index":3283},{"krate":0,"index":3285},{"krate":0,"index":3287},{"krate":0,"index":3289},{"krate":0,"index":3291},{"krate":0,"index":3293},{"krate":0,"index":3295},{"krate":0,"index":3297},{"krate":0,"index":3299},{"krate":0,"index":3301},{"krate":0,"index":3303},{"krate":0,"index":3305},{"krate":0,"index":3307},{"krate":0,"index":3309},{"krate":0,"index":3311},{"krate":0,"index":3313},{"krate":0,"index":3315},{"krate":0,"index":3317},{"krate":0,"index":3319},{"krate":0,"index":3321},{"krate":0,"index":3323},{"krate":0,"index":3325},{"krate":0,"index":3327},{"krate":0,"index":3329},{"krate":0,"index":3331},{"krate":0,"index":3333},{"krate":0,"index":3335},{"krate":0,"index":3337},{"krate":0,"index":3339},{"krate":0,"index":3341},{"krate":0,"index":3343},{"krate":0,"index":3345},{"krate":0,"index":3347},{"krate":0,"index":3349}],"decl_id":null,"docs":" Built-in shader function for math.\n","sig":null,"attributes":[{"value":"/ Built-in shader function for math.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":21101,"byte_end":21139,"line_start":665,"line_end":665,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3370},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":22250,"byte_end":22254,"line_start":732,"line_end":732,"column_start":5,"column_end":9},"name":"Auto","qualname":"::SampleLevel::Auto","value":"SampleLevel::Auto","parent":{"krate":0,"index":3369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3372},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":22260,"byte_end":22264,"line_start":733,"line_end":733,"column_start":5,"column_end":9},"name":"Zero","qualname":"::SampleLevel::Zero","value":"SampleLevel::Zero","parent":{"krate":0,"index":3369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3374},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":22270,"byte_end":22275,"line_start":734,"line_end":734,"column_start":5,"column_end":10},"name":"Exact","qualname":"::SampleLevel::Exact","value":"SampleLevel::Exact(Handle<Expression>)","parent":{"krate":0,"index":3369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3377},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":22301,"byte_end":22305,"line_start":735,"line_end":735,"column_start":5,"column_end":9},"name":"Bias","qualname":"::SampleLevel::Bias","value":"SampleLevel::Bias(Handle<Expression>)","parent":{"krate":0,"index":3369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3380},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":22331,"byte_end":22339,"line_start":736,"line_end":736,"column_start":5,"column_end":13},"name":"Gradient","qualname":"::SampleLevel::Gradient","value":"SampleLevel::Gradient { x, y }","parent":{"krate":0,"index":3369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3369},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":22232,"byte_end":22243,"line_start":731,"line_end":731,"column_start":10,"column_end":21},"name":"SampleLevel","qualname":"::SampleLevel","value":"pub enum SampleLevel {\n    Auto,\n    Zero,\n    Exact(Handle<Expression>),\n    Bias(Handle<Expression>),\n    Gradient {\n            x: Handle<Expression>,\n            y: Handle<Expression>,\n        },\n}","parent":null,"children":[{"krate":0,"index":3370},{"krate":0,"index":3372},{"krate":0,"index":3374},{"krate":0,"index":3377},{"krate":0,"index":3380}],"decl_id":null,"docs":" Sampling modifier to control the level of detail.\n","sig":null,"attributes":[{"value":"/ Sampling modifier to control the level of detail.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":22016,"byte_end":22069,"line_start":727,"line_end":727,"column_start":1,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":3393},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":22666,"byte_end":22670,"line_start":748,"line_end":748,"column_start":5,"column_end":9},"name":"Size","qualname":"::ImageQuery::Size","value":"ImageQuery::Size { level }","parent":{"krate":0,"index":3392},"children":[],"decl_id":null,"docs":" Get the size at the specified level.\n","sig":null,"attributes":[{"value":"/ Get the size at the specified level.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":22621,"byte_end":22661,"line_start":747,"line_end":747,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3395},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":22821,"byte_end":22830,"line_start":753,"line_end":753,"column_start":5,"column_end":14},"name":"NumLevels","qualname":"::ImageQuery::NumLevels","value":"ImageQuery::NumLevels","parent":{"krate":0,"index":3392},"children":[],"decl_id":null,"docs":" Get the number of mipmap levels.\n","sig":null,"attributes":[{"value":"/ Get the number of mipmap levels.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":22780,"byte_end":22816,"line_start":752,"line_end":752,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3397},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":22876,"byte_end":22885,"line_start":755,"line_end":755,"column_start":5,"column_end":14},"name":"NumLayers","qualname":"::ImageQuery::NumLayers","value":"ImageQuery::NumLayers","parent":{"krate":0,"index":3392},"children":[],"decl_id":null,"docs":" Get the number of array layers.\n","sig":null,"attributes":[{"value":"/ Get the number of array layers.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":22836,"byte_end":22871,"line_start":754,"line_end":754,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3399},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":22926,"byte_end":22936,"line_start":757,"line_end":757,"column_start":5,"column_end":15},"name":"NumSamples","qualname":"::ImageQuery::NumSamples","value":"ImageQuery::NumSamples","parent":{"krate":0,"index":3392},"children":[],"decl_id":null,"docs":" Get the number of samples.\n","sig":null,"attributes":[{"value":"/ Get the number of samples.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":22891,"byte_end":22921,"line_start":756,"line_end":756,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":3392},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":22604,"byte_end":22614,"line_start":746,"line_end":746,"column_start":10,"column_end":20},"name":"ImageQuery","qualname":"::ImageQuery","value":"pub enum ImageQuery {\n    Size {\n            level: Option<Handle<Expression>>,\n        },\n    NumLevels,\n    NumLayers,\n    NumSamples,\n}","parent":null,"children":[{"krate":0,"index":3393},{"krate":0,"index":3395},{"krate":0,"index":3397},{"krate":0,"index":3399}],"decl_id":null,"docs":" Type of an image query.\n","sig":null,"attributes":[{"value":"/ Type of an image query.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":22414,"byte_end":22441,"line_start":742,"line_end":742,"column_start":1,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3411},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":23192,"byte_end":23193,"line_start":767,"line_end":767,"column_start":5,"column_end":6},"name":"X","qualname":"::SwizzleComponent::X","value":"SwizzleComponent::X","parent":{"krate":0,"index":3410},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":23184,"byte_end":23187,"line_start":766,"line_end":766,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3414},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":23211,"byte_end":23212,"line_start":769,"line_end":769,"column_start":5,"column_end":6},"name":"Y","qualname":"::SwizzleComponent::Y","value":"SwizzleComponent::Y","parent":{"krate":0,"index":3410},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":23203,"byte_end":23206,"line_start":768,"line_end":768,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3417},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":23230,"byte_end":23231,"line_start":771,"line_end":771,"column_start":5,"column_end":6},"name":"Z","qualname":"::SwizzleComponent::Z","value":"SwizzleComponent::Z","parent":{"krate":0,"index":3410},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":23222,"byte_end":23225,"line_start":770,"line_end":770,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3420},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":23249,"byte_end":23250,"line_start":773,"line_end":773,"column_start":5,"column_end":6},"name":"W","qualname":"::SwizzleComponent::W","value":"SwizzleComponent::W","parent":{"krate":0,"index":3410},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":23241,"byte_end":23244,"line_start":772,"line_end":772,"column_start":5,"column_end":8}}]},{"kind":"Enum","id":{"krate":0,"index":3410},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":23161,"byte_end":23177,"line_start":765,"line_end":765,"column_start":10,"column_end":26},"name":"SwizzleComponent","qualname":"::SwizzleComponent","value":"pub enum SwizzleComponent { X = , Y = , Z = , W = , }","parent":null,"children":[{"krate":0,"index":3411},{"krate":0,"index":3414},{"krate":0,"index":3417},{"krate":0,"index":3420}],"decl_id":null,"docs":" Component selection for a vector swizzle.\n","sig":null,"attributes":[{"value":"/ Component selection for a vector swizzle.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":22941,"byte_end":22986,"line_start":760,"line_end":760,"column_start":1,"column_end":46}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":22987,"byte_end":22998,"line_start":761,"line_end":761,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3433},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":23469,"byte_end":23476,"line_start":781,"line_end":781,"column_start":16,"column_end":23},"name":"Barrier","qualname":"::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":3434}],"decl_id":null,"docs":" Memory barrier flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3467},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":23564,"byte_end":23571,"line_start":783,"line_end":783,"column_start":15,"column_end":22},"name":"STORAGE","qualname":"::Barrier::STORAGE","value":"Self","parent":{"krate":0,"index":3466},"children":[],"decl_id":null,"docs":" Barrier affects all `StorageClass::Storage` accesses.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3468},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":23661,"byte_end":23671,"line_start":785,"line_end":785,"column_start":15,"column_end":25},"name":"WORK_GROUP","qualname":"::Barrier::WORK_GROUP","value":"Self","parent":{"krate":0,"index":3466},"children":[],"decl_id":null,"docs":" Barrier affects all `StorageClass::WorkGroup` accesses.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3526},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":26425,"byte_end":26431,"line_start":847,"line_end":847,"column_start":5,"column_end":11},"name":"Access","qualname":"::Expression::Access","value":"Expression::Access { base, index }","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Array access with a computed index.","sig":null,"attributes":[{"value":"/ Array access with a computed index.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":24021,"byte_end":24060,"line_start":797,"line_end":797,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":24065,"byte_end":24068,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ ## Typing rules","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":24073,"byte_end":24092,"line_start":799,"line_end":799,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":24097,"byte_end":24100,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ The `base` operand must be some composite type: [`Vector`], [`Matrix`],","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":24105,"byte_end":24180,"line_start":801,"line_end":801,"column_start":5,"column_end":80}},{"value":"/ [`Array`], a [`Pointer`] to one of those, or a [`ValuePointer`] with a","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":24185,"byte_end":24259,"line_start":802,"line_end":802,"column_start":5,"column_end":79}},{"value":"/ `size`.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":24264,"byte_end":24275,"line_start":803,"line_end":803,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":24280,"byte_end":24283,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ The `index` operand must be an integer, signed or unsigned.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":24288,"byte_end":24351,"line_start":805,"line_end":805,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":24356,"byte_end":24359,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ Indexing a [`Vector`] or [`Array`] produces a value of its element type.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":24364,"byte_end":24440,"line_start":807,"line_end":807,"column_start":5,"column_end":81}},{"value":"/ Indexing a [`Matrix`] produces a [`Vector`].","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":24445,"byte_end":24493,"line_start":808,"line_end":808,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":24498,"byte_end":24501,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ Indexing a [`Pointer`] to an [`Array`] produces a [`Pointer`] to its","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":24506,"byte_end":24578,"line_start":810,"line_end":810,"column_start":5,"column_end":77}},{"value":"/ `base` type, taking on the `Pointer`'s storage class.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":24583,"byte_end":24640,"line_start":811,"line_end":811,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":24645,"byte_end":24648,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ Indexing a [`Pointer`] to a [`Vector`] produces a [`ValuePointer`] whose","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":24653,"byte_end":24729,"line_start":813,"line_end":813,"column_start":5,"column_end":81}},{"value":"/ size is `None`, taking on the [`Vector`]'s scalar kind and width and the","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":24734,"byte_end":24810,"line_start":814,"line_end":814,"column_start":5,"column_end":81}},{"value":"/ [`Pointer`]'s storage class.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":24815,"byte_end":24847,"line_start":815,"line_end":815,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":24852,"byte_end":24855,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ Indexing a [`Pointer`] to a [`Matrix`] produces a [`ValuePointer`] for a","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":24860,"byte_end":24936,"line_start":817,"line_end":817,"column_start":5,"column_end":81}},{"value":"/ column of the matrix: its size is the matrix's height, its `kind` is","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":24941,"byte_end":25013,"line_start":818,"line_end":818,"column_start":5,"column_end":77}},{"value":"/ [`Float`], and it inherits the [`Matrix`]'s width and the [`Pointer`]'s","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":25018,"byte_end":25093,"line_start":819,"line_end":819,"column_start":5,"column_end":80}},{"value":"/ storage class.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":25098,"byte_end":25116,"line_start":820,"line_end":820,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":25121,"byte_end":25124,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ ## Dynamic indexing restrictions","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":25129,"byte_end":25165,"line_start":822,"line_end":822,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":25170,"byte_end":25173,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ To accommodate restrictions in some of the shader languages that Naga","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":25178,"byte_end":25251,"line_start":824,"line_end":824,"column_start":5,"column_end":78}},{"value":"/ targets, it is not permitted to subscript a matrix or array with a","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":25256,"byte_end":25326,"line_start":825,"line_end":825,"column_start":5,"column_end":75}},{"value":"/ dynamically computed index unless that matrix or array appears behind a","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":25331,"byte_end":25406,"line_start":826,"line_end":826,"column_start":5,"column_end":80}},{"value":"/ pointer. In other words, if the inner type of `base` is [`Array`] or","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":25411,"byte_end":25483,"line_start":827,"line_end":827,"column_start":5,"column_end":77}},{"value":"/ [`Matrix`], then `index` must be a constant. But if the type of `base`","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":25488,"byte_end":25562,"line_start":828,"line_end":828,"column_start":5,"column_end":79}},{"value":"/ is a [`Pointer`] to an array or matrix or a [`ValuePointer`] with a","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":25567,"byte_end":25638,"line_start":829,"line_end":829,"column_start":5,"column_end":76}},{"value":"/ `size`, then the index may be any expression of integer type.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":25643,"byte_end":25708,"line_start":830,"line_end":830,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":25713,"byte_end":25716,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ You can use the [`Expression::is_dynamic_index`] method to determine","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":25721,"byte_end":25793,"line_start":832,"line_end":832,"column_start":5,"column_end":77}},{"value":"/ whether a given index expression requires matrix or array base operands","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":25798,"byte_end":25873,"line_start":833,"line_end":833,"column_start":5,"column_end":80}},{"value":"/ to be behind a pointer.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":25878,"byte_end":25905,"line_start":834,"line_end":834,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":25910,"byte_end":25913,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ (It would be simpler to always require the use of `AccessIndex` when","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":25918,"byte_end":25990,"line_start":836,"line_end":836,"column_start":5,"column_end":77}},{"value":"/ subscripting arrays and matrices that are not behind pointers, but to","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":25995,"byte_end":26068,"line_start":837,"line_end":837,"column_start":5,"column_end":78}},{"value":"/ accommodate existing front ends, Naga also permits `Access`, with a","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":26073,"byte_end":26144,"line_start":838,"line_end":838,"column_start":5,"column_end":76}},{"value":"/ restricted `index`.)","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":26149,"byte_end":26173,"line_start":839,"line_end":839,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":26178,"byte_end":26181,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ [`Vector`]: TypeInner::Vector","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":26186,"byte_end":26219,"line_start":841,"line_end":841,"column_start":5,"column_end":38}},{"value":"/ [`Matrix`]: TypeInner::Matrix","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":26224,"byte_end":26257,"line_start":842,"line_end":842,"column_start":5,"column_end":38}},{"value":"/ [`Array`]: TypeInner::Array","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":26262,"byte_end":26293,"line_start":843,"line_end":843,"column_start":5,"column_end":36}},{"value":"/ [`Pointer`]: TypeInner::Pointer","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":26298,"byte_end":26333,"line_start":844,"line_end":844,"column_start":5,"column_end":40}},{"value":"/ [`ValuePointer`]: TypeInner::ValuePointer","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":26338,"byte_end":26383,"line_start":845,"line_end":845,"column_start":5,"column_end":50}},{"value":"/ [`Float`]: ScalarKind::Float","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":26388,"byte_end":26420,"line_start":846,"line_end":846,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":3529},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":26555,"byte_end":26566,"line_start":852,"line_end":852,"column_start":5,"column_end":16},"name":"AccessIndex","qualname":"::Expression::AccessIndex","value":"Expression::AccessIndex { base, index }","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Array access with a known index.\n","sig":null,"attributes":[{"value":"/ Array access with a known index.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":26514,"byte_end":26550,"line_start":851,"line_end":851,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3532},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":26658,"byte_end":26666,"line_start":857,"line_end":857,"column_start":5,"column_end":13},"name":"Constant","qualname":"::Expression::Constant","value":"Expression::Constant(Handle<Constant>)","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Constant value.\n","sig":null,"attributes":[{"value":"/ Constant value.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":26634,"byte_end":26653,"line_start":856,"line_end":856,"column_start":5,"column_end":24}}]},{"kind":"StructVariant","id":{"krate":0,"index":3535},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":26726,"byte_end":26731,"line_start":859,"line_end":859,"column_start":5,"column_end":10},"name":"Splat","qualname":"::Expression::Splat","value":"Expression::Splat { size, value }","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Splat scalar into a vector.\n","sig":null,"attributes":[{"value":"/ Splat scalar into a vector.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":26690,"byte_end":26721,"line_start":858,"line_end":858,"column_start":5,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":3538},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":26830,"byte_end":26837,"line_start":864,"line_end":864,"column_start":5,"column_end":12},"name":"Swizzle","qualname":"::Expression::Swizzle","value":"Expression::Swizzle { size, vector, pattern }","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Vector swizzle.\n","sig":null,"attributes":[{"value":"/ Vector swizzle.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":26806,"byte_end":26825,"line_start":863,"line_end":863,"column_start":5,"column_end":24}}]},{"kind":"StructVariant","id":{"krate":0,"index":3543},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":26983,"byte_end":26990,"line_start":870,"line_end":870,"column_start":5,"column_end":12},"name":"Compose","qualname":"::Expression::Compose","value":"Expression::Compose { ty, components }","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Composite expression.\n","sig":null,"attributes":[{"value":"/ Composite expression.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":26953,"byte_end":26978,"line_start":869,"line_end":869,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3546},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":27129,"byte_end":27145,"line_start":875,"line_end":875,"column_start":5,"column_end":21},"name":"FunctionArgument","qualname":"::Expression::FunctionArgument","value":"Expression::FunctionArgument(u32)","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Reference a function parameter, by its index.\n","sig":null,"attributes":[{"value":"/ Reference a function parameter, by its index.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":27075,"byte_end":27124,"line_start":874,"line_end":874,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3549},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":27193,"byte_end":27207,"line_start":877,"line_end":877,"column_start":5,"column_end":19},"name":"GlobalVariable","qualname":"::Expression::GlobalVariable","value":"Expression::GlobalVariable(Handle<GlobalVariable>)","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Reference a global variable.\n","sig":null,"attributes":[{"value":"/ Reference a global variable.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":27156,"byte_end":27188,"line_start":876,"line_end":876,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3552},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":27273,"byte_end":27286,"line_start":879,"line_end":879,"column_start":5,"column_end":18},"name":"LocalVariable","qualname":"::Expression::LocalVariable","value":"Expression::LocalVariable(Handle<LocalVariable>)","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Reference a local variable.\n","sig":null,"attributes":[{"value":"/ Reference a local variable.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":27237,"byte_end":27268,"line_start":878,"line_end":878,"column_start":5,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":3555},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":27348,"byte_end":27352,"line_start":881,"line_end":881,"column_start":5,"column_end":9},"name":"Load","qualname":"::Expression::Load","value":"Expression::Load { pointer }","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Load a value indirectly.\n","sig":null,"attributes":[{"value":"/ Load a value indirectly.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":27315,"byte_end":27343,"line_start":880,"line_end":880,"column_start":5,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":3557},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":27446,"byte_end":27457,"line_start":883,"line_end":883,"column_start":5,"column_end":16},"name":"ImageSample","qualname":"::Expression::ImageSample","value":"Expression::ImageSample { image, sampler, coordinate, array_index, offset, level, depth_ref }","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Sample a point from a sampled or a depth image.\n","sig":null,"attributes":[{"value":"/ Sample a point from a sampled or a depth image.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":27390,"byte_end":27441,"line_start":882,"line_end":882,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":3565},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":27785,"byte_end":27794,"line_start":893,"line_end":893,"column_start":5,"column_end":14},"name":"ImageLoad","qualname":"::Expression::ImageLoad","value":"Expression::ImageLoad { image, coordinate, array_index, index }","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Load a texel from an image.\n","sig":null,"attributes":[{"value":"/ Load a texel from an image.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":27749,"byte_end":27780,"line_start":892,"line_end":892,"column_start":5,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":3570},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":28178,"byte_end":28188,"line_start":903,"line_end":903,"column_start":5,"column_end":15},"name":"ImageQuery","qualname":"::Expression::ImageQuery","value":"Expression::ImageQuery { image, query }","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Query information from an image.\n","sig":null,"attributes":[{"value":"/ Query information from an image.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":28137,"byte_end":28173,"line_start":902,"line_end":902,"column_start":5,"column_end":41}}]},{"kind":"StructVariant","id":{"krate":0,"index":3573},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":28297,"byte_end":28302,"line_start":908,"line_end":908,"column_start":5,"column_end":10},"name":"Unary","qualname":"::Expression::Unary","value":"Expression::Unary { op, expr }","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Apply an unary operator.\n","sig":null,"attributes":[{"value":"/ Apply an unary operator.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":28264,"byte_end":28292,"line_start":907,"line_end":907,"column_start":5,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":3576},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":28410,"byte_end":28416,"line_start":913,"line_end":913,"column_start":5,"column_end":11},"name":"Binary","qualname":"::Expression::Binary","value":"Expression::Binary { op, left, right }","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Apply a binary operator.\n","sig":null,"attributes":[{"value":"/ Apply a binary operator.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":28377,"byte_end":28405,"line_start":912,"line_end":912,"column_start":5,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":3580},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":28725,"byte_end":28731,"line_start":922,"line_end":922,"column_start":5,"column_end":11},"name":"Select","qualname":"::Expression::Select","value":"Expression::Select { condition, accept, reject }","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Select between two values based on a condition.","sig":null,"attributes":[{"value":"/ Select between two values based on a condition.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":28527,"byte_end":28578,"line_start":918,"line_end":918,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":28583,"byte_end":28586,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ Note that, because expressions have no side effects, it is unobservable","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":28591,"byte_end":28666,"line_start":920,"line_end":920,"column_start":5,"column_end":80}},{"value":"/ whether the non-selected branch is evaluated.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":28671,"byte_end":28720,"line_start":921,"line_end":921,"column_start":5,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":3584},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":28930,"byte_end":28940,"line_start":929,"line_end":929,"column_start":5,"column_end":15},"name":"Derivative","qualname":"::Expression::Derivative","value":"Expression::Derivative { axis, expr }","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Compute the derivative on an axis.\n","sig":null,"attributes":[{"value":"/ Compute the derivative on an axis.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":28887,"byte_end":28925,"line_start":928,"line_end":928,"column_start":5,"column_end":43}}]},{"kind":"StructVariant","id":{"krate":0,"index":3587},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":29074,"byte_end":29084,"line_start":935,"line_end":935,"column_start":5,"column_end":15},"name":"Relational","qualname":"::Expression::Relational","value":"Expression::Relational { fun, argument }","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Call a relational function.\n","sig":null,"attributes":[{"value":"/ Call a relational function.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":29038,"byte_end":29069,"line_start":934,"line_end":934,"column_start":5,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":3590},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":29198,"byte_end":29202,"line_start":940,"line_end":940,"column_start":5,"column_end":9},"name":"Math","qualname":"::Expression::Math","value":"Expression::Math { fun, arg, arg1, arg2 }","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Call a math function\n","sig":null,"attributes":[{"value":"/ Call a math function","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":29169,"byte_end":29193,"line_start":939,"line_end":939,"column_start":5,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":3595},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":29404,"byte_end":29406,"line_start":947,"line_end":947,"column_start":5,"column_end":7},"name":"As","qualname":"::Expression::As","value":"Expression::As { expr, kind, convert }","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Cast a simple type to another kind.\n","sig":null,"attributes":[{"value":"/ Cast a simple type to another kind.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":29360,"byte_end":29399,"line_start":946,"line_end":946,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3599},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":29754,"byte_end":29758,"line_start":957,"line_end":957,"column_start":5,"column_end":9},"name":"Call","qualname":"::Expression::Call","value":"Expression::Call(Handle<Function>)","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Result of calling another function.\n","sig":null,"attributes":[{"value":"/ Result of calling another function.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":29710,"byte_end":29749,"line_start":956,"line_end":956,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3602},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":30078,"byte_end":30089,"line_start":963,"line_end":963,"column_start":5,"column_end":16},"name":"ArrayLength","qualname":"::Expression::ArrayLength","value":"Expression::ArrayLength(Handle<Expression>)","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Get the length of an array.\n The expression must resolve to a pointer to an array with a dynamic size.","sig":null,"attributes":[{"value":"/ Get the length of an array.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":29782,"byte_end":29813,"line_start":958,"line_end":958,"column_start":5,"column_end":36}},{"value":"/ The expression must resolve to a pointer to an array with a dynamic size.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":29818,"byte_end":29895,"line_start":959,"line_end":959,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":29900,"byte_end":29903,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ This doesn't match the semantics of spirv's `OpArrayLength`, which must be passed","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":29908,"byte_end":29993,"line_start":961,"line_end":961,"column_start":5,"column_end":90}},{"value":"/ a pointer to a structure containing a runtime array in its' last field.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":29998,"byte_end":30073,"line_start":962,"line_end":962,"column_start":5,"column_end":80}}]},{"kind":"Enum","id":{"krate":0,"index":3525},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":24004,"byte_end":24014,"line_start":796,"line_end":796,"column_start":10,"column_end":20},"name":"Expression","qualname":"::Expression","value":"pub enum Expression {\n    Access {\n            base: Handle<Expression>,\n            index: Handle<Expression>,\n        },\n    AccessIndex {\n            base: Handle<Expression>,\n            index: u32,\n        },\n    Constant(Handle<Constant>),\n    Splat {\n            size: VectorSize,\n            value: Handle<Expression>,\n        },\n    Swizzle {\n            size: VectorSize,\n            vector: Handle<Expression>,\n            pattern: [SwizzleComponent; ],\n        },\n    Compose {\n            ty: Handle<Type>,\n            components: Vec<Handle<Expression>>,\n        },\n    FunctionArgument(u32),\n    GlobalVariable(Handle<GlobalVariable>),\n    LocalVariable(Handle<LocalVariable>),\n    Load {\n            pointer: Handle<Expression>,\n        },\n    ImageSample {\n            image: Handle<Expression>,\n            sampler: Handle<Expression>,\n            coordinate: Handle<Expression>,\n            array_index: Option<Handle<Expression>>,\n            offset: Option<Handle<Constant>>,\n            level: SampleLevel,\n            depth_ref: Option<Handle<Expression>>,\n        },\n    ImageLoad {\n            image: Handle<Expression>,\n            coordinate: Handle<Expression>,\n            array_index: Option<Handle<Expression>>,\n            index: Option<Handle<Expression>>,\n        },\n    ImageQuery {\n            image: Handle<Expression>,\n            query: ImageQuery,\n        },\n    Unary {\n            op: UnaryOperator,\n            expr: Handle<Expression>,\n        },\n    Binary {\n            op: BinaryOperator,\n            left: Handle<Expression>,\n            right: Handle<Expression>,\n        },\n    Select {\n            condition: Handle<Expression>,\n            accept: Handle<Expression>,\n            reject: Handle<Expression>,\n        },\n    Derivative {\n            axis: DerivativeAxis,\n            expr: Handle<Expression>,\n        },\n    Relational {\n            fun: RelationalFunction,\n            argument: Handle<Expression>,\n        },\n    Math {\n            fun: MathFunction,\n            arg: Handle<Expression>,\n            arg1: Option<Handle<Expression>>,\n            arg2: Option<Handle<Expression>>,\n        },\n    As {\n            expr: Handle<Expression>,\n            kind: ScalarKind,\n            convert: Option<Bytes>,\n        },\n    Call(Handle<Function>),\n    ArrayLength(Handle<Expression>),\n}","parent":null,"children":[{"krate":0,"index":3526},{"krate":0,"index":3529},{"krate":0,"index":3532},{"krate":0,"index":3535},{"krate":0,"index":3538},{"krate":0,"index":3543},{"krate":0,"index":3546},{"krate":0,"index":3549},{"krate":0,"index":3552},{"krate":0,"index":3555},{"krate":0,"index":3557},{"krate":0,"index":3565},{"krate":0,"index":3570},{"krate":0,"index":3573},{"krate":0,"index":3576},{"krate":0,"index":3580},{"krate":0,"index":3584},{"krate":0,"index":3587},{"krate":0,"index":3590},{"krate":0,"index":3595},{"krate":0,"index":3599},{"krate":0,"index":3602}],"decl_id":null,"docs":" An expression that can be evaluated to obtain a value.","sig":null,"attributes":[{"value":"/ An expression that can be evaluated to obtain a value.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":23688,"byte_end":23746,"line_start":789,"line_end":789,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":23747,"byte_end":23750,"line_start":790,"line_end":790,"column_start":1,"column_end":4}},{"value":"/ This is a Single Static Assignment (SSA) scheme similar to SPIR-V.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":23751,"byte_end":23821,"line_start":791,"line_end":791,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":832},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":30172,"byte_end":30177,"line_start":967,"line_end":967,"column_start":10,"column_end":15},"name":"Block","qualname":"::Block","value":"Vec<Statement>","parent":null,"children":[],"decl_id":null,"docs":" A code block is just a vector of statements.\n","sig":null,"attributes":[{"value":"/ A code block is just a vector of statements.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":30114,"byte_end":30162,"line_start":966,"line_end":966,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3609},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":30455,"byte_end":30465,"line_start":974,"line_end":974,"column_start":12,"column_end":22},"name":"SwitchCase","qualname":"::SwitchCase","value":"SwitchCase { value, body, fall_through }","parent":null,"children":[{"krate":0,"index":3610},{"krate":0,"index":3611},{"krate":0,"index":3612}],"decl_id":null,"docs":" A case for a switch statement.\n","sig":null,"attributes":[{"value":"/ A case for a switch statement.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":30197,"byte_end":30231,"line_start":969,"line_end":969,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":3610},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":30531,"byte_end":30536,"line_start":976,"line_end":976,"column_start":9,"column_end":14},"name":"value","qualname":"::SwitchCase::value","value":"i32","parent":{"krate":0,"index":3609},"children":[],"decl_id":null,"docs":" Value, upon which the case is considered true.\n","sig":null,"attributes":[{"value":"/ Value, upon which the case is considered true.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":30472,"byte_end":30522,"line_start":975,"line_end":975,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":3611},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":30576,"byte_end":30580,"line_start":978,"line_end":978,"column_start":9,"column_end":13},"name":"body","qualname":"::SwitchCase::body","value":"std::vec::Vec<Statement>","parent":{"krate":0,"index":3609},"children":[],"decl_id":null,"docs":" Body of the cae.\n","sig":null,"attributes":[{"value":"/ Body of the cae.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":30547,"byte_end":30567,"line_start":977,"line_end":977,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":3612},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":30691,"byte_end":30703,"line_start":981,"line_end":981,"column_start":9,"column_end":21},"name":"fall_through","qualname":"::SwitchCase::fall_through","value":"bool","parent":{"krate":0,"index":3609},"children":[],"decl_id":null,"docs":" If true, the control flow continues to the next case in the list,\n or default.\n","sig":null,"attributes":[{"value":"/ If true, the control flow continues to the next case in the list,","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":30593,"byte_end":30662,"line_start":979,"line_end":979,"column_start":5,"column_end":74}},{"value":"/ or default.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":30667,"byte_end":30682,"line_start":980,"line_end":980,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3618},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":31322,"byte_end":31326,"line_start":996,"line_end":996,"column_start":5,"column_end":9},"name":"Emit","qualname":"::Statement::Emit","value":"Statement::Emit(Range<Expression>)","parent":{"krate":0,"index":3617},"children":[],"decl_id":null,"docs":" Emit a range of expressions, visible to all statements that follow in this block.","sig":null,"attributes":[{"value":"/ Emit a range of expressions, visible to all statements that follow in this block.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":31088,"byte_end":31173,"line_start":991,"line_end":991,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":31178,"byte_end":31181,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ See the [module-level documentation][emit] for details.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":31186,"byte_end":31245,"line_start":993,"line_end":993,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":31250,"byte_end":31253,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ [emit]: index.html#expression-evaluation-time-and-scope","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":31258,"byte_end":31317,"line_start":995,"line_end":995,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3621},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":31424,"byte_end":31429,"line_start":998,"line_end":998,"column_start":5,"column_end":10},"name":"Block","qualname":"::Statement::Block","value":"Statement::Block(Block)","parent":{"krate":0,"index":3617},"children":[],"decl_id":null,"docs":" A block containing more statements, to be executed sequentially.\n","sig":null,"attributes":[{"value":"/ A block containing more statements, to be executed sequentially.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":31351,"byte_end":31419,"line_start":997,"line_end":997,"column_start":5,"column_end":73}}]},{"kind":"StructVariant","id":{"krate":0,"index":3624},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":31529,"byte_end":31531,"line_start":1000,"line_end":1000,"column_start":5,"column_end":7},"name":"If","qualname":"::Statement::If","value":"Statement::If { condition, accept, reject }","parent":{"krate":0,"index":3617},"children":[],"decl_id":null,"docs":" Conditionally executes one of two blocks, based on the value of the condition.\n","sig":null,"attributes":[{"value":"/ Conditionally executes one of two blocks, based on the value of the condition.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":31442,"byte_end":31524,"line_start":999,"line_end":999,"column_start":5,"column_end":87}}]},{"kind":"StructVariant","id":{"krate":0,"index":3628},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":31728,"byte_end":31734,"line_start":1006,"line_end":1006,"column_start":5,"column_end":11},"name":"Switch","qualname":"::Statement::Switch","value":"Statement::Switch { selector, cases, default }","parent":{"krate":0,"index":3617},"children":[],"decl_id":null,"docs":" Conditionally executes one of multiple blocks, based on the value of the selector.\n","sig":null,"attributes":[{"value":"/ Conditionally executes one of multiple blocks, based on the value of the selector.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":31637,"byte_end":31723,"line_start":1005,"line_end":1005,"column_start":5,"column_end":91}}]},{"kind":"StructVariant","id":{"krate":0,"index":3632},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":31885,"byte_end":31889,"line_start":1012,"line_end":1012,"column_start":5,"column_end":9},"name":"Loop","qualname":"::Statement::Loop","value":"Statement::Loop { body, continuing }","parent":{"krate":0,"index":3617},"children":[],"decl_id":null,"docs":" Executes a block repeatedly.\n","sig":null,"attributes":[{"value":"/ Executes a block repeatedly.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":31848,"byte_end":31880,"line_start":1011,"line_end":1011,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3635},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":31954,"byte_end":31959,"line_start":1014,"line_end":1014,"column_start":5,"column_end":10},"name":"Break","qualname":"::Statement::Break","value":"Statement::Break","parent":{"krate":0,"index":3617},"children":[],"decl_id":null,"docs":" Exits the loop.\n","sig":null,"attributes":[{"value":"/ Exits the loop.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":31930,"byte_end":31949,"line_start":1013,"line_end":1013,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3637},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":32024,"byte_end":32032,"line_start":1016,"line_end":1016,"column_start":5,"column_end":13},"name":"Continue","qualname":"::Statement::Continue","value":"Statement::Continue","parent":{"krate":0,"index":3617},"children":[],"decl_id":null,"docs":" Skips execution to the next iteration of the loop.\n","sig":null,"attributes":[{"value":"/ Skips execution to the next iteration of the loop.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":31965,"byte_end":32019,"line_start":1015,"line_end":1015,"column_start":5,"column_end":59}}]},{"kind":"StructVariant","id":{"krate":0,"index":3639},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":32097,"byte_end":32103,"line_start":1018,"line_end":1018,"column_start":5,"column_end":11},"name":"Return","qualname":"::Statement::Return","value":"Statement::Return { value }","parent":{"krate":0,"index":3617},"children":[],"decl_id":null,"docs":" Returns from the function (possibly with a value).\n","sig":null,"attributes":[{"value":"/ Returns from the function (possibly with a value).","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":32038,"byte_end":32092,"line_start":1017,"line_end":1017,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3641},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":32192,"byte_end":32196,"line_start":1020,"line_end":1020,"column_start":5,"column_end":9},"name":"Kill","qualname":"::Statement::Kill","value":"Statement::Kill","parent":{"krate":0,"index":3617},"children":[],"decl_id":null,"docs":" Aborts the current shader execution.\n","sig":null,"attributes":[{"value":"/ Aborts the current shader execution.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":32147,"byte_end":32187,"line_start":1019,"line_end":1019,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3643},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":32399,"byte_end":32406,"line_start":1024,"line_end":1024,"column_start":5,"column_end":12},"name":"Barrier","qualname":"::Statement::Barrier","value":"Statement::Barrier(Barrier)","parent":{"krate":0,"index":3617},"children":[],"decl_id":null,"docs":" Synchronize invocations within the work group.\n The `Barrier` flags control which memory accesses should be synchronized.\n If empty, this becomes purely an execution barrier.\n","sig":null,"attributes":[{"value":"/ Synchronize invocations within the work group.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":32202,"byte_end":32252,"line_start":1021,"line_end":1021,"column_start":5,"column_end":55}},{"value":"/ The `Barrier` flags control which memory accesses should be synchronized.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":32257,"byte_end":32334,"line_start":1022,"line_end":1022,"column_start":5,"column_end":82}},{"value":"/ If empty, this becomes purely an execution barrier.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":32339,"byte_end":32394,"line_start":1023,"line_end":1023,"column_start":5,"column_end":60}}]},{"kind":"StructVariant","id":{"krate":0,"index":3646},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":32685,"byte_end":32690,"line_start":1031,"line_end":1031,"column_start":5,"column_end":10},"name":"Store","qualname":"::Statement::Store","value":"Statement::Store { pointer, value }","parent":{"krate":0,"index":3617},"children":[],"decl_id":null,"docs":" Stores a value at an address.","sig":null,"attributes":[{"value":"/ Stores a value at an address.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":32421,"byte_end":32454,"line_start":1025,"line_end":1025,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":32459,"byte_end":32462,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ This statement is a barrier for any operations on the","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":32467,"byte_end":32524,"line_start":1027,"line_end":1027,"column_start":5,"column_end":62}},{"value":"/ `Expression::LocalVariable` or `Expression::GlobalVariable`","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":32529,"byte_end":32592,"line_start":1028,"line_end":1028,"column_start":5,"column_end":68}},{"value":"/ that is the destination of an access chain, started","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":32597,"byte_end":32652,"line_start":1029,"line_end":1029,"column_start":5,"column_end":60}},{"value":"/ from the `pointer`.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":32657,"byte_end":32680,"line_start":1030,"line_end":1030,"column_start":5,"column_end":28}}]},{"kind":"StructVariant","id":{"krate":0,"index":3649},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":33027,"byte_end":33037,"line_start":1040,"line_end":1040,"column_start":5,"column_end":15},"name":"ImageStore","qualname":"::Statement::ImageStore","value":"Statement::ImageStore { image, coordinate, array_index, value }","parent":{"krate":0,"index":3617},"children":[],"decl_id":null,"docs":" Stores a value to an image.","sig":null,"attributes":[{"value":"/ Stores a value to an image.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":32776,"byte_end":32807,"line_start":1035,"line_end":1035,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":32812,"byte_end":32815,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ Image has to point into a global variable of type `TypeInner::Image`.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":32820,"byte_end":32893,"line_start":1037,"line_end":1037,"column_start":5,"column_end":78}},{"value":"/ This statement is a barrier for any operations on the corresponding","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":32898,"byte_end":32969,"line_start":1038,"line_end":1038,"column_start":5,"column_end":76}},{"value":"/ `Expression::GlobalVariable` for this image.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":32974,"byte_end":33022,"line_start":1039,"line_end":1039,"column_start":5,"column_end":53}}]},{"kind":"StructVariant","id":{"krate":0,"index":3654},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":33432,"byte_end":33436,"line_start":1051,"line_end":1051,"column_start":5,"column_end":9},"name":"Call","qualname":"::Statement::Call","value":"Statement::Call { function, arguments, result }","parent":{"krate":0,"index":3617},"children":[],"decl_id":null,"docs":" Calls a function.","sig":null,"attributes":[{"value":"/ Calls a function.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":33210,"byte_end":33231,"line_start":1046,"line_end":1046,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":33236,"byte_end":33239,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ If the `result` is `Some`, the corresponding expression has to be","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":33244,"byte_end":33313,"line_start":1048,"line_end":1048,"column_start":5,"column_end":74}},{"value":"/ `Expression::Call`, and this statement serves as a barrier for any","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":33318,"byte_end":33388,"line_start":1049,"line_end":1049,"column_start":5,"column_end":75}},{"value":"/ operations on that expression.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":33393,"byte_end":33427,"line_start":1050,"line_end":1050,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":3617},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":31072,"byte_end":31081,"line_start":990,"line_end":990,"column_start":10,"column_end":19},"name":"Statement","qualname":"::Statement","value":"pub enum Statement {\n    Emit(Range<Expression>),\n    Block(Block),\n    If {\n            condition: Handle<Expression>,\n            accept: Block,\n            reject: Block,\n        },\n    Switch {\n            selector: Handle<Expression>,\n            cases: Vec<SwitchCase>,\n            default: Block,\n        },\n    Loop {\n            body: Block,\n            continuing: Block,\n        },\n    Break,\n    Continue,\n    Return {\n            value: Option<Handle<Expression>>,\n        },\n    Kill,\n    Barrier(Barrier),\n    Store {\n            pointer: Handle<Expression>,\n            value: Handle<Expression>,\n        },\n    ImageStore {\n            image: Handle<Expression>,\n            coordinate: Handle<Expression>,\n            array_index: Option<Handle<Expression>>,\n            value: Handle<Expression>,\n        },\n    Call {\n            function: Handle<Function>,\n            arguments: Vec<Handle<Expression>>,\n            result: Option<Handle<Expression>>,\n        },\n}","parent":null,"children":[{"krate":0,"index":3618},{"krate":0,"index":3621},{"krate":0,"index":3624},{"krate":0,"index":3628},{"krate":0,"index":3632},{"krate":0,"index":3635},{"krate":0,"index":3637},{"krate":0,"index":3639},{"krate":0,"index":3641},{"krate":0,"index":3643},{"krate":0,"index":3646},{"krate":0,"index":3649},{"krate":0,"index":3654}],"decl_id":null,"docs":" Instructions which make up an executable block.\n","sig":null,"attributes":[{"value":"/ Instructions which make up an executable block.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":30799,"byte_end":30850,"line_start":985,"line_end":985,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3662},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":33745,"byte_end":33761,"line_start":1062,"line_end":1062,"column_start":12,"column_end":28},"name":"FunctionArgument","qualname":"::FunctionArgument","value":"FunctionArgument { name, ty, binding }","parent":null,"children":[{"krate":0,"index":3663},{"krate":0,"index":3664},{"krate":0,"index":3665}],"decl_id":null,"docs":" A function argument.\n","sig":null,"attributes":[{"value":"/ A function argument.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":33573,"byte_end":33597,"line_start":1058,"line_end":1058,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":3663},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":33810,"byte_end":33814,"line_start":1064,"line_end":1064,"column_start":9,"column_end":13},"name":"name","qualname":"::FunctionArgument::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3662},"children":[],"decl_id":null,"docs":" Name of the argument, if any.\n","sig":null,"attributes":[{"value":"/ Name of the argument, if any.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":33768,"byte_end":33801,"line_start":1063,"line_end":1063,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":3664},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":33870,"byte_end":33872,"line_start":1066,"line_end":1066,"column_start":9,"column_end":11},"name":"ty","qualname":"::FunctionArgument::ty","value":"arena::Handle<Type>","parent":{"krate":0,"index":3662},"children":[],"decl_id":null,"docs":" Type of the argument.\n","sig":null,"attributes":[{"value":"/ Type of the argument.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":33836,"byte_end":33861,"line_start":1065,"line_end":1065,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":3665},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":33989,"byte_end":33996,"line_start":1069,"line_end":1069,"column_start":9,"column_end":16},"name":"binding","qualname":"::FunctionArgument::binding","value":"std::option::Option<Binding>","parent":{"krate":0,"index":3662},"children":[],"decl_id":null,"docs":" For entry points, an argument has to have a binding\n unless it's a structure.\n","sig":null,"attributes":[{"value":"/ For entry points, an argument has to have a binding","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":33892,"byte_end":33947,"line_start":1067,"line_end":1067,"column_start":5,"column_end":60}},{"value":"/ unless it's a structure.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":33952,"byte_end":33980,"line_start":1068,"line_end":1068,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3670},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":34165,"byte_end":34179,"line_start":1075,"line_end":1075,"column_start":12,"column_end":26},"name":"FunctionResult","qualname":"::FunctionResult","value":"FunctionResult { ty, binding }","parent":null,"children":[{"krate":0,"index":3671},{"krate":0,"index":3672}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3671},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":34218,"byte_end":34220,"line_start":1077,"line_end":1077,"column_start":9,"column_end":11},"name":"ty","qualname":"::FunctionResult::ty","value":"arena::Handle<Type>","parent":{"krate":0,"index":3670},"children":[],"decl_id":null,"docs":" Type of the result.\n","sig":null,"attributes":[{"value":"/ Type of the result.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":34186,"byte_end":34209,"line_start":1076,"line_end":1076,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3672},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":34336,"byte_end":34343,"line_start":1080,"line_end":1080,"column_start":9,"column_end":16},"name":"binding","qualname":"::FunctionResult::binding","value":"std::option::Option<Binding>","parent":{"krate":0,"index":3670},"children":[],"decl_id":null,"docs":" For entry points, the result has to have a binding\n unless it's a structure.\n","sig":null,"attributes":[{"value":"/ For entry points, the result has to have a binding","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":34240,"byte_end":34294,"line_start":1078,"line_end":1078,"column_start":5,"column_end":59}},{"value":"/ unless it's a structure.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":34299,"byte_end":34327,"line_start":1079,"line_end":1079,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3677},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":34552,"byte_end":34560,"line_start":1087,"line_end":1087,"column_start":12,"column_end":20},"name":"Function","qualname":"::Function","value":"Function { name, arguments, result, local_variables, expressions, named_expressions, body }","parent":null,"children":[{"krate":0,"index":3678},{"krate":0,"index":3679},{"krate":0,"index":3680},{"krate":0,"index":3681},{"krate":0,"index":3682},{"krate":0,"index":3683},{"krate":0,"index":3684}],"decl_id":null,"docs":" A function defined in the module.\n","sig":null,"attributes":[{"value":"/ A function defined in the module.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":34365,"byte_end":34402,"line_start":1083,"line_end":1083,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":3678},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":34609,"byte_end":34613,"line_start":1089,"line_end":1089,"column_start":9,"column_end":13},"name":"name","qualname":"::Function::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3677},"children":[],"decl_id":null,"docs":" Name of the function, if any.\n","sig":null,"attributes":[{"value":"/ Name of the function, if any.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":34567,"byte_end":34600,"line_start":1088,"line_end":1088,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":3679},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":34684,"byte_end":34693,"line_start":1091,"line_end":1091,"column_start":9,"column_end":18},"name":"arguments","qualname":"::Function::arguments","value":"std::vec::Vec<FunctionArgument>","parent":{"krate":0,"index":3677},"children":[],"decl_id":null,"docs":" Information about function argument.\n","sig":null,"attributes":[{"value":"/ Information about function argument.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":34635,"byte_end":34675,"line_start":1090,"line_end":1090,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":3680},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":34771,"byte_end":34777,"line_start":1093,"line_end":1093,"column_start":9,"column_end":15},"name":"result","qualname":"::Function::result","value":"std::option::Option<FunctionResult>","parent":{"krate":0,"index":3677},"children":[],"decl_id":null,"docs":" The result of this function, if any.\n","sig":null,"attributes":[{"value":"/ The result of this function, if any.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":34722,"byte_end":34762,"line_start":1092,"line_end":1092,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":3681},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":34869,"byte_end":34884,"line_start":1095,"line_end":1095,"column_start":9,"column_end":24},"name":"local_variables","qualname":"::Function::local_variables","value":"arena::Arena<LocalVariable>","parent":{"krate":0,"index":3677},"children":[],"decl_id":null,"docs":" Local variables defined and used in the function.\n","sig":null,"attributes":[{"value":"/ Local variables defined and used in the function.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":34807,"byte_end":34860,"line_start":1094,"line_end":1094,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":3682},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":34963,"byte_end":34974,"line_start":1097,"line_end":1097,"column_start":9,"column_end":20},"name":"expressions","qualname":"::Function::expressions","value":"arena::Arena<Expression>","parent":{"krate":0,"index":3677},"children":[],"decl_id":null,"docs":" Expressions used inside this function.\n","sig":null,"attributes":[{"value":"/ Expressions used inside this function.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":34912,"byte_end":34954,"line_start":1096,"line_end":1096,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3683},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":35066,"byte_end":35083,"line_start":1099,"line_end":1099,"column_start":9,"column_end":26},"name":"named_expressions","qualname":"::Function::named_expressions","value":"std::collections::HashMap<arena::Handle<Expression>, std::string::String, std::hash::BuildHasherDefault<fxhash::FxHasher>>","parent":{"krate":0,"index":3677},"children":[],"decl_id":null,"docs":" Map of expressions that have associated variable names\n","sig":null,"attributes":[{"value":"/ Map of expressions that have associated variable names","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":34999,"byte_end":35057,"line_start":1098,"line_end":1098,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":3684},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":35178,"byte_end":35182,"line_start":1101,"line_end":1101,"column_start":9,"column_end":13},"name":"body","qualname":"::Function::body","value":"std::vec::Vec<Statement>","parent":{"krate":0,"index":3677},"children":[],"decl_id":null,"docs":" Block of instructions comprising the body of the function.\n","sig":null,"attributes":[{"value":"/ Block of instructions comprising the body of the function.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":35107,"byte_end":35169,"line_start":1100,"line_end":1100,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":3689},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":35403,"byte_end":35413,"line_start":1108,"line_end":1108,"column_start":12,"column_end":22},"name":"EntryPoint","qualname":"::EntryPoint","value":"EntryPoint { name, stage, early_depth_test, workgroup_size, function }","parent":null,"children":[{"krate":0,"index":3690},{"krate":0,"index":3691},{"krate":0,"index":3692},{"krate":0,"index":3693},{"krate":0,"index":3695}],"decl_id":null,"docs":" Exported function, to be run at a certain stage in the pipeline.\n","sig":null,"attributes":[{"value":"/ Exported function, to be run at a certain stage in the pipeline.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":35194,"byte_end":35262,"line_start":1104,"line_end":1104,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":3690},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":35478,"byte_end":35482,"line_start":1110,"line_end":1110,"column_start":9,"column_end":13},"name":"name","qualname":"::EntryPoint::name","value":"std::string::String","parent":{"krate":0,"index":3689},"children":[],"decl_id":null,"docs":" Name of this entry point, visible externally.\n","sig":null,"attributes":[{"value":"/ Name of this entry point, visible externally.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":35420,"byte_end":35469,"line_start":1109,"line_end":1109,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3691},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":35522,"byte_end":35527,"line_start":1112,"line_end":1112,"column_start":9,"column_end":14},"name":"stage","qualname":"::EntryPoint::stage","value":"ShaderStage","parent":{"krate":0,"index":3689},"children":[],"decl_id":null,"docs":" Shader stage.\n","sig":null,"attributes":[{"value":"/ Shader stage.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":35496,"byte_end":35513,"line_start":1111,"line_end":1111,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":3692},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":35596,"byte_end":35612,"line_start":1114,"line_end":1114,"column_start":9,"column_end":25},"name":"early_depth_test","qualname":"::EntryPoint::early_depth_test","value":"std::option::Option<EarlyDepthTest>","parent":{"krate":0,"index":3689},"children":[],"decl_id":null,"docs":" Early depth test for fragment stages.\n","sig":null,"attributes":[{"value":"/ Early depth test for fragment stages.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":35546,"byte_end":35587,"line_start":1113,"line_end":1113,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":3693},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":35688,"byte_end":35702,"line_start":1116,"line_end":1116,"column_start":9,"column_end":23},"name":"workgroup_size","qualname":"::EntryPoint::workgroup_size","value":"[u32; 3]","parent":{"krate":0,"index":3689},"children":[],"decl_id":null,"docs":" Workgroup size for compute stages\n","sig":null,"attributes":[{"value":"/ Workgroup size for compute stages","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":35642,"byte_end":35679,"line_start":1115,"line_end":1115,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":3695},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":35753,"byte_end":35761,"line_start":1118,"line_end":1118,"column_start":9,"column_end":17},"name":"function","qualname":"::EntryPoint::function","value":"Function","parent":{"krate":0,"index":3689},"children":[],"decl_id":null,"docs":" The entrance function.\n","sig":null,"attributes":[{"value":"/ The entrance function.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":35718,"byte_end":35744,"line_start":1117,"line_end":1117,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":3698},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":36411,"byte_end":36417,"line_start":1135,"line_end":1135,"column_start":12,"column_end":18},"name":"Module","qualname":"::Module","value":"Module { types, constants, global_variables, functions, entry_points }","parent":null,"children":[{"krate":0,"index":3699},{"krate":0,"index":3700},{"krate":0,"index":3701},{"krate":0,"index":3702},{"krate":0,"index":3703}],"decl_id":null,"docs":" Shader module.","sig":null,"attributes":[{"value":"/ Shader module.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":35776,"byte_end":35794,"line_start":1121,"line_end":1121,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":35795,"byte_end":35798,"line_start":1122,"line_end":1122,"column_start":1,"column_end":4}},{"value":"/ A module is a set of constants, global variables and functions, as well as","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":35799,"byte_end":35877,"line_start":1123,"line_end":1123,"column_start":1,"column_end":79}},{"value":"/ the types required to define them.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":35878,"byte_end":35916,"line_start":1124,"line_end":1124,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":35917,"byte_end":35920,"line_start":1125,"line_end":1125,"column_start":1,"column_end":4}},{"value":"/ Some functions are marked as entry points, to be used in a certain shader stage.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":35921,"byte_end":36005,"line_start":1126,"line_end":1126,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":36006,"byte_end":36009,"line_start":1127,"line_end":1127,"column_start":1,"column_end":4}},{"value":"/ To create a new module, use the `Default` implementation.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":36010,"byte_end":36071,"line_start":1128,"line_end":1128,"column_start":1,"column_end":62}},{"value":"/ Alternatively, you can load an existing shader using one of the [available front ends][front].","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":36072,"byte_end":36170,"line_start":1129,"line_end":1129,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":36171,"byte_end":36174,"line_start":1130,"line_end":1130,"column_start":1,"column_end":4}},{"value":"/ When finished, you can export modules using one of the [available backends][back].","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":36175,"byte_end":36261,"line_start":1131,"line_end":1131,"column_start":1,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":3699},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":36482,"byte_end":36487,"line_start":1137,"line_end":1137,"column_start":9,"column_end":14},"name":"types","qualname":"::Module::types","value":"arena::Arena<Type>","parent":{"krate":0,"index":3698},"children":[],"decl_id":null,"docs":" Storage for the types defined in this module.\n","sig":null,"attributes":[{"value":"/ Storage for the types defined in this module.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":36424,"byte_end":36473,"line_start":1136,"line_end":1136,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3700},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":36568,"byte_end":36577,"line_start":1139,"line_end":1139,"column_start":9,"column_end":18},"name":"constants","qualname":"::Module::constants","value":"arena::Arena<Constant>","parent":{"krate":0,"index":3698},"children":[],"decl_id":null,"docs":" Storage for the constants defined in this module.\n","sig":null,"attributes":[{"value":"/ Storage for the constants defined in this module.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":36506,"byte_end":36559,"line_start":1138,"line_end":1138,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":3701},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":36669,"byte_end":36685,"line_start":1141,"line_end":1141,"column_start":9,"column_end":25},"name":"global_variables","qualname":"::Module::global_variables","value":"arena::Arena<GlobalVariable>","parent":{"krate":0,"index":3698},"children":[],"decl_id":null,"docs":" Storage for the global variables defined in this module.\n","sig":null,"attributes":[{"value":"/ Storage for the global variables defined in this module.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":36600,"byte_end":36660,"line_start":1140,"line_end":1140,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":3702},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":36776,"byte_end":36785,"line_start":1143,"line_end":1143,"column_start":9,"column_end":18},"name":"functions","qualname":"::Module::functions","value":"arena::Arena<Function>","parent":{"krate":0,"index":3698},"children":[],"decl_id":null,"docs":" Storage for the functions defined in this module.\n","sig":null,"attributes":[{"value":"/ Storage for the functions defined in this module.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":36714,"byte_end":36767,"line_start":1142,"line_end":1142,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":3703},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":36834,"byte_end":36846,"line_start":1145,"line_end":1145,"column_start":9,"column_end":21},"name":"entry_points","qualname":"::Module::entry_points","value":"std::vec::Vec<EntryPoint>","parent":{"krate":0,"index":3698},"children":[],"decl_id":null,"docs":" Entry points.\n","sig":null,"attributes":[{"value":"/ Entry points.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":36808,"byte_end":36825,"line_start":1144,"line_end":1144,"column_start":5,"column_end":22}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":37598,"byte_end":37604,"line_start":21,"line_end":21,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":37756,"byte_end":37762,"line_start":29,"line_end":29,"column_start":18,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":37791,"byte_end":37797,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":37901,"byte_end":37907,"line_start":35,"line_end":35,"column_start":16,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":37937,"byte_end":37943,"line_start":36,"line_end":36,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":38080,"byte_end":38086,"line_start":41,"line_end":41,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":38206,"byte_end":38212,"line_start":46,"line_end":46,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":38362,"byte_end":38368,"line_start":51,"line_end":51,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":38477,"byte_end":38483,"line_start":57,"line_end":57,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":39371,"byte_end":39376,"line_start":91,"line_end":91,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":39541,"byte_end":39546,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":39724,"byte_end":39729,"line_start":104,"line_end":104,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":40728,"byte_end":40733,"line_start":137,"line_end":137,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":40829,"byte_end":40834,"line_start":142,"line_end":142,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":40968,"byte_end":40973,"line_start":148,"line_end":148,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":44361,"byte_end":44366,"line_start":245,"line_end":245,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":44517,"byte_end":44522,"line_start":252,"line_end":252,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\back\\mod.rs","byte_start":46041,"byte_end":46051,"line_start":16,"line_end":16,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\front\\mod.rs","byte_start":48879,"byte_end":48886,"line_start":23,"line_end":23,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\front\\mod.rs","byte_start":49460,"byte_end":49473,"line_start":42,"line_end":42,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\front\\mod.rs","byte_start":49795,"byte_end":49803,"line_start":57,"line_end":57,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":60802,"byte_end":60808,"line_start":3,"line_end":3,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\layouter.rs","byte_start":68074,"byte_end":68082,"line_start":25,"line_end":25,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\layouter.rs","byte_start":68391,"byte_end":68399,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\namer.rs","byte_start":73261,"byte_end":73266,"line_start":31,"line_end":31,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":82873,"byte_end":82887,"line_start":13,"line_end":13,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":83391,"byte_end":83405,"line_start":30,"line_end":30,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":84515,"byte_end":84528,"line_start":65,"line_end":65,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":86420,"byte_end":86434,"line_start":121,"line_end":121,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":51842,"byte_end":51852,"line_start":14,"line_end":14,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":53269,"byte_end":53280,"line_start":54,"line_end":54,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":53641,"byte_end":53650,"line_start":67,"line_end":67,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":55256,"byte_end":55268,"line_start":113,"line_end":113,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":57005,"byte_end":57015,"line_start":175,"line_end":175,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":58318,"byte_end":58329,"line_start":210,"line_end":210,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":58556,"byte_end":58564,"line_start":219,"line_end":219,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":59275,"byte_end":59282,"line_start":238,"line_end":238,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":59557,"byte_end":59568,"line_start":248,"line_end":248,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":59943,"byte_end":59954,"line_start":259,"line_end":259,"column_start":20,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":59990,"byte_end":60001,"line_start":260,"line_end":260,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":60307,"byte_end":60323,"line_start":271,"line_end":271,"column_start":13,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":355},{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":122915,"byte_end":122925,"line_start":51,"line_end":51,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":123724,"byte_end":123742,"line_start":79,"line_end":79,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":124205,"byte_end":124223,"line_start":95,"line_end":95,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":125869,"byte_end":125883,"line_start":147,"line_end":147,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":127163,"byte_end":127175,"line_start":186,"line_end":186,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":127732,"byte_end":127744,"line_start":205,"line_end":205,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":127949,"byte_end":127961,"line_start":212,"line_end":212,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":128621,"byte_end":128633,"line_start":231,"line_end":231,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":148686,"byte_end":148696,"line_start":694,"line_end":694,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":167487,"byte_end":167509,"line_start":114,"line_end":114,"column_start":10,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":167847,"byte_end":167856,"line_start":127,"line_end":127,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":219175,"byte_end":219187,"line_start":128,"line_end":128,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":221561,"byte_end":221570,"line_start":207,"line_end":207,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":242036,"byte_end":242050,"line_start":104,"line_end":104,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":250123,"byte_end":250132,"line_start":298,"line_end":298,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":261930,"byte_end":261938,"line_start":110,"line_end":110,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":701},{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":262370,"byte_end":262379,"line_start":129,"line_end":129,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":111869,"byte_end":111884,"line_start":44,"line_end":44,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":112966,"byte_end":112976,"line_start":83,"line_end":83,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":789},{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":115061,"byte_end":115070,"line_start":158,"line_end":158,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":116226,"byte_end":116235,"line_start":196,"line_end":196,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":5611,"byte_end":5615,"line_start":129,"line_end":129,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":109}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":5625,"byte_end":5630,"line_start":130,"line_end":130,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":117}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":5640,"byte_end":5644,"line_start":131,"line_end":131,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":148}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\lib.rs","byte_start":5654,"byte_end":5659,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":357}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":37598,"byte_end":37604,"line_start":21,"line_end":21,"column_start":19,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":24},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":37756,"byte_end":37762,"line_start":29,"line_end":29,"column_start":18,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":24},"to":{"krate":2,"index":3067}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":37791,"byte_end":37797,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":24},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":37901,"byte_end":37907,"line_start":35,"line_end":35,"column_start":16,"column_end":22},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":24},"to":{"krate":2,"index":2714}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":37937,"byte_end":37943,"line_start":36,"line_end":36,"column_start":24,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":24},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":38080,"byte_end":38086,"line_start":41,"line_end":41,"column_start":17,"column_end":23},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":24},"to":{"krate":2,"index":2745}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":38206,"byte_end":38212,"line_start":46,"line_end":46,"column_start":24,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":24},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":38362,"byte_end":38368,"line_start":51,"line_end":51,"column_start":24,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":24},"to":{"krate":2,"index":9892}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":38477,"byte_end":38483,"line_start":57,"line_end":57,"column_start":9,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":24},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":39371,"byte_end":39376,"line_start":91,"line_end":91,"column_start":19,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":39541,"byte_end":39546,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":39724,"byte_end":39729,"line_start":104,"line_end":104,"column_start":22,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":40728,"byte_end":40733,"line_start":137,"line_end":137,"column_start":21,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":40829,"byte_end":40834,"line_start":142,"line_end":142,"column_start":36,"column_end":41},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":40968,"byte_end":40973,"line_start":148,"line_end":148,"column_start":9,"column_end":14},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":69},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":44361,"byte_end":44366,"line_start":245,"line_end":245,"column_start":35,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":3361}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\arena.rs","byte_start":44517,"byte_end":44522,"line_start":252,"line_end":252,"column_start":34,"column_end":39},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":3361}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\back\\mod.rs","byte_start":46041,"byte_end":46051,"line_start":16,"line_end":16,"column_start":13,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\front\\mod.rs","byte_start":48879,"byte_end":48886,"line_start":23,"line_end":23,"column_start":6,"column_end":13},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\front\\mod.rs","byte_start":49460,"byte_end":49473,"line_start":42,"line_end":42,"column_start":13,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\front\\mod.rs","byte_start":49795,"byte_end":49803,"line_start":57,"line_end":57,"column_start":6,"column_end":14},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\interpolator.rs","byte_start":60802,"byte_end":60808,"line_start":3,"line_end":3,"column_start":13,"column_end":19},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\layouter.rs","byte_start":68074,"byte_end":68082,"line_start":25,"line_end":25,"column_start":42,"column_end":50},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":858},"to":{"krate":2,"index":3361}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\layouter.rs","byte_start":68391,"byte_end":68399,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\namer.rs","byte_start":73261,"byte_end":73266,"line_start":31,"line_end":31,"column_start":6,"column_end":11},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":82873,"byte_end":82887,"line_start":13,"line_end":13,"column_start":6,"column_end":20},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":83391,"byte_end":83405,"line_start":30,"line_end":30,"column_start":16,"column_end":30},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":934},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":84515,"byte_end":84528,"line_start":65,"line_end":65,"column_start":13,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\typifier.rs","byte_start":86420,"byte_end":86434,"line_start":121,"line_end":121,"column_start":10,"column_end":24},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":51842,"byte_end":51852,"line_start":14,"line_end":14,"column_start":44,"column_end":54},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2626},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":53269,"byte_end":53280,"line_start":54,"line_end":54,"column_start":13,"column_end":24},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":53641,"byte_end":53650,"line_start":67,"line_end":67,"column_start":13,"column_end":22},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":55256,"byte_end":55268,"line_start":113,"line_end":113,"column_start":13,"column_end":25},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":57005,"byte_end":57015,"line_start":175,"line_end":175,"column_start":13,"column_end":23},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":58318,"byte_end":58329,"line_start":210,"line_end":210,"column_start":13,"column_end":24},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":58556,"byte_end":58564,"line_start":219,"line_end":219,"column_start":13,"column_end":21},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":59275,"byte_end":59282,"line_start":238,"line_end":238,"column_start":13,"column_end":20},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":59557,"byte_end":59568,"line_start":248,"line_end":248,"column_start":27,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3032},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":59943,"byte_end":59954,"line_start":259,"line_end":259,"column_start":20,"column_end":31},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3032},"to":{"krate":2,"index":2714}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":59990,"byte_end":60001,"line_start":260,"line_end":260,"column_start":33,"column_end":44},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3032},"to":{"krate":2,"index":9892}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\proc\\mod.rs","byte_start":60307,"byte_end":60323,"line_start":271,"line_end":271,"column_start":13,"column_end":29},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":3410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":122915,"byte_end":122925,"line_start":51,"line_end":51,"column_start":6,"column_end":16},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":123724,"byte_end":123742,"line_start":79,"line_end":79,"column_start":21,"column_end":39},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":399},"to":{"krate":2,"index":3189}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":124205,"byte_end":124223,"line_start":95,"line_end":95,"column_start":6,"column_end":24},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":125869,"byte_end":125883,"line_start":147,"line_end":147,"column_start":6,"column_end":20},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":127163,"byte_end":127175,"line_start":186,"line_end":186,"column_start":6,"column_end":18},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":127732,"byte_end":127744,"line_start":205,"line_end":205,"column_start":52,"column_end":64},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":3361}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":127949,"byte_end":127961,"line_start":212,"line_end":212,"column_start":48,"column_end":60},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":3361}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":128621,"byte_end":128633,"line_start":231,"line_end":231,"column_start":6,"column_end":18},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\analyzer.rs","byte_start":148686,"byte_end":148696,"line_start":694,"line_end":694,"column_start":6,"column_end":16},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":167487,"byte_end":167509,"line_start":114,"line_end":114,"column_start":10,"column_end":32},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\expression.rs","byte_start":167847,"byte_end":167856,"line_start":127,"line_end":127,"column_start":13,"column_end":22},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":219175,"byte_end":219187,"line_start":128,"line_end":128,"column_start":10,"column_end":22},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\function.rs","byte_start":221561,"byte_end":221570,"line_start":207,"line_end":207,"column_start":13,"column_end":22},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":242036,"byte_end":242050,"line_start":104,"line_end":104,"column_start":6,"column_end":20},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":650},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\interface.rs","byte_start":250123,"byte_end":250132,"line_start":298,"line_end":298,"column_start":13,"column_end":22},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":261930,"byte_end":261938,"line_start":110,"line_end":110,"column_start":6,"column_end":14},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\type.rs","byte_start":262370,"byte_end":262379,"line_start":129,"line_end":129,"column_start":13,"column_end":22},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":111869,"byte_end":111884,"line_start":44,"line_end":44,"column_start":18,"column_end":33},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":112966,"byte_end":112976,"line_start":83,"line_end":83,"column_start":46,"column_end":56},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2353},"to":{"krate":2,"index":3361}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":115061,"byte_end":115070,"line_start":158,"line_end":158,"column_start":13,"column_end":22},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.5.0\\src\\valid\\mod.rs","byte_start":116226,"byte_end":116235,"line_start":196,"line_end":196,"column_start":6,"column_end":15},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2358},"to":{"krate":4294967295,"index":4294967295}}]}