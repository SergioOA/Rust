{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0","program":"C:\\Users\\sergi\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","bracket_pathfinding","--edition=2018","C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=3468bf0c3165de8d","-C","extra-filename=-3468bf0c3165de8d","--out-dir","c:\\Users\\sergi\\Desktop\\Rust\\birdgame\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\sergi\\Desktop\\Rust\\birdgame\\target\\rls\\debug\\deps","--extern","bracket_algorithm_traits=c:\\Users\\sergi\\Desktop\\Rust\\birdgame\\target\\rls\\debug\\deps\\libbracket_algorithm_traits-18c9bebc7f6ede06.rmeta","--extern","bracket_geometry=c:\\Users\\sergi\\Desktop\\Rust\\birdgame\\target\\rls\\debug\\deps\\libbracket_geometry-210b1fba411fa5bf.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\sergi\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\sergi\\Desktop\\Rust\\birdgame\\target\\rls\\debug\\deps\\libbracket_pathfinding-3468bf0c3165de8d.rmeta"},"prelude":{"crate_id":{"name":"bracket_pathfinding","disambiguator":[5481801141913546517,0]},"crate_root":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src","external_crates":[{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","num":16,"id":{"name":"bracket_algorithm_traits","disambiguator":[16114815748309719399,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\fieldofview.rs","num":17,"id":{"name":"bracket_geometry","disambiguator":[14038793455856053303,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","num":18,"id":{"name":"ultraviolet","disambiguator":[13263412988048659096,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","num":19,"id":{"name":"wide","disambiguator":[17372610138754037838,0]}},{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","num":20,"id":{"name":"bytemuck","disambiguator":[6665665547877275723,0]}}],"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","byte_start":0,"byte_end":250,"line_start":1,"line_end":11,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","byte_start":87,"byte_end":88,"line_start":6,"line_end":6,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":98}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","byte_start":119,"byte_end":120,"line_start":7,"line_end":7,"column_start":30,"column_end":31},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":98}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","byte_start":154,"byte_end":155,"line_start":8,"line_end":8,"column_start":33,"column_end":34},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":98}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","byte_start":204,"byte_end":205,"line_start":9,"line_end":9,"column_start":48,"column_end":49},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":98}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","byte_start":246,"byte_end":247,"line_start":10,"line_end":10,"column_start":40,"column_end":41},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":98}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","byte_start":0,"byte_end":250,"line_start":1,"line_end":11,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":45},{"krate":0,"index":77},{"krate":0,"index":98}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","byte_start":710,"byte_end":723,"line_start":11,"line_end":11,"column_start":8,"column_end":21},"name":"a_star_search","qualname":"::astar::a_star_search","value":"pub fn a_star_search<T>(T, T, &dyn BaseMap) -> NavigationPath where\nT: TryInto<usize>","parent":null,"children":[],"decl_id":null,"docs":" Request an A-Star search. The start and end are specified as index numbers (compatible with your\n BaseMap implementation), and it requires access to your map so as to call distance and exit determinations.\n","sig":null,"attributes":[{"value":"/ Request an A-Star search. The start and end are specified as index numbers (compatible with your","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","byte_start":490,"byte_end":590,"line_start":9,"line_end":9,"column_start":1,"column_end":101}},{"value":"/ BaseMap implementation), and it requires access to your map so as to call distance and exit determinations.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","byte_start":591,"byte_end":702,"line_start":10,"line_end":10,"column_start":1,"column_end":112}}]},{"kind":"Struct","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","byte_start":1202,"byte_end":1216,"line_start":23,"line_end":23,"column_start":12,"column_end":26},"name":"NavigationPath","qualname":"::astar::NavigationPath","value":"NavigationPath { destination, success, steps }","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107}],"decl_id":null,"docs":" Holds the result of an A-Star navigation query.\n `destination` is the index of the target tile.\n `success` is true if it reached the target, false otherwise.\n `steps` is a vector of each step towards the target, *including* the starting position.\n","sig":null,"attributes":[{"value":"/ Holds the result of an A-Star navigation query.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","byte_start":905,"byte_end":956,"line_start":18,"line_end":18,"column_start":1,"column_end":52}},{"value":"/ `destination` is the index of the target tile.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","byte_start":957,"byte_end":1007,"line_start":19,"line_end":19,"column_start":1,"column_end":51}},{"value":"/ `success` is true if it reached the target, false otherwise.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","byte_start":1008,"byte_end":1072,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/ `steps` is a vector of each step towards the target, *including* the starting position.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","byte_start":1073,"byte_end":1164,"line_start":21,"line_end":21,"column_start":1,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","byte_start":1227,"byte_end":1238,"line_start":24,"line_end":24,"column_start":9,"column_end":20},"name":"destination","qualname":"::astar::NavigationPath::destination","value":"usize","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","byte_start":1255,"byte_end":1262,"line_start":25,"line_end":25,"column_start":9,"column_end":16},"name":"success","qualname":"::astar::NavigationPath::success","value":"bool","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","byte_start":1278,"byte_end":1283,"line_start":26,"line_end":26,"column_start":9,"column_end":14},"name":"steps","qualname":"::astar::NavigationPath::steps","value":"std::vec::Vec<usize>","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","byte_start":2081,"byte_end":2084,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<NavigationPath>::new","value":"pub fn new() -> NavigationPath","parent":null,"children":[],"decl_id":null,"docs":" Makes a new (empty) NavigationPath\n","sig":null,"attributes":[{"value":"/ Makes a new (empty) NavigationPath","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","byte_start":2031,"byte_end":2069,"line_start":62,"line_end":62,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\dijkstra.rs","byte_start":6419,"byte_end":6430,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"DijkstraMap","qualname":"::dijkstra::DijkstraMap","value":"DijkstraMap { map }","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62}],"decl_id":null,"docs":" Representation of a Dijkstra flow map.\n map is a vector of floats, having a size equal to size_x * size_y (one per tile).\n size_x and size_y are stored for overflow avoidance.\n max_depth is the maximum number of iterations this search shall support.\n","sig":null,"attributes":[{"value":"/ Representation of a Dijkstra flow map.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\dijkstra.rs","byte_start":6145,"byte_end":6187,"line_start":8,"line_end":8,"column_start":1,"column_end":43}},{"value":"/ map is a vector of floats, having a size equal to size_x * size_y (one per tile).","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\dijkstra.rs","byte_start":6188,"byte_end":6273,"line_start":9,"line_end":9,"column_start":1,"column_end":86}},{"value":"/ size_x and size_y are stored for overflow avoidance.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\dijkstra.rs","byte_start":6274,"byte_end":6330,"line_start":10,"line_end":10,"column_start":1,"column_end":57}},{"value":"/ max_depth is the maximum number of iterations this search shall support.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\dijkstra.rs","byte_start":6331,"byte_end":6407,"line_start":11,"line_end":11,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\dijkstra.rs","byte_start":6441,"byte_end":6444,"line_start":13,"line_end":13,"column_start":9,"column_end":12},"name":"map","qualname":"::dijkstra::DijkstraMap::map","value":"std::vec::Vec<f32>","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\dijkstra.rs","byte_start":6953,"byte_end":6956,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<DijkstraMap>::new","value":"pub fn new<T>(T, T, &[usize], &dyn BaseMap, f32) -> DijkstraMap where\nT: TryInto<usize>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new Dijkstra map, ready to run. You must specify the map size, and link to an implementation\n of a BaseMap trait that can generate exits lists. It then builds the map, giving you a result.\n","sig":null,"attributes":[{"value":"/ Construct a new Dijkstra map, ready to run. You must specify the map size, and link to an implementation","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\dijkstra.rs","byte_start":6730,"byte_end":6838,"line_start":29,"line_end":29,"column_start":5,"column_end":113}},{"value":"/ of a BaseMap trait that can generate exits lists. It then builds the map, giving you a result.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\dijkstra.rs","byte_start":6843,"byte_end":6941,"line_start":30,"line_end":30,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\dijkstra.rs","byte_start":7579,"byte_end":7588,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"new_empty","qualname":"<DijkstraMap>::new_empty","value":"pub fn new_empty<T>(T, T, f32) -> DijkstraMap where T: TryInto<usize>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty Dijkstra map node.\n","sig":null,"attributes":[{"value":"/ Creates an empty Dijkstra map node.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\dijkstra.rs","byte_start":7528,"byte_end":7567,"line_start":54,"line_end":54,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\dijkstra.rs","byte_start":8812,"byte_end":8817,"line_start":97,"line_end":97,"column_start":12,"column_end":17},"name":"clear","qualname":"<DijkstraMap>::clear","value":"pub fn clear(&mut DijkstraMap)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"threaded\"))","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\dijkstra.rs","byte_start":8767,"byte_end":8800,"line_start":96,"line_end":96,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\dijkstra.rs","byte_start":9669,"byte_end":9674,"line_start":117,"line_end":117,"column_start":12,"column_end":17},"name":"build","qualname":"<DijkstraMap>::build","value":"pub fn build(&mut DijkstraMap, &[usize], &dyn BaseMap)","parent":null,"children":[],"decl_id":null,"docs":" Builds the Dijkstra map: iterate from each starting point, to each exit provided by BaseMap's\n exits implementation. Each step adds cost to the current depth, and is discarded if the new\n depth is further than the current depth.\n If you provide more starting points than you have CPUs, automatically branches to a parallel\n version.\n","sig":null,"attributes":[{"value":"/ Builds the Dijkstra map: iterate from each starting point, to each exit provided by BaseMap's","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\dijkstra.rs","byte_start":9293,"byte_end":9390,"line_start":112,"line_end":112,"column_start":5,"column_end":102}},{"value":"/ exits implementation. Each step adds cost to the current depth, and is discarded if the new","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\dijkstra.rs","byte_start":9395,"byte_end":9490,"line_start":113,"line_end":113,"column_start":5,"column_end":100}},{"value":"/ depth is further than the current depth.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\dijkstra.rs","byte_start":9495,"byte_end":9539,"line_start":114,"line_end":114,"column_start":5,"column_end":49}},{"value":"/ If you provide more starting points than you have CPUs, automatically branches to a parallel","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\dijkstra.rs","byte_start":9544,"byte_end":9640,"line_start":115,"line_end":115,"column_start":5,"column_end":101}},{"value":"/ version.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\dijkstra.rs","byte_start":9645,"byte_end":9657,"line_start":116,"line_end":116,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\dijkstra.rs","byte_start":14544,"byte_end":14560,"line_start":250,"line_end":250,"column_start":12,"column_end":28},"name":"find_lowest_exit","qualname":"<DijkstraMap>::find_lowest_exit","value":"pub fn find_lowest_exit(&DijkstraMap, usize, &dyn BaseMap) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"threaded\"))","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\dijkstra.rs","byte_start":14499,"byte_end":14532,"line_start":249,"line_end":249,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\dijkstra.rs","byte_start":15762,"byte_end":15779,"line_start":292,"line_end":292,"column_start":12,"column_end":29},"name":"find_highest_exit","qualname":"<DijkstraMap>::find_highest_exit","value":"pub fn find_highest_exit(&DijkstraMap, usize, &dyn BaseMap) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"threaded\"))","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\dijkstra.rs","byte_start":15717,"byte_end":15750,"line_start":291,"line_end":291,"column_start":5,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\fieldofview.rs","byte_start":17709,"byte_end":17726,"line_start":7,"line_end":7,"column_start":8,"column_end":25},"name":"field_of_view_set","qualname":"::fieldofview::field_of_view_set","value":"pub fn field_of_view_set(Point, i32, &dyn Algorithm2D) -> HashSet<Point>","parent":null,"children":[],"decl_id":null,"docs":" Calculates field-of-view for a map that supports Algorithm2D, returning a HashSet. This is a bit faster\n than coercing the results into a vector, since internally it uses the set for de-duplication.\n","sig":null,"attributes":[{"value":"/ Calculates field-of-view for a map that supports Algorithm2D, returning a HashSet. This is a bit faster","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\fieldofview.rs","byte_start":17496,"byte_end":17603,"line_start":5,"line_end":5,"column_start":1,"column_end":108}},{"value":"/ than coercing the results into a vector, since internally it uses the set for de-duplication.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\fieldofview.rs","byte_start":17604,"byte_end":17701,"line_start":6,"line_end":6,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\fieldofview.rs","byte_start":18155,"byte_end":18168,"line_start":19,"line_end":19,"column_start":8,"column_end":21},"name":"field_of_view","qualname":"::fieldofview::field_of_view","value":"pub fn field_of_view(Point, i32, &dyn Algorithm2D) -> Vec<Point>","parent":null,"children":[],"decl_id":null,"docs":" Calculates field-of-view for a map that supports Algorithm2D.\n","sig":null,"attributes":[{"value":"/ Calculates field-of-view for a map that supports Algorithm2D.","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\fieldofview.rs","byte_start":18082,"byte_end":18147,"line_start":18,"line_end":18,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","byte_start":51,"byte_end":58,"line_start":5,"line_end":5,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","byte_start":1661,"byte_end":1665,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","byte_start":1756,"byte_end":1760,"line_start":47,"line_end":47,"column_start":13,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","byte_start":1778,"byte_end":1782,"line_start":49,"line_end":49,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","byte_start":1898,"byte_end":1902,"line_start":55,"line_end":55,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","byte_start":2010,"byte_end":2024,"line_start":61,"line_end":61,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","byte_start":2492,"byte_end":2497,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\dijkstra.rs","byte_start":6712,"byte_end":6723,"line_start":28,"line_end":28,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","byte_start":1661,"byte_end":1665,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":112},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","byte_start":1756,"byte_end":1760,"line_start":47,"line_end":47,"column_start":13,"column_end":17},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":112},"to":{"krate":2,"index":2714}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","byte_start":1778,"byte_end":1782,"line_start":49,"line_end":49,"column_start":14,"column_end":18},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":112},"to":{"krate":2,"index":2745}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","byte_start":1898,"byte_end":1902,"line_start":55,"line_end":55,"column_start":21,"column_end":25},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":112},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","byte_start":2010,"byte_end":2024,"line_start":61,"line_end":61,"column_start":6,"column_end":20},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\astar.rs","byte_start":2492,"byte_end":2497,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":32},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sergi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-pathfinding-0.7.0\\src\\dijkstra.rs","byte_start":6712,"byte_end":6723,"line_start":28,"line_end":28,"column_start":6,"column_end":17},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":58},"to":{"krate":4294967295,"index":4294967295}}]}